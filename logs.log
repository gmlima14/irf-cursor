2025-06-26 10:11:41,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:11:41,555:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:11:41,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:11:41,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:50:56,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:50:56,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:50:56,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:50:56,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:51:55,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:51:55,047:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:51:55,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 10:51:55,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:08:07,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:08:07,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:08:07,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:08:07,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:10:50,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:10:50,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:10:50,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:10:50,068:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:11:39,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:11:39,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:11:39,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:11:39,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:12:12,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:12:12,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:12:12,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:12:12,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:12:23,909:INFO:Initializing load_model()
2025-06-27 14:12:23,909:INFO:load_model(model_name=/content/drive/MyDrive/IRF - Indice de Risco de Fornecedor/modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 14:43:18,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:43:19,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:43:19,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:43:19,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:43:53,047:INFO:Initializing load_model()
2025-06-27 14:43:53,047:INFO:load_model(model_name=/content/drive/MyDrive/IRF - Indice de Risco de Fornecedor/modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 14:49:00,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:49:00,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:49:00,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:49:00,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:49:39,166:INFO:Initializing load_model()
2025-06-27 14:49:39,167:INFO:load_model(model_name=/content/drive/MyDrive/IRF - Indice de Risco de Fornecedor/modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 14:57:30,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:57:30,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:57:30,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:57:30,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 14:58:08,430:INFO:Initializing load_model()
2025-06-27 14:58:08,431:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates.pkl, platform=None, authentication=None, verbose=True)
2025-06-27 15:10:03,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:10:03,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:10:03,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:10:03,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:11:45,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:11:45,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:11:45,786:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:11:45,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:12:28,262:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:12:28,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:12:28,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:12:28,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:13:04,106:INFO:Initializing load_model()
2025-06-27 15:13:04,107:INFO:load_model(model_name=modelo_treinado_alldates.pkl, platform=None, authentication=None, verbose=True)
2025-06-27 15:14:01,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:14:01,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:14:01,386:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:14:01,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:14:44,185:INFO:Initializing load_model()
2025-06-27 15:14:44,187:INFO:load_model(model_name=modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 15:14:47,703:INFO:Initializing predict_model()
2025-06-27 15:14:47,704:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002302355E1D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023022055300>)
2025-06-27 15:14:47,705:INFO:Checking exceptions
2025-06-27 15:14:47,706:INFO:Preloading libraries
2025-06-27 15:14:47,712:INFO:Set up data.
2025-06-27 15:14:48,504:INFO:Set up index.
2025-06-27 15:30:00,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:30:00,467:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:30:00,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:30:00,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:02,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:02,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:02,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:02,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:09,134:INFO:Initializing load_model()
2025-06-27 15:35:09,135:INFO:load_model(model_name=modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 15:35:13,418:INFO:Initializing predict_model()
2025-06-27 15:35:13,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002231E6C3CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002231E820040>)
2025-06-27 15:35:13,421:INFO:Checking exceptions
2025-06-27 15:35:13,422:INFO:Preloading libraries
2025-06-27 15:35:13,427:INFO:Set up data.
2025-06-27 15:35:13,483:INFO:Set up index.
2025-06-27 15:35:54,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:54,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:54,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:35:54,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:36:30,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:36:30,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:36:30,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:36:30,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:36:37,375:INFO:Initializing load_model()
2025-06-27 15:36:37,377:INFO:load_model(model_name=modelo_treinado_alldates.pkl, platform=None, authentication=None, verbose=True)
2025-06-27 15:39:39,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:39:39,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:39:39,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:39:39,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:39:43,488:INFO:Initializing load_model()
2025-06-27 15:39:43,490:INFO:load_model(model_name=modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 15:39:46,285:INFO:Initializing predict_model()
2025-06-27 15:39:46,286:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022D8E682350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022D8EB0B740>)
2025-06-27 15:39:46,287:INFO:Checking exceptions
2025-06-27 15:39:46,287:INFO:Preloading libraries
2025-06-27 15:39:46,298:INFO:Set up data.
2025-06-27 15:39:46,369:INFO:Set up index.
2025-06-27 15:48:22,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:48:22,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:48:22,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:48:22,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:53:59,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:53:59,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:53:59,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 15:53:59,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:14:20,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:14:20,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:14:20,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:14:20,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:17:47,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:17:47,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:17:47,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:17:47,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:18:40,849:INFO:Initializing load_model()
2025-06-27 16:18:40,849:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates.pkl, platform=None, authentication=None, verbose=True)
2025-06-27 16:19:28,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:28,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:28,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:28,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:53,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:53,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:53,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:19:53,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:20:22,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:20:22,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:20:22,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:20:22,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:22:09,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:22:09,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:22:09,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:22:09,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:24:30,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:24:30,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:24:30,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:24:30,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:25:27,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:25:27,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:25:27,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:25:27,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:27:35,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:27:35,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:27:35,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:27:35,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:28:15,696:INFO:Initializing load_model()
2025-06-27 16:28:15,702:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 16:28:45,532:INFO:Initializing predict_model()
2025-06-27 16:28:45,533:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F30D36C090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F30D8E6480>)
2025-06-27 16:28:45,535:INFO:Checking exceptions
2025-06-27 16:28:45,535:INFO:Preloading libraries
2025-06-27 16:28:45,536:INFO:Set up data.
2025-06-27 16:28:45,896:INFO:Set up index.
2025-06-27 16:45:17,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:45:17,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:45:17,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:45:17,172:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:46:33,553:INFO:Initializing load_model()
2025-06-27 16:46:33,554:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 16:47:07,419:INFO:Initializing predict_model()
2025-06-27 16:47:07,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000269E1630610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000269DFAFDD00>)
2025-06-27 16:47:07,419:INFO:Checking exceptions
2025-06-27 16:47:07,420:INFO:Preloading libraries
2025-06-27 16:47:07,427:INFO:Set up data.
2025-06-27 16:47:07,533:INFO:Set up index.
2025-06-27 16:48:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:48:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:48:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:48:50,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 16:49:53,711:INFO:Initializing load_model()
2025-06-27 16:49:53,711:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 16:50:24,093:INFO:Initializing predict_model()
2025-06-27 16:50:24,093:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002037B866910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020379E79D00>)
2025-06-27 16:50:24,093:INFO:Checking exceptions
2025-06-27 16:50:24,093:INFO:Preloading libraries
2025-06-27 16:50:24,099:INFO:Set up data.
2025-06-27 16:50:24,149:INFO:Set up index.
2025-06-27 17:15:21,236:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 17:15:21,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 17:15:21,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 17:15:21,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-27 17:16:11,849:INFO:Initializing load_model()
2025-06-27 17:16:11,850:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-06-27 17:16:43,469:INFO:Initializing predict_model()
2025-06-27 17:16:43,469:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BDC186C910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BDC0631C60>)
2025-06-27 17:16:43,470:INFO:Checking exceptions
2025-06-27 17:16:43,470:INFO:Preloading libraries
2025-06-27 17:16:43,477:INFO:Set up data.
2025-06-27 17:16:43,601:INFO:Set up index.
2025-07-01 15:37:14,082:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 15:37:14,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 15:37:14,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 15:37:14,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-01 15:38:12,341:INFO:Initializing load_model()
2025-07-01 15:38:12,341:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-01 15:38:42,735:INFO:Initializing predict_model()
2025-07-01 15:38:42,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001883C93D610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018834C51DA0>)
2025-07-01 15:38:42,735:INFO:Checking exceptions
2025-07-01 15:38:42,736:INFO:Preloading libraries
2025-07-01 15:38:42,736:INFO:Set up data.
2025-07-01 15:38:42,762:INFO:Set up index.
2025-07-02 14:35:39,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:35:39,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:35:39,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:35:39,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:36:15,736:INFO:Initializing load_model()
2025-07-02 14:36:15,737:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-02 14:36:46,028:INFO:Initializing predict_model()
2025-07-02 14:36:46,033:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000128C009A650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000128B7CEDDA0>)
2025-07-02 14:36:46,035:INFO:Checking exceptions
2025-07-02 14:36:46,035:INFO:Preloading libraries
2025-07-02 14:36:46,046:INFO:Set up data.
2025-07-02 14:36:46,107:INFO:Set up index.
2025-07-02 14:56:30,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:30,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:30,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:30,521:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:57:04,167:INFO:Initializing load_model()
2025-07-02 14:57:04,172:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-02 14:57:35,426:INFO:Initializing predict_model()
2025-07-02 14:57:35,426:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F3D4E90410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F3CCB1DDA0>)
2025-07-02 14:57:35,426:INFO:Checking exceptions
2025-07-02 14:57:35,426:INFO:Preloading libraries
2025-07-02 14:57:35,426:INFO:Set up data.
2025-07-02 14:57:35,463:INFO:Set up index.
2025-07-02 15:02:49,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:02:49,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:02:49,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:02:49,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:03:43,225:INFO:Initializing load_model()
2025-07-02 15:03:43,225:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-02 15:04:14,080:INFO:Initializing predict_model()
2025-07-02 15:04:14,080:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001582F36AC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001582F26DE40>)
2025-07-02 15:04:14,080:INFO:Checking exceptions
2025-07-02 15:04:14,080:INFO:Preloading libraries
2025-07-02 15:04:14,093:INFO:Set up data.
2025-07-02 15:04:14,137:INFO:Set up index.
2025-07-02 15:05:57,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:05:57,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:05:57,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:05:57,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:06:46,186:INFO:Initializing load_model()
2025-07-02 15:06:46,186:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-02 15:07:18,411:INFO:Initializing predict_model()
2025-07-02 15:07:18,411:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F136D2E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023F0B3DDDA0>)
2025-07-02 15:07:18,411:INFO:Checking exceptions
2025-07-02 15:07:18,411:INFO:Preloading libraries
2025-07-02 15:07:18,411:INFO:Set up data.
2025-07-02 15:07:18,432:INFO:Set up index.
2025-07-03 17:09:07,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:09:07,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:09:07,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:09:07,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:09:45,796:INFO:Initializing load_model()
2025-07-03 17:09:45,796:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-03 17:10:15,832:INFO:Initializing predict_model()
2025-07-03 17:10:15,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E87B69A410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E87B58DDA0>)
2025-07-03 17:10:15,832:INFO:Checking exceptions
2025-07-03 17:10:15,832:INFO:Preloading libraries
2025-07-03 17:10:15,840:INFO:Set up data.
2025-07-03 17:10:15,861:INFO:Set up index.
2025-07-03 17:27:21,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:27:21,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:27:21,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:27:21,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-03 17:27:53,104:INFO:Initializing load_model()
2025-07-03 17:27:53,104:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-03 17:28:22,554:INFO:Initializing predict_model()
2025-07-03 17:28:22,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA8E7E82D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FA8674A520>)
2025-07-03 17:28:22,554:INFO:Checking exceptions
2025-07-03 17:28:22,554:INFO:Preloading libraries
2025-07-03 17:28:22,554:INFO:Set up data.
2025-07-03 17:28:22,563:INFO:Set up index.
2025-07-04 11:14:09,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 11:14:09,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 11:14:09,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 11:14:09,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 11:14:38,568:INFO:Initializing load_model()
2025-07-04 11:14:38,568:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-04 11:15:55,067:INFO:Initializing predict_model()
2025-07-04 11:15:55,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002784DDAB290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002784D8BA5C0>)
2025-07-04 11:15:55,069:INFO:Checking exceptions
2025-07-04 11:15:55,069:INFO:Preloading libraries
2025-07-04 11:15:55,070:INFO:Set up data.
2025-07-04 11:15:55,091:INFO:Set up index.
2025-07-04 13:11:31,986:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:11:31,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:11:31,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:11:31,988:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:12:02,722:INFO:Initializing load_model()
2025-07-04 13:12:02,723:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-04 13:14:18,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:14:18,802:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:14:18,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:14:18,813:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:14:47,875:INFO:Initializing load_model()
2025-07-04 13:14:47,876:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-04 13:16:19,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:16:19,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:16:19,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:16:19,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:16:52,236:INFO:Initializing load_model()
2025-07-04 13:16:52,239:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-04 13:17:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:17:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:17:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:17:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-04 13:18:18,021:INFO:Initializing load_model()
2025-07-04 13:18:18,021:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_alldates, platform=None, authentication=None, verbose=True)
2025-07-04 13:18:54,958:INFO:Initializing predict_model()
2025-07-04 13:18:54,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002418472FD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000241849AA5C0>)
2025-07-04 13:18:54,958:INFO:Checking exceptions
2025-07-04 13:18:54,958:INFO:Preloading libraries
2025-07-04 13:18:54,958:INFO:Set up data.
2025-07-04 13:18:54,975:INFO:Set up index.
2025-07-07 15:36:30,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 15:36:30,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 15:36:30,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 15:36:30,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:11:03,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:11:03,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:11:03,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:11:03,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:12:27,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:12:27,890:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:12:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:12:27,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:13:09,716:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:123: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-07 16:13:09,845:INFO:PyCaret ClassificationExperiment
2025-07-07 16:13:09,846:INFO:Logging name: clf-default-name
2025-07-07 16:13:09,846:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-07 16:13:09,846:INFO:version 3.3.2
2025-07-07 16:13:09,846:INFO:Initializing setup()
2025-07-07 16:13:09,846:INFO:self.USI: 4561
2025-07-07 16:13:09,846:INFO:self._variable_keys: {'y_train', 'is_multiclass', 'data', 'USI', '_available_plots', 'n_jobs_param', 'y_test', 'X', 'fold_generator', 'y', 'memory', 'logging_param', 'idx', 'seed', 'log_plots_param', 'X_test', 'target_param', 'X_train', 'fix_imbalance', 'exp_id', 'gpu_n_jobs_param', 'gpu_param', 'fold_shuffle_param', 'html_param', 'pipeline', '_ml_usecase', 'fold_groups_param', 'exp_name_log'}
2025-07-07 16:13:09,846:INFO:Checking environment
2025-07-07 16:13:09,846:INFO:python_version: 3.11.9
2025-07-07 16:13:09,846:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-07 16:13:09,850:INFO:machine: AMD64
2025-07-07 16:13:09,907:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-07 16:13:09,916:INFO:Memory: svmem(total=16844595200, available=867172352, percent=94.9, used=15977422848, free=867172352)
2025-07-07 16:13:09,916:INFO:Physical Core: 4
2025-07-07 16:13:09,916:INFO:Logical Core: 8
2025-07-07 16:13:09,916:INFO:Checking libraries
2025-07-07 16:13:09,916:INFO:System:
2025-07-07 16:13:09,916:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-07 16:13:09,916:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-07 16:13:09,917:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-07 16:13:09,917:INFO:PyCaret required dependencies:
2025-07-07 16:13:10,009:INFO:                 pip: 25.1.1
2025-07-07 16:13:10,009:INFO:          setuptools: 65.5.0
2025-07-07 16:13:10,009:INFO:             pycaret: 3.3.2
2025-07-07 16:13:10,010:INFO:             IPython: 9.3.0
2025-07-07 16:13:10,010:INFO:          ipywidgets: 8.1.7
2025-07-07 16:13:10,010:INFO:                tqdm: 4.67.1
2025-07-07 16:13:10,010:INFO:               numpy: 1.26.4
2025-07-07 16:13:10,010:INFO:              pandas: 2.1.4
2025-07-07 16:13:10,010:INFO:              jinja2: 3.1.6
2025-07-07 16:13:10,010:INFO:               scipy: 1.11.4
2025-07-07 16:13:10,010:INFO:              joblib: 1.3.2
2025-07-07 16:13:10,010:INFO:             sklearn: 1.4.2
2025-07-07 16:13:10,010:INFO:                pyod: 2.0.5
2025-07-07 16:13:10,010:INFO:            imblearn: 0.13.0
2025-07-07 16:13:10,010:INFO:   category_encoders: 2.7.0
2025-07-07 16:13:10,010:INFO:            lightgbm: 4.6.0
2025-07-07 16:13:10,010:INFO:               numba: 0.61.2
2025-07-07 16:13:10,010:INFO:            requests: 2.32.4
2025-07-07 16:13:10,010:INFO:          matplotlib: 3.7.5
2025-07-07 16:13:10,010:INFO:          scikitplot: 0.3.7
2025-07-07 16:13:10,010:INFO:         yellowbrick: 1.5
2025-07-07 16:13:10,010:INFO:              plotly: 5.24.1
2025-07-07 16:13:10,010:INFO:    plotly-resampler: Not installed
2025-07-07 16:13:10,010:INFO:             kaleido: 1.0.0
2025-07-07 16:13:10,010:INFO:           schemdraw: 0.15
2025-07-07 16:13:10,010:INFO:         statsmodels: 0.14.4
2025-07-07 16:13:10,010:INFO:              sktime: 0.26.0
2025-07-07 16:13:10,010:INFO:               tbats: 1.1.3
2025-07-07 16:13:10,010:INFO:            pmdarima: 2.0.4
2025-07-07 16:13:10,010:INFO:              psutil: 7.0.0
2025-07-07 16:13:10,010:INFO:          markupsafe: 3.0.2
2025-07-07 16:13:10,010:INFO:             pickle5: Not installed
2025-07-07 16:13:10,010:INFO:         cloudpickle: 3.1.1
2025-07-07 16:13:10,010:INFO:         deprecation: 2.1.0
2025-07-07 16:13:10,010:INFO:              xxhash: 3.5.0
2025-07-07 16:13:10,010:INFO:           wurlitzer: Not installed
2025-07-07 16:13:10,010:INFO:PyCaret optional dependencies:
2025-07-07 16:13:10,034:INFO:                shap: Not installed
2025-07-07 16:13:10,034:INFO:           interpret: Not installed
2025-07-07 16:13:10,034:INFO:                umap: Not installed
2025-07-07 16:13:10,034:INFO:     ydata_profiling: Not installed
2025-07-07 16:13:10,034:INFO:  explainerdashboard: Not installed
2025-07-07 16:13:10,034:INFO:             autoviz: Not installed
2025-07-07 16:13:10,034:INFO:           fairlearn: Not installed
2025-07-07 16:13:10,034:INFO:          deepchecks: Not installed
2025-07-07 16:13:10,034:INFO:             xgboost: Not installed
2025-07-07 16:13:10,034:INFO:            catboost: Not installed
2025-07-07 16:13:10,034:INFO:              kmodes: Not installed
2025-07-07 16:13:10,034:INFO:             mlxtend: Not installed
2025-07-07 16:13:10,034:INFO:       statsforecast: Not installed
2025-07-07 16:13:10,034:INFO:        tune_sklearn: Not installed
2025-07-07 16:13:10,034:INFO:                 ray: Not installed
2025-07-07 16:13:10,034:INFO:            hyperopt: Not installed
2025-07-07 16:13:10,034:INFO:              optuna: Not installed
2025-07-07 16:13:10,034:INFO:               skopt: Not installed
2025-07-07 16:13:10,034:INFO:              mlflow: Not installed
2025-07-07 16:13:10,034:INFO:              gradio: Not installed
2025-07-07 16:13:10,034:INFO:             fastapi: Not installed
2025-07-07 16:13:10,034:INFO:             uvicorn: Not installed
2025-07-07 16:13:10,034:INFO:              m2cgen: Not installed
2025-07-07 16:13:10,034:INFO:           evidently: Not installed
2025-07-07 16:13:10,034:INFO:               fugue: Not installed
2025-07-07 16:13:10,034:INFO:           streamlit: Not installed
2025-07-07 16:13:10,034:INFO:             prophet: Not installed
2025-07-07 16:13:10,034:INFO:None
2025-07-07 16:13:10,034:INFO:Set up data.
2025-07-07 16:13:10,062:INFO:Set up folding strategy.
2025-07-07 16:13:10,062:INFO:Set up train/test split.
2025-07-07 16:13:10,148:INFO:Set up index.
2025-07-07 16:13:10,158:INFO:Assigning column types.
2025-07-07 16:13:10,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-07 16:13:10,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,379:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-07 16:13:10,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:13:10,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,575:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-07 16:13:10,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:10,717:INFO:Preparing preprocessing pipeline...
2025-07-07 16:13:10,717:INFO:Set up simple imputation.
2025-07-07 16:13:10,731:INFO:Set up encoding of categorical features.
2025-07-07 16:13:10,731:INFO:Set up imbalanced handling.
2025-07-07 16:13:10,743:INFO:Set up column name cleaning.
2025-07-07 16:13:11,715:INFO:Finished creating preprocessing pipeline.
2025-07-07 16:13:11,715:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-07 16:13:11,715:INFO:Creating final display dataframe.
2025-07-07 16:13:12,698:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155076, 8)
4        Transformed data shape       (226961, 8)
5   Transformed train set shape       (180438, 8)
6    Transformed test set shape        (46523, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4561
2025-07-07 16:13:12,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:12,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:12,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:12,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:13:12,868:INFO:setup() successfully completed in 3.03s...............
2025-07-07 16:13:12,868:INFO:Initializing create_model()
2025-07-07 16:13:12,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-07 16:13:12,868:INFO:Checking exceptions
2025-07-07 16:13:12,872:INFO:Importing libraries
2025-07-07 16:13:12,872:INFO:Copying training dataset
2025-07-07 16:13:12,963:INFO:Defining folds
2025-07-07 16:13:12,963:INFO:Declaring metric variables
2025-07-07 16:13:12,964:INFO:Importing untrained model
2025-07-07 16:13:12,964:INFO:Extra Trees Classifier Imported successfully
2025-07-07 16:13:12,964:INFO:Starting cross validation
2025-07-07 16:13:12,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-07 16:14:15,664:INFO:Calculating mean and std
2025-07-07 16:14:15,665:INFO:Creating metrics dataframe
2025-07-07 16:14:15,676:INFO:Finalizing model
2025-07-07 16:14:20,852:INFO:Uploading results into container
2025-07-07 16:14:20,853:INFO:Uploading model into container now
2025-07-07 16:14:20,873:INFO:_master_model_container: 1
2025-07-07 16:14:20,873:INFO:_display_container: 2
2025-07-07 16:14:20,875:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:14:20,875:INFO:create_model() successfully completed......................................
2025-07-07 16:14:21,077:INFO:Initializing tune_model()
2025-07-07 16:14:21,078:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-07 16:14:21,078:INFO:Checking exceptions
2025-07-07 16:14:21,137:INFO:Copying training dataset
2025-07-07 16:14:21,209:INFO:Checking base model
2025-07-07 16:14:21,209:INFO:Base model : Extra Trees Classifier
2025-07-07 16:14:21,210:INFO:Declaring metric variables
2025-07-07 16:14:21,211:INFO:Defining Hyperparameters
2025-07-07 16:14:21,305:INFO:Tuning with n_jobs=-1
2025-07-07 16:14:21,305:INFO:Initializing RandomizedSearchCV
2025-07-07 16:16:38,582:INFO:best_params: {'actual_estimator__n_estimators': 40, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.5, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2025-07-07 16:16:38,585:INFO:Hyperparameter search completed
2025-07-07 16:16:38,586:INFO:SubProcess create_model() called ==================================
2025-07-07 16:16:38,588:INFO:Initializing create_model()
2025-07-07 16:16:38,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C6BE435150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 40, 'min_samples_split': 2, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.5, 'max_features': 'log2', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': True})
2025-07-07 16:16:38,589:INFO:Checking exceptions
2025-07-07 16:16:38,590:INFO:Importing libraries
2025-07-07 16:16:38,590:INFO:Copying training dataset
2025-07-07 16:16:38,678:INFO:Defining folds
2025-07-07 16:16:38,678:INFO:Declaring metric variables
2025-07-07 16:16:38,679:INFO:Importing untrained model
2025-07-07 16:16:38,679:INFO:Declaring custom model
2025-07-07 16:16:38,681:INFO:Extra Trees Classifier Imported successfully
2025-07-07 16:16:38,681:INFO:Starting cross validation
2025-07-07 16:16:38,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-07 16:16:43,286:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:43,840:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:43,980:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:44,030:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:44,031:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:44,124:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:44,146:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:44,241:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:45,983:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:46,256:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-07 16:16:46,275:INFO:Calculating mean and std
2025-07-07 16:16:46,275:INFO:Creating metrics dataframe
2025-07-07 16:16:46,280:INFO:Finalizing model
2025-07-07 16:16:47,976:INFO:Uploading results into container
2025-07-07 16:16:47,976:INFO:Uploading model into container now
2025-07-07 16:16:47,976:INFO:_master_model_container: 2
2025-07-07 16:16:47,976:INFO:_display_container: 3
2025-07-07 16:16:47,976:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=9, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.5, min_samples_leaf=4,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=40, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:16:47,976:INFO:create_model() successfully completed......................................
2025-07-07 16:16:48,111:INFO:SubProcess create_model() end ==================================
2025-07-07 16:16:48,111:INFO:choose_better activated
2025-07-07 16:16:48,111:INFO:SubProcess create_model() called ==================================
2025-07-07 16:16:48,111:INFO:Initializing create_model()
2025-07-07 16:16:48,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-07 16:16:48,111:INFO:Checking exceptions
2025-07-07 16:16:48,111:INFO:Importing libraries
2025-07-07 16:16:48,111:INFO:Copying training dataset
2025-07-07 16:16:48,204:INFO:Defining folds
2025-07-07 16:16:48,204:INFO:Declaring metric variables
2025-07-07 16:16:48,204:INFO:Importing untrained model
2025-07-07 16:16:48,204:INFO:Declaring custom model
2025-07-07 16:16:48,211:INFO:Extra Trees Classifier Imported successfully
2025-07-07 16:16:48,211:INFO:Starting cross validation
2025-07-07 16:16:48,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-07 16:17:37,788:INFO:Calculating mean and std
2025-07-07 16:17:37,795:INFO:Creating metrics dataframe
2025-07-07 16:17:37,818:INFO:Finalizing model
2025-07-07 16:17:43,148:INFO:Uploading results into container
2025-07-07 16:17:43,149:INFO:Uploading model into container now
2025-07-07 16:17:43,149:INFO:_master_model_container: 3
2025-07-07 16:17:43,149:INFO:_display_container: 4
2025-07-07 16:17:43,152:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:17:43,152:INFO:create_model() successfully completed......................................
2025-07-07 16:17:43,313:INFO:SubProcess create_model() end ==================================
2025-07-07 16:17:43,313:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for Accuracy is 0.9273
2025-07-07 16:17:43,313:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=9, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.5, min_samples_leaf=4,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=40, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for Accuracy is 0.8311
2025-07-07 16:17:43,317:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) is best model
2025-07-07 16:17:43,317:INFO:choose_better completed
2025-07-07 16:17:43,317:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-07 16:17:43,342:INFO:_master_model_container: 3
2025-07-07 16:17:43,342:INFO:_display_container: 3
2025-07-07 16:17:43,342:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:17:43,342:INFO:tune_model() successfully completed......................................
2025-07-07 16:17:43,486:INFO:Initializing finalize_model()
2025-07-07 16:17:43,486:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-07 16:17:43,487:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:17:43,533:INFO:Initializing create_model()
2025-07-07 16:17:43,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C6C04A3210>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-07 16:17:43,533:INFO:Checking exceptions
2025-07-07 16:17:43,533:INFO:Importing libraries
2025-07-07 16:17:43,533:INFO:Copying training dataset
2025-07-07 16:17:43,540:INFO:Defining folds
2025-07-07 16:17:43,541:INFO:Declaring metric variables
2025-07-07 16:17:43,542:INFO:Importing untrained model
2025-07-07 16:17:43,542:INFO:Declaring custom model
2025-07-07 16:17:43,543:INFO:Extra Trees Classifier Imported successfully
2025-07-07 16:17:43,547:INFO:Cross validation set to False
2025-07-07 16:17:43,548:INFO:Fitting Model
2025-07-07 16:17:52,069:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-07 16:17:52,069:INFO:create_model() successfully completed......................................
2025-07-07 16:17:52,173:INFO:_master_model_container: 3
2025-07-07 16:17:52,173:INFO:_display_container: 3
2025-07-07 16:17:52,193:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-07 16:17:52,193:INFO:finalize_model() successfully completed......................................
2025-07-07 16:17:52,353:INFO:Initializing save_model()
2025-07-07 16:17:52,353:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-07 16:17:52,354:INFO:Adding model into prep_pipe
2025-07-07 16:17:52,354:WARNING:Only Model saved as it was a pipeline.
2025-07-07 16:18:22,300:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor.pkl saved in current working directory
2025-07-07 16:18:22,324:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-07 16:18:22,325:INFO:save_model() successfully completed......................................
2025-07-07 16:22:47,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:22:47,567:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:22:47,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:22:47,568:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 16:23:28,188:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:123: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-07 16:23:58,110:INFO:PyCaret ClassificationExperiment
2025-07-07 16:23:58,111:INFO:Logging name: clf-default-name
2025-07-07 16:23:58,112:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-07 16:23:58,112:INFO:version 3.3.2
2025-07-07 16:23:58,113:INFO:Initializing setup()
2025-07-07 16:23:58,114:INFO:self.USI: 0e51
2025-07-07 16:23:58,115:INFO:self._variable_keys: {'X_test', 'logging_param', 'pipeline', 'gpu_param', 'X_train', 'data', 'fold_generator', 'gpu_n_jobs_param', 'y', 'log_plots_param', 'y_train', '_ml_usecase', 'X', '_available_plots', 'is_multiclass', 'n_jobs_param', 'USI', 'target_param', 'idx', 'memory', 'fix_imbalance', 'exp_id', 'seed', 'y_test', 'html_param', 'fold_groups_param', 'fold_shuffle_param', 'exp_name_log'}
2025-07-07 16:23:58,115:INFO:Checking environment
2025-07-07 16:23:58,116:INFO:python_version: 3.11.9
2025-07-07 16:23:58,118:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-07 16:23:58,119:INFO:machine: AMD64
2025-07-07 16:23:58,195:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-07 16:23:58,211:INFO:Memory: svmem(total=16844595200, available=1137446912, percent=93.2, used=15707148288, free=1137446912)
2025-07-07 16:23:58,211:INFO:Physical Core: 4
2025-07-07 16:23:58,213:INFO:Logical Core: 8
2025-07-07 16:23:58,213:INFO:Checking libraries
2025-07-07 16:23:58,213:INFO:System:
2025-07-07 16:23:58,213:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-07 16:23:58,215:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-07 16:23:58,215:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-07 16:23:58,216:INFO:PyCaret required dependencies:
2025-07-07 16:23:58,313:INFO:                 pip: 25.1.1
2025-07-07 16:23:58,314:INFO:          setuptools: 65.5.0
2025-07-07 16:23:58,315:INFO:             pycaret: 3.3.2
2025-07-07 16:23:58,315:INFO:             IPython: 9.3.0
2025-07-07 16:23:58,315:INFO:          ipywidgets: 8.1.7
2025-07-07 16:23:58,315:INFO:                tqdm: 4.67.1
2025-07-07 16:23:58,315:INFO:               numpy: 1.26.4
2025-07-07 16:23:58,315:INFO:              pandas: 2.1.4
2025-07-07 16:23:58,318:INFO:              jinja2: 3.1.6
2025-07-07 16:23:58,318:INFO:               scipy: 1.11.4
2025-07-07 16:23:58,319:INFO:              joblib: 1.3.2
2025-07-07 16:23:58,319:INFO:             sklearn: 1.4.2
2025-07-07 16:23:58,320:INFO:                pyod: 2.0.5
2025-07-07 16:23:58,320:INFO:            imblearn: 0.13.0
2025-07-07 16:23:58,321:INFO:   category_encoders: 2.7.0
2025-07-07 16:23:58,321:INFO:            lightgbm: 4.6.0
2025-07-07 16:23:58,322:INFO:               numba: 0.61.2
2025-07-07 16:23:58,322:INFO:            requests: 2.32.4
2025-07-07 16:23:58,323:INFO:          matplotlib: 3.7.5
2025-07-07 16:23:58,323:INFO:          scikitplot: 0.3.7
2025-07-07 16:23:58,323:INFO:         yellowbrick: 1.5
2025-07-07 16:23:58,323:INFO:              plotly: 5.24.1
2025-07-07 16:23:58,323:INFO:    plotly-resampler: Not installed
2025-07-07 16:23:58,323:INFO:             kaleido: 1.0.0
2025-07-07 16:23:58,323:INFO:           schemdraw: 0.15
2025-07-07 16:23:58,323:INFO:         statsmodels: 0.14.4
2025-07-07 16:23:58,323:INFO:              sktime: 0.26.0
2025-07-07 16:23:58,325:INFO:               tbats: 1.1.3
2025-07-07 16:23:58,325:INFO:            pmdarima: 2.0.4
2025-07-07 16:23:58,325:INFO:              psutil: 7.0.0
2025-07-07 16:23:58,325:INFO:          markupsafe: 3.0.2
2025-07-07 16:23:58,325:INFO:             pickle5: Not installed
2025-07-07 16:23:58,325:INFO:         cloudpickle: 3.1.1
2025-07-07 16:23:58,325:INFO:         deprecation: 2.1.0
2025-07-07 16:23:58,325:INFO:              xxhash: 3.5.0
2025-07-07 16:23:58,325:INFO:           wurlitzer: Not installed
2025-07-07 16:23:58,325:INFO:PyCaret optional dependencies:
2025-07-07 16:23:58,361:INFO:                shap: Not installed
2025-07-07 16:23:58,361:INFO:           interpret: Not installed
2025-07-07 16:23:58,361:INFO:                umap: Not installed
2025-07-07 16:23:58,361:INFO:     ydata_profiling: Not installed
2025-07-07 16:23:58,361:INFO:  explainerdashboard: Not installed
2025-07-07 16:23:58,361:INFO:             autoviz: Not installed
2025-07-07 16:23:58,362:INFO:           fairlearn: Not installed
2025-07-07 16:23:58,362:INFO:          deepchecks: Not installed
2025-07-07 16:23:58,362:INFO:             xgboost: Not installed
2025-07-07 16:23:58,362:INFO:            catboost: Not installed
2025-07-07 16:23:58,362:INFO:              kmodes: Not installed
2025-07-07 16:23:58,362:INFO:             mlxtend: Not installed
2025-07-07 16:23:58,362:INFO:       statsforecast: Not installed
2025-07-07 16:23:58,362:INFO:        tune_sklearn: Not installed
2025-07-07 16:23:58,362:INFO:                 ray: Not installed
2025-07-07 16:23:58,362:INFO:            hyperopt: Not installed
2025-07-07 16:23:58,362:INFO:              optuna: Not installed
2025-07-07 16:23:58,362:INFO:               skopt: Not installed
2025-07-07 16:23:58,362:INFO:              mlflow: Not installed
2025-07-07 16:23:58,362:INFO:              gradio: Not installed
2025-07-07 16:23:58,362:INFO:             fastapi: Not installed
2025-07-07 16:23:58,362:INFO:             uvicorn: Not installed
2025-07-07 16:23:58,363:INFO:              m2cgen: Not installed
2025-07-07 16:23:58,363:INFO:           evidently: Not installed
2025-07-07 16:23:58,363:INFO:               fugue: Not installed
2025-07-07 16:23:58,363:INFO:           streamlit: Not installed
2025-07-07 16:23:58,363:INFO:             prophet: Not installed
2025-07-07 16:23:58,363:INFO:None
2025-07-07 16:23:58,363:INFO:Set up data.
2025-07-07 16:23:58,399:INFO:Set up folding strategy.
2025-07-07 16:23:58,400:INFO:Set up train/test split.
2025-07-07 16:23:58,506:INFO:Set up index.
2025-07-07 16:23:58,517:INFO:Assigning column types.
2025-07-07 16:23:58,541:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-07 16:23:58,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-07 16:23:58,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:23:58,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:58,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:58,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-07 16:23:58,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:23:58,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:58,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:58,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-07 16:23:58,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:23:58,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:58,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-07 16:23:59,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,087:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-07 16:23:59,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:23:59,405:INFO:Preparing preprocessing pipeline...
2025-07-07 16:23:59,415:INFO:Set up simple imputation.
2025-07-07 16:23:59,442:INFO:Set up encoding of categorical features.
2025-07-07 16:23:59,442:INFO:Set up imbalanced handling.
2025-07-07 16:23:59,453:INFO:Set up column name cleaning.
2025-07-07 16:24:00,089:INFO:Finished creating preprocessing pipeline.
2025-07-07 16:24:00,101:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-07 16:24:00,101:INFO:Creating final display dataframe.
2025-07-07 16:24:00,984:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155076, 8)
4        Transformed data shape       (226961, 8)
5   Transformed train set shape       (180438, 8)
6    Transformed test set shape        (46523, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0e51
2025-07-07 16:24:01,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:24:01,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:24:01,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:24:01,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-07 16:24:01,882:INFO:setup() successfully completed in 3.79s...............
2025-07-07 16:24:01,882:INFO:Initializing create_model()
2025-07-07 16:24:01,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B801848610>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-07 16:24:01,882:INFO:Checking exceptions
2025-07-07 16:24:01,893:INFO:Importing libraries
2025-07-07 16:24:01,893:INFO:Copying training dataset
2025-07-07 16:24:02,007:INFO:Defining folds
2025-07-07 16:24:02,007:INFO:Declaring metric variables
2025-07-07 16:24:02,008:INFO:Importing untrained model
2025-07-07 16:24:02,008:INFO:Extra Trees Classifier Imported successfully
2025-07-07 16:24:02,010:INFO:Starting cross validation
2025-07-07 16:24:02,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-07 16:25:17,786:INFO:Calculating mean and std
2025-07-07 16:25:17,796:INFO:Creating metrics dataframe
2025-07-07 16:25:17,804:INFO:Finalizing model
2025-07-07 16:25:26,910:INFO:Uploading results into container
2025-07-07 16:25:26,912:INFO:Uploading model into container now
2025-07-07 16:25:26,952:INFO:_master_model_container: 1
2025-07-07 16:25:26,953:INFO:_display_container: 2
2025-07-07 16:25:26,958:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-07 16:25:26,960:INFO:create_model() successfully completed......................................
2025-07-08 10:18:43,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:18:43,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:18:43,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:18:43,699:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:19:42,489:INFO:Initializing load_model()
2025-07-08 10:19:42,490:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-08 10:20:29,911:INFO:Initializing predict_model()
2025-07-08 10:20:29,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028B60ABAED0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028B6068A520>)
2025-07-08 10:20:29,911:INFO:Checking exceptions
2025-07-08 10:20:29,916:INFO:Preloading libraries
2025-07-08 10:20:29,917:INFO:Set up data.
2025-07-08 10:20:29,932:INFO:Set up index.
2025-07-08 10:30:14,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:30:14,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:30:14,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:30:14,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:30:48,797:INFO:Initializing load_model()
2025-07-08 10:30:48,797:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-08 10:32:22,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:32:22,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:32:22,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:32:22,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:32:54,107:INFO:Initializing load_model()
2025-07-08 10:32:54,108:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-08 10:33:33,879:INFO:Initializing predict_model()
2025-07-08 10:33:33,879:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BEB8BCE150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002BEB884E520>)
2025-07-08 10:33:33,879:INFO:Checking exceptions
2025-07-08 10:33:33,879:INFO:Preloading libraries
2025-07-08 10:33:33,879:INFO:Set up data.
2025-07-08 10:33:33,895:INFO:Set up index.
2025-07-08 10:53:06,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:53:06,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:53:06,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:53:06,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 10:53:39,104:INFO:Initializing load_model()
2025-07-08 10:53:39,104:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-08 10:54:19,394:INFO:Initializing predict_model()
2025-07-08 10:54:19,394:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C3658FD010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C3655BE520>)
2025-07-08 10:54:19,394:INFO:Checking exceptions
2025-07-08 10:54:19,394:INFO:Preloading libraries
2025-07-08 10:54:19,396:INFO:Set up data.
2025-07-08 10:54:19,413:INFO:Set up index.
2025-07-08 11:07:53,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:07:53,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:07:53,624:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:07:53,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:08:29,616:INFO:Initializing load_model()
2025-07-08 11:08:29,616:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-08 11:09:02,857:INFO:Initializing predict_model()
2025-07-08 11:09:02,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000274FB58D610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000274FF3DE700>)
2025-07-08 11:09:02,858:INFO:Checking exceptions
2025-07-08 11:09:02,859:INFO:Preloading libraries
2025-07-08 11:09:02,859:INFO:Set up data.
2025-07-08 11:09:02,875:INFO:Set up index.
2025-07-08 11:22:31,220:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:22:31,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:22:31,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:22:31,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:23:12,837:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:129: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-08 11:23:18,328:INFO:PyCaret ClassificationExperiment
2025-07-08 11:23:18,328:INFO:Logging name: clf-default-name
2025-07-08 11:23:18,328:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-08 11:23:18,328:INFO:version 3.3.2
2025-07-08 11:23:18,330:INFO:Initializing setup()
2025-07-08 11:23:18,330:INFO:self.USI: b2c5
2025-07-08 11:23:18,330:INFO:self._variable_keys: {'target_param', 'y_train', 'log_plots_param', 'exp_name_log', 'USI', 'y', 'X', 'X_test', 'fold_groups_param', '_ml_usecase', 'X_train', 'fix_imbalance', 'html_param', 'exp_id', 'fold_generator', 'seed', 'n_jobs_param', 'is_multiclass', '_available_plots', 'pipeline', 'gpu_param', 'y_test', 'data', 'logging_param', 'gpu_n_jobs_param', 'memory', 'fold_shuffle_param', 'idx'}
2025-07-08 11:23:18,331:INFO:Checking environment
2025-07-08 11:23:18,332:INFO:python_version: 3.11.9
2025-07-08 11:23:18,332:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-08 11:23:18,332:INFO:machine: AMD64
2025-07-08 11:23:18,382:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-08 11:23:18,390:INFO:Memory: svmem(total=16844595200, available=1324314624, percent=92.1, used=15520280576, free=1324314624)
2025-07-08 11:23:18,390:INFO:Physical Core: 4
2025-07-08 11:23:18,391:INFO:Logical Core: 8
2025-07-08 11:23:18,391:INFO:Checking libraries
2025-07-08 11:23:18,391:INFO:System:
2025-07-08 11:23:18,393:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-08 11:23:18,394:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-08 11:23:18,394:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-08 11:23:18,395:INFO:PyCaret required dependencies:
2025-07-08 11:23:18,443:INFO:                 pip: 25.1.1
2025-07-08 11:23:18,443:INFO:          setuptools: 65.5.0
2025-07-08 11:23:18,443:INFO:             pycaret: 3.3.2
2025-07-08 11:23:18,443:INFO:             IPython: 9.3.0
2025-07-08 11:23:18,443:INFO:          ipywidgets: 8.1.7
2025-07-08 11:23:18,443:INFO:                tqdm: 4.67.1
2025-07-08 11:23:18,443:INFO:               numpy: 1.26.4
2025-07-08 11:23:18,443:INFO:              pandas: 2.1.4
2025-07-08 11:23:18,443:INFO:              jinja2: 3.1.6
2025-07-08 11:23:18,444:INFO:               scipy: 1.11.4
2025-07-08 11:23:18,444:INFO:              joblib: 1.3.2
2025-07-08 11:23:18,444:INFO:             sklearn: 1.4.2
2025-07-08 11:23:18,444:INFO:                pyod: 2.0.5
2025-07-08 11:23:18,444:INFO:            imblearn: 0.13.0
2025-07-08 11:23:18,444:INFO:   category_encoders: 2.7.0
2025-07-08 11:23:18,444:INFO:            lightgbm: 4.6.0
2025-07-08 11:23:18,444:INFO:               numba: 0.61.2
2025-07-08 11:23:18,444:INFO:            requests: 2.32.4
2025-07-08 11:23:18,444:INFO:          matplotlib: 3.7.5
2025-07-08 11:23:18,444:INFO:          scikitplot: 0.3.7
2025-07-08 11:23:18,444:INFO:         yellowbrick: 1.5
2025-07-08 11:23:18,444:INFO:              plotly: 5.24.1
2025-07-08 11:23:18,444:INFO:    plotly-resampler: Not installed
2025-07-08 11:23:18,444:INFO:             kaleido: 1.0.0
2025-07-08 11:23:18,444:INFO:           schemdraw: 0.15
2025-07-08 11:23:18,444:INFO:         statsmodels: 0.14.4
2025-07-08 11:23:18,444:INFO:              sktime: 0.26.0
2025-07-08 11:23:18,444:INFO:               tbats: 1.1.3
2025-07-08 11:23:18,444:INFO:            pmdarima: 2.0.4
2025-07-08 11:23:18,444:INFO:              psutil: 7.0.0
2025-07-08 11:23:18,444:INFO:          markupsafe: 3.0.2
2025-07-08 11:23:18,444:INFO:             pickle5: Not installed
2025-07-08 11:23:18,444:INFO:         cloudpickle: 3.1.1
2025-07-08 11:23:18,444:INFO:         deprecation: 2.1.0
2025-07-08 11:23:18,444:INFO:              xxhash: 3.5.0
2025-07-08 11:23:18,444:INFO:           wurlitzer: Not installed
2025-07-08 11:23:18,444:INFO:PyCaret optional dependencies:
2025-07-08 11:23:18,460:INFO:                shap: Not installed
2025-07-08 11:23:18,461:INFO:           interpret: Not installed
2025-07-08 11:23:18,461:INFO:                umap: Not installed
2025-07-08 11:23:18,461:INFO:     ydata_profiling: Not installed
2025-07-08 11:23:18,461:INFO:  explainerdashboard: Not installed
2025-07-08 11:23:18,461:INFO:             autoviz: Not installed
2025-07-08 11:23:18,461:INFO:           fairlearn: Not installed
2025-07-08 11:23:18,461:INFO:          deepchecks: Not installed
2025-07-08 11:23:18,461:INFO:             xgboost: Not installed
2025-07-08 11:23:18,461:INFO:            catboost: Not installed
2025-07-08 11:23:18,461:INFO:              kmodes: Not installed
2025-07-08 11:23:18,461:INFO:             mlxtend: Not installed
2025-07-08 11:23:18,461:INFO:       statsforecast: Not installed
2025-07-08 11:23:18,461:INFO:        tune_sklearn: Not installed
2025-07-08 11:23:18,461:INFO:                 ray: Not installed
2025-07-08 11:23:18,461:INFO:            hyperopt: Not installed
2025-07-08 11:23:18,461:INFO:              optuna: Not installed
2025-07-08 11:23:18,461:INFO:               skopt: Not installed
2025-07-08 11:23:18,461:INFO:              mlflow: Not installed
2025-07-08 11:23:18,461:INFO:              gradio: Not installed
2025-07-08 11:23:18,461:INFO:             fastapi: Not installed
2025-07-08 11:23:18,461:INFO:             uvicorn: Not installed
2025-07-08 11:23:18,461:INFO:              m2cgen: Not installed
2025-07-08 11:23:18,461:INFO:           evidently: Not installed
2025-07-08 11:23:18,461:INFO:               fugue: Not installed
2025-07-08 11:23:18,461:INFO:           streamlit: Not installed
2025-07-08 11:23:18,461:INFO:             prophet: Not installed
2025-07-08 11:23:18,461:INFO:None
2025-07-08 11:23:18,461:INFO:Set up data.
2025-07-08 11:23:18,466:INFO:Set up folding strategy.
2025-07-08 11:23:18,466:INFO:Set up train/test split.
2025-07-08 11:23:18,477:INFO:Set up index.
2025-07-08 11:23:18,478:INFO:Assigning column types.
2025-07-08 11:23:18,482:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-08 11:23:18,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,519:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,590:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,625:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-08 11:23:18,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-08 11:23:18,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,746:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-08 11:23:18,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:18,859:INFO:Preparing preprocessing pipeline...
2025-07-08 11:23:18,862:INFO:Set up simple imputation.
2025-07-08 11:23:18,867:INFO:Set up encoding of categorical features.
2025-07-08 11:23:18,867:INFO:Set up imbalanced handling.
2025-07-08 11:23:18,868:INFO:Set up column name cleaning.
2025-07-08 11:23:19,038:INFO:Finished creating preprocessing pipeline.
2025-07-08 11:23:19,048:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-08 11:23:19,048:INFO:Creating final display dataframe.
2025-07-08 11:23:19,389:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (35823, 8)
4        Transformed data shape        (53703, 8)
5   Transformed train set shape        (42956, 8)
6    Transformed test set shape        (10747, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b2c5
2025-07-08 11:23:19,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:19,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:19,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:19,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-08 11:23:19,526:INFO:setup() successfully completed in 1.22s...............
2025-07-08 11:23:19,526:INFO:Initializing create_model()
2025-07-08 11:23:19,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019FC9DE7010>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-08 11:23:19,526:INFO:Checking exceptions
2025-07-08 11:23:19,530:INFO:Importing libraries
2025-07-08 11:23:19,530:INFO:Copying training dataset
2025-07-08 11:23:19,542:INFO:Defining folds
2025-07-08 11:23:19,542:INFO:Declaring metric variables
2025-07-08 11:23:19,542:INFO:Importing untrained model
2025-07-08 11:23:19,543:INFO:Extra Trees Classifier Imported successfully
2025-07-08 11:23:19,543:INFO:Starting cross validation
2025-07-08 11:23:19,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-08 11:23:41,736:INFO:Calculating mean and std
2025-07-08 11:23:41,737:INFO:Creating metrics dataframe
2025-07-08 11:23:41,743:INFO:Finalizing model
2025-07-08 11:23:42,728:INFO:Uploading results into container
2025-07-08 11:23:42,729:INFO:Uploading model into container now
2025-07-08 11:23:42,746:INFO:_master_model_container: 1
2025-07-08 11:23:42,747:INFO:_display_container: 2
2025-07-08 11:23:42,748:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-08 11:23:42,749:INFO:create_model() successfully completed......................................
2025-07-08 11:23:42,982:INFO:Initializing finalize_model()
2025-07-08 11:23:42,983:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019FC9DE7010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-08 11:23:42,984:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-08 11:23:42,989:INFO:Initializing create_model()
2025-07-08 11:23:42,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019FC9DE7010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-08 11:23:42,991:INFO:Checking exceptions
2025-07-08 11:23:42,991:INFO:Importing libraries
2025-07-08 11:23:42,992:INFO:Copying training dataset
2025-07-08 11:23:42,993:INFO:Defining folds
2025-07-08 11:23:42,993:INFO:Declaring metric variables
2025-07-08 11:23:42,994:INFO:Importing untrained model
2025-07-08 11:23:42,994:INFO:Declaring custom model
2025-07-08 11:23:42,995:INFO:Extra Trees Classifier Imported successfully
2025-07-08 11:23:42,997:INFO:Cross validation set to False
2025-07-08 11:23:42,997:INFO:Fitting Model
2025-07-08 11:23:44,281:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-08 11:23:44,281:INFO:create_model() successfully completed......................................
2025-07-08 11:23:44,373:INFO:_master_model_container: 1
2025-07-08 11:23:44,373:INFO:_display_container: 2
2025-07-08 11:23:44,388:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-08 11:23:44,388:INFO:finalize_model() successfully completed......................................
2025-07-08 11:23:44,490:INFO:Initializing save_model()
2025-07-08 11:23:44,490:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-08 11:23:44,491:INFO:Adding model into prep_pipe
2025-07-08 11:23:44,491:WARNING:Only Model saved as it was a pipeline.
2025-07-08 11:23:52,184:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual.pkl saved in current working directory
2025-07-08 11:23:52,196:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-08 11:23:52,196:INFO:save_model() successfully completed......................................
2025-07-08 11:35:23,965:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:35:23,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:35:23,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:35:23,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 11:36:20,723:INFO:Initializing load_model()
2025-07-08 11:36:20,723:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, platform=None, authentication=None, verbose=True)
2025-07-08 11:36:29,117:INFO:Initializing predict_model()
2025-07-08 11:36:29,119:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021E50CE8190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021E4FB4A5C0>)
2025-07-08 11:36:29,120:INFO:Checking exceptions
2025-07-08 11:36:29,120:INFO:Preloading libraries
2025-07-08 11:36:29,120:INFO:Set up data.
2025-07-08 11:36:29,131:INFO:Set up index.
2025-07-08 14:35:32,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 14:35:32,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 14:35:32,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 14:35:32,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 14:36:10,308:INFO:Initializing load_model()
2025-07-08 14:36:10,308:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, platform=None, authentication=None, verbose=True)
2025-07-08 14:36:21,063:INFO:Initializing predict_model()
2025-07-08 14:36:21,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA38673550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002DA383BE5C0>)
2025-07-08 14:36:21,063:INFO:Checking exceptions
2025-07-08 14:36:21,063:INFO:Preloading libraries
2025-07-08 14:36:21,063:INFO:Set up data.
2025-07-08 14:36:21,086:INFO:Set up index.
2025-07-09 08:54:39,183:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 08:54:39,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 08:54:39,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 08:54:39,194:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:05,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:05,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:05,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:05,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:12,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:12,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:12,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:12,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:23,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:23,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:23,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:18:23,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:19:15,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:19:15,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:19:15,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:19:15,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:39,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:39,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:39,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:39,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:48,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:48,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:48,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:20:48,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:22:13,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:22:13,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:22:13,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:22:13,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:23:06,174:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:133: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-09 14:23:15,230:INFO:PyCaret ClassificationExperiment
2025-07-09 14:23:15,230:INFO:Logging name: clf-default-name
2025-07-09 14:23:15,230:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 14:23:15,230:INFO:version 3.3.2
2025-07-09 14:23:15,230:INFO:Initializing setup()
2025-07-09 14:23:15,230:INFO:self.USI: f6e0
2025-07-09 14:23:15,230:INFO:self._variable_keys: {'fold_shuffle_param', '_available_plots', 'pipeline', 'fold_generator', 'exp_id', 'idx', 'exp_name_log', 'gpu_n_jobs_param', 'y_train', 'y', 'data', 'html_param', 'n_jobs_param', 'gpu_param', 'is_multiclass', 'fix_imbalance', 'target_param', 'logging_param', 'USI', 'log_plots_param', 'y_test', 'X_train', 'X_test', '_ml_usecase', 'X', 'seed', 'fold_groups_param', 'memory'}
2025-07-09 14:23:15,230:INFO:Checking environment
2025-07-09 14:23:15,230:INFO:python_version: 3.11.9
2025-07-09 14:23:15,236:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-09 14:23:15,236:INFO:machine: AMD64
2025-07-09 14:23:15,270:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-09 14:23:15,277:INFO:Memory: svmem(total=16844595200, available=2016792576, percent=88.0, used=14827802624, free=2016792576)
2025-07-09 14:23:15,277:INFO:Physical Core: 4
2025-07-09 14:23:15,277:INFO:Logical Core: 8
2025-07-09 14:23:15,277:INFO:Checking libraries
2025-07-09 14:23:15,277:INFO:System:
2025-07-09 14:23:15,277:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-09 14:23:15,277:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-09 14:23:15,277:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-09 14:23:15,277:INFO:PyCaret required dependencies:
2025-07-09 14:23:15,333:INFO:                 pip: 25.1.1
2025-07-09 14:23:15,333:INFO:          setuptools: 65.5.0
2025-07-09 14:23:15,333:INFO:             pycaret: 3.3.2
2025-07-09 14:23:15,333:INFO:             IPython: 9.3.0
2025-07-09 14:23:15,333:INFO:          ipywidgets: 8.1.7
2025-07-09 14:23:15,333:INFO:                tqdm: 4.67.1
2025-07-09 14:23:15,333:INFO:               numpy: 1.26.4
2025-07-09 14:23:15,333:INFO:              pandas: 2.1.4
2025-07-09 14:23:15,333:INFO:              jinja2: 3.1.6
2025-07-09 14:23:15,333:INFO:               scipy: 1.11.4
2025-07-09 14:23:15,333:INFO:              joblib: 1.3.2
2025-07-09 14:23:15,333:INFO:             sklearn: 1.4.2
2025-07-09 14:23:15,333:INFO:                pyod: 2.0.5
2025-07-09 14:23:15,333:INFO:            imblearn: 0.13.0
2025-07-09 14:23:15,333:INFO:   category_encoders: 2.7.0
2025-07-09 14:23:15,333:INFO:            lightgbm: 4.6.0
2025-07-09 14:23:15,333:INFO:               numba: 0.61.2
2025-07-09 14:23:15,333:INFO:            requests: 2.32.4
2025-07-09 14:23:15,333:INFO:          matplotlib: 3.7.5
2025-07-09 14:23:15,333:INFO:          scikitplot: 0.3.7
2025-07-09 14:23:15,333:INFO:         yellowbrick: 1.5
2025-07-09 14:23:15,333:INFO:              plotly: 5.24.1
2025-07-09 14:23:15,333:INFO:    plotly-resampler: Not installed
2025-07-09 14:23:15,333:INFO:             kaleido: 1.0.0
2025-07-09 14:23:15,333:INFO:           schemdraw: 0.15
2025-07-09 14:23:15,333:INFO:         statsmodels: 0.14.4
2025-07-09 14:23:15,333:INFO:              sktime: 0.26.0
2025-07-09 14:23:15,333:INFO:               tbats: 1.1.3
2025-07-09 14:23:15,333:INFO:            pmdarima: 2.0.4
2025-07-09 14:23:15,333:INFO:              psutil: 7.0.0
2025-07-09 14:23:15,333:INFO:          markupsafe: 3.0.2
2025-07-09 14:23:15,333:INFO:             pickle5: Not installed
2025-07-09 14:23:15,333:INFO:         cloudpickle: 3.1.1
2025-07-09 14:23:15,333:INFO:         deprecation: 2.1.0
2025-07-09 14:23:15,333:INFO:              xxhash: 3.5.0
2025-07-09 14:23:15,333:INFO:           wurlitzer: Not installed
2025-07-09 14:23:15,333:INFO:PyCaret optional dependencies:
2025-07-09 14:23:15,345:INFO:                shap: Not installed
2025-07-09 14:23:15,345:INFO:           interpret: Not installed
2025-07-09 14:23:15,345:INFO:                umap: Not installed
2025-07-09 14:23:15,345:INFO:     ydata_profiling: Not installed
2025-07-09 14:23:15,345:INFO:  explainerdashboard: Not installed
2025-07-09 14:23:15,345:INFO:             autoviz: Not installed
2025-07-09 14:23:15,345:INFO:           fairlearn: Not installed
2025-07-09 14:23:15,345:INFO:          deepchecks: Not installed
2025-07-09 14:23:15,345:INFO:             xgboost: Not installed
2025-07-09 14:23:15,345:INFO:            catboost: Not installed
2025-07-09 14:23:15,345:INFO:              kmodes: Not installed
2025-07-09 14:23:15,345:INFO:             mlxtend: Not installed
2025-07-09 14:23:15,345:INFO:       statsforecast: Not installed
2025-07-09 14:23:15,345:INFO:        tune_sklearn: Not installed
2025-07-09 14:23:15,345:INFO:                 ray: Not installed
2025-07-09 14:23:15,345:INFO:            hyperopt: Not installed
2025-07-09 14:23:15,345:INFO:              optuna: Not installed
2025-07-09 14:23:15,345:INFO:               skopt: Not installed
2025-07-09 14:23:15,345:INFO:              mlflow: Not installed
2025-07-09 14:23:15,345:INFO:              gradio: Not installed
2025-07-09 14:23:15,345:INFO:             fastapi: Not installed
2025-07-09 14:23:15,345:INFO:             uvicorn: Not installed
2025-07-09 14:23:15,345:INFO:              m2cgen: Not installed
2025-07-09 14:23:15,345:INFO:           evidently: Not installed
2025-07-09 14:23:15,345:INFO:               fugue: Not installed
2025-07-09 14:23:15,345:INFO:           streamlit: Not installed
2025-07-09 14:23:15,345:INFO:             prophet: Not installed
2025-07-09 14:23:15,345:INFO:None
2025-07-09 14:23:15,345:INFO:Set up data.
2025-07-09 14:23:15,345:INFO:Set up folding strategy.
2025-07-09 14:23:15,355:INFO:Set up train/test split.
2025-07-09 14:23:15,360:INFO:Set up index.
2025-07-09 14:23:15,369:INFO:Assigning column types.
2025-07-09 14:23:15,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 14:23:15,435:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,440:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,537:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,578:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 14:23:15,649:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,729:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:23:15,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,771:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 14:23:15,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:15,935:INFO:Preparing preprocessing pipeline...
2025-07-09 14:23:15,935:INFO:Set up simple imputation.
2025-07-09 14:23:15,944:INFO:Set up encoding of categorical features.
2025-07-09 14:23:15,944:INFO:Set up imbalanced handling.
2025-07-09 14:23:15,945:INFO:Set up column name cleaning.
2025-07-09 14:23:16,305:INFO:Finished creating preprocessing pipeline.
2025-07-09 14:23:16,315:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-09 14:23:16,315:INFO:Creating final display dataframe.
2025-07-09 14:23:16,761:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (35911, 8)
4        Transformed data shape        (53794, 8)
5   Transformed train set shape        (43020, 8)
6    Transformed test set shape        (10774, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f6e0
2025-07-09 14:23:16,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:16,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:16,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:16,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:23:16,956:INFO:setup() successfully completed in 1.74s...............
2025-07-09 14:23:16,956:INFO:Initializing create_model()
2025-07-09 14:23:16,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001519EC22190>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:23:16,956:INFO:Checking exceptions
2025-07-09 14:23:16,965:INFO:Importing libraries
2025-07-09 14:23:16,965:INFO:Copying training dataset
2025-07-09 14:23:16,984:INFO:Defining folds
2025-07-09 14:23:16,984:INFO:Declaring metric variables
2025-07-09 14:23:16,984:INFO:Importing untrained model
2025-07-09 14:23:16,984:INFO:Extra Trees Classifier Imported successfully
2025-07-09 14:23:16,984:INFO:Starting cross validation
2025-07-09 14:23:16,984:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:23:40,334:INFO:Calculating mean and std
2025-07-09 14:23:40,340:INFO:Creating metrics dataframe
2025-07-09 14:23:40,344:INFO:Finalizing model
2025-07-09 14:23:41,585:INFO:Uploading results into container
2025-07-09 14:23:41,586:INFO:Uploading model into container now
2025-07-09 14:23:41,615:INFO:_master_model_container: 1
2025-07-09 14:23:41,615:INFO:_display_container: 2
2025-07-09 14:23:41,615:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-09 14:23:41,615:INFO:create_model() successfully completed......................................
2025-07-09 14:23:41,940:INFO:Initializing finalize_model()
2025-07-09 14:23:41,940:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001519EC22190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-09 14:23:41,943:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-09 14:23:41,960:INFO:Initializing create_model()
2025-07-09 14:23:41,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001519EC22190>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:23:41,960:INFO:Checking exceptions
2025-07-09 14:23:41,966:INFO:Importing libraries
2025-07-09 14:23:41,966:INFO:Copying training dataset
2025-07-09 14:23:41,966:INFO:Defining folds
2025-07-09 14:23:41,966:INFO:Declaring metric variables
2025-07-09 14:23:41,966:INFO:Importing untrained model
2025-07-09 14:23:41,966:INFO:Declaring custom model
2025-07-09 14:23:41,966:INFO:Extra Trees Classifier Imported successfully
2025-07-09 14:23:41,974:INFO:Cross validation set to False
2025-07-09 14:23:41,974:INFO:Fitting Model
2025-07-09 14:23:43,694:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 14:23:43,694:INFO:create_model() successfully completed......................................
2025-07-09 14:23:43,810:INFO:_master_model_container: 1
2025-07-09 14:23:43,810:INFO:_display_container: 2
2025-07-09 14:23:43,836:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 14:23:43,836:INFO:finalize_model() successfully completed......................................
2025-07-09 14:23:43,965:INFO:Initializing save_model()
2025-07-09 14:23:43,965:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-09 14:23:43,965:INFO:Adding model into prep_pipe
2025-07-09 14:23:43,965:WARNING:Only Model saved as it was a pipeline.
2025-07-09 14:23:51,779:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual.pkl saved in current working directory
2025-07-09 14:23:51,790:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 14:23:51,790:INFO:save_model() successfully completed......................................
2025-07-09 14:24:02,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:24:02,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:24:02,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:24:02,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:24:53,605:INFO:Initializing load_model()
2025-07-09 14:24:53,605:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, platform=None, authentication=None, verbose=True)
2025-07-09 14:25:02,194:INFO:Initializing predict_model()
2025-07-09 14:25:02,194:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002208AB87E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002208AD85EE0>)
2025-07-09 14:25:02,194:INFO:Checking exceptions
2025-07-09 14:25:02,194:INFO:Preloading libraries
2025-07-09 14:25:02,194:INFO:Set up data.
2025-07-09 14:25:02,218:INFO:Set up index.
2025-07-09 15:08:25,222:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:08:25,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:08:25,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:08:25,226:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:09:20,331:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:118: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-09 15:09:29,532:INFO:PyCaret ClassificationExperiment
2025-07-09 15:09:29,532:INFO:Logging name: clf-default-name
2025-07-09 15:09:29,532:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 15:09:29,532:INFO:version 3.3.2
2025-07-09 15:09:29,532:INFO:Initializing setup()
2025-07-09 15:09:29,532:INFO:self.USI: 0605
2025-07-09 15:09:29,532:INFO:self._variable_keys: {'gpu_param', 'data', 'html_param', 'memory', 'gpu_n_jobs_param', 'USI', 'y_train', 'y', 'fold_shuffle_param', 'idx', '_available_plots', 'X', 'target_param', 'X_test', 'seed', 'exp_id', 'pipeline', 'exp_name_log', 'n_jobs_param', 'log_plots_param', '_ml_usecase', 'fold_generator', 'fold_groups_param', 'fix_imbalance', 'X_train', 'logging_param', 'is_multiclass', 'y_test'}
2025-07-09 15:09:29,532:INFO:Checking environment
2025-07-09 15:09:29,532:INFO:python_version: 3.11.9
2025-07-09 15:09:29,537:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-09 15:09:29,537:INFO:machine: AMD64
2025-07-09 15:09:29,567:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-09 15:09:29,576:INFO:Memory: svmem(total=16844595200, available=1196634112, percent=92.9, used=15647961088, free=1196634112)
2025-07-09 15:09:29,576:INFO:Physical Core: 4
2025-07-09 15:09:29,576:INFO:Logical Core: 8
2025-07-09 15:09:29,579:INFO:Checking libraries
2025-07-09 15:09:29,580:INFO:System:
2025-07-09 15:09:29,580:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-09 15:09:29,580:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-09 15:09:29,580:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-09 15:09:29,580:INFO:PyCaret required dependencies:
2025-07-09 15:09:29,635:INFO:                 pip: 25.1.1
2025-07-09 15:09:29,635:INFO:          setuptools: 65.5.0
2025-07-09 15:09:29,635:INFO:             pycaret: 3.3.2
2025-07-09 15:09:29,636:INFO:             IPython: 9.3.0
2025-07-09 15:09:29,636:INFO:          ipywidgets: 8.1.7
2025-07-09 15:09:29,636:INFO:                tqdm: 4.67.1
2025-07-09 15:09:29,636:INFO:               numpy: 1.26.4
2025-07-09 15:09:29,637:INFO:              pandas: 2.1.4
2025-07-09 15:09:29,637:INFO:              jinja2: 3.1.6
2025-07-09 15:09:29,637:INFO:               scipy: 1.11.4
2025-07-09 15:09:29,637:INFO:              joblib: 1.3.2
2025-07-09 15:09:29,637:INFO:             sklearn: 1.4.2
2025-07-09 15:09:29,637:INFO:                pyod: 2.0.5
2025-07-09 15:09:29,637:INFO:            imblearn: 0.13.0
2025-07-09 15:09:29,637:INFO:   category_encoders: 2.7.0
2025-07-09 15:09:29,637:INFO:            lightgbm: 4.6.0
2025-07-09 15:09:29,637:INFO:               numba: 0.61.2
2025-07-09 15:09:29,637:INFO:            requests: 2.32.4
2025-07-09 15:09:29,637:INFO:          matplotlib: 3.7.5
2025-07-09 15:09:29,637:INFO:          scikitplot: 0.3.7
2025-07-09 15:09:29,637:INFO:         yellowbrick: 1.5
2025-07-09 15:09:29,637:INFO:              plotly: 5.24.1
2025-07-09 15:09:29,637:INFO:    plotly-resampler: Not installed
2025-07-09 15:09:29,637:INFO:             kaleido: 1.0.0
2025-07-09 15:09:29,637:INFO:           schemdraw: 0.15
2025-07-09 15:09:29,637:INFO:         statsmodels: 0.14.4
2025-07-09 15:09:29,637:INFO:              sktime: 0.26.0
2025-07-09 15:09:29,637:INFO:               tbats: 1.1.3
2025-07-09 15:09:29,637:INFO:            pmdarima: 2.0.4
2025-07-09 15:09:29,638:INFO:              psutil: 7.0.0
2025-07-09 15:09:29,638:INFO:          markupsafe: 3.0.2
2025-07-09 15:09:29,638:INFO:             pickle5: Not installed
2025-07-09 15:09:29,638:INFO:         cloudpickle: 3.1.1
2025-07-09 15:09:29,638:INFO:         deprecation: 2.1.0
2025-07-09 15:09:29,638:INFO:              xxhash: 3.5.0
2025-07-09 15:09:29,638:INFO:           wurlitzer: Not installed
2025-07-09 15:09:29,638:INFO:PyCaret optional dependencies:
2025-07-09 15:09:29,646:INFO:                shap: Not installed
2025-07-09 15:09:29,646:INFO:           interpret: Not installed
2025-07-09 15:09:29,646:INFO:                umap: Not installed
2025-07-09 15:09:29,646:INFO:     ydata_profiling: Not installed
2025-07-09 15:09:29,646:INFO:  explainerdashboard: Not installed
2025-07-09 15:09:29,646:INFO:             autoviz: Not installed
2025-07-09 15:09:29,646:INFO:           fairlearn: Not installed
2025-07-09 15:09:29,646:INFO:          deepchecks: Not installed
2025-07-09 15:09:29,646:INFO:             xgboost: Not installed
2025-07-09 15:09:29,646:INFO:            catboost: Not installed
2025-07-09 15:09:29,646:INFO:              kmodes: Not installed
2025-07-09 15:09:29,646:INFO:             mlxtend: Not installed
2025-07-09 15:09:29,646:INFO:       statsforecast: Not installed
2025-07-09 15:09:29,646:INFO:        tune_sklearn: Not installed
2025-07-09 15:09:29,646:INFO:                 ray: Not installed
2025-07-09 15:09:29,646:INFO:            hyperopt: Not installed
2025-07-09 15:09:29,646:INFO:              optuna: Not installed
2025-07-09 15:09:29,646:INFO:               skopt: Not installed
2025-07-09 15:09:29,646:INFO:              mlflow: Not installed
2025-07-09 15:09:29,646:INFO:              gradio: Not installed
2025-07-09 15:09:29,646:INFO:             fastapi: Not installed
2025-07-09 15:09:29,646:INFO:             uvicorn: Not installed
2025-07-09 15:09:29,646:INFO:              m2cgen: Not installed
2025-07-09 15:09:29,651:INFO:           evidently: Not installed
2025-07-09 15:09:29,651:INFO:               fugue: Not installed
2025-07-09 15:09:29,651:INFO:           streamlit: Not installed
2025-07-09 15:09:29,651:INFO:             prophet: Not installed
2025-07-09 15:09:29,651:INFO:None
2025-07-09 15:09:29,651:INFO:Set up data.
2025-07-09 15:09:29,651:INFO:Set up folding strategy.
2025-07-09 15:09:29,651:INFO:Set up train/test split.
2025-07-09 15:09:29,665:INFO:Set up index.
2025-07-09 15:09:29,665:INFO:Assigning column types.
2025-07-09 15:09:29,676:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 15:09:29,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 15:09:29,724:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 15:09:29,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:29,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:29,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 15:09:29,889:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 15:09:29,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:29,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:29,916:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 15:09:29,981:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 15:09:30,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 15:09:30,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,162:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 15:09:30,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:30,399:INFO:Preparing preprocessing pipeline...
2025-07-09 15:09:30,399:INFO:Set up simple imputation.
2025-07-09 15:09:30,408:INFO:Set up encoding of categorical features.
2025-07-09 15:09:30,408:INFO:Set up imbalanced handling.
2025-07-09 15:09:30,408:INFO:Set up column name cleaning.
2025-07-09 15:09:30,601:INFO:Finished creating preprocessing pipeline.
2025-07-09 15:09:30,614:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-09 15:09:30,623:INFO:Creating final display dataframe.
2025-07-09 15:09:31,152:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (35911, 8)
4        Transformed data shape        (53794, 8)
5   Transformed train set shape        (43020, 8)
6    Transformed test set shape        (10774, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0605
2025-07-09 15:09:31,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:31,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:31,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:31,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 15:09:31,361:INFO:setup() successfully completed in 1.87s...............
2025-07-09 15:09:31,361:INFO:Initializing create_model()
2025-07-09 15:09:31,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C7CD491650>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 15:09:31,361:INFO:Checking exceptions
2025-07-09 15:09:31,370:INFO:Importing libraries
2025-07-09 15:09:31,377:INFO:Copying training dataset
2025-07-09 15:09:31,393:INFO:Defining folds
2025-07-09 15:09:31,393:INFO:Declaring metric variables
2025-07-09 15:09:31,393:INFO:Importing untrained model
2025-07-09 15:09:31,393:INFO:Extra Trees Classifier Imported successfully
2025-07-09 15:09:31,393:INFO:Starting cross validation
2025-07-09 15:09:31,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 15:10:12,781:INFO:Calculating mean and std
2025-07-09 15:10:12,789:INFO:Creating metrics dataframe
2025-07-09 15:10:12,798:INFO:Finalizing model
2025-07-09 15:10:14,422:INFO:Uploading results into container
2025-07-09 15:10:14,427:INFO:Uploading model into container now
2025-07-09 15:10:14,451:INFO:_master_model_container: 1
2025-07-09 15:10:14,461:INFO:_display_container: 2
2025-07-09 15:10:14,462:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-09 15:10:14,462:INFO:create_model() successfully completed......................................
2025-07-09 15:10:14,752:INFO:Initializing finalize_model()
2025-07-09 15:10:14,757:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C7CD491650>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-09 15:10:14,761:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-09 15:10:14,763:INFO:Initializing create_model()
2025-07-09 15:10:14,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C7CD491650>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 15:10:14,773:INFO:Checking exceptions
2025-07-09 15:10:14,775:INFO:Importing libraries
2025-07-09 15:10:14,775:INFO:Copying training dataset
2025-07-09 15:10:14,776:INFO:Defining folds
2025-07-09 15:10:14,776:INFO:Declaring metric variables
2025-07-09 15:10:14,777:INFO:Importing untrained model
2025-07-09 15:10:14,777:INFO:Declaring custom model
2025-07-09 15:10:14,778:INFO:Extra Trees Classifier Imported successfully
2025-07-09 15:10:14,781:INFO:Cross validation set to False
2025-07-09 15:10:14,781:INFO:Fitting Model
2025-07-09 15:10:16,947:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 15:10:16,947:INFO:create_model() successfully completed......................................
2025-07-09 15:10:17,082:INFO:_master_model_container: 1
2025-07-09 15:10:17,082:INFO:_display_container: 2
2025-07-09 15:10:17,101:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 15:10:17,101:INFO:finalize_model() successfully completed......................................
2025-07-09 15:10:17,306:INFO:Initializing save_model()
2025-07-09 15:10:17,306:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              str...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-09 15:10:17,307:INFO:Adding model into prep_pipe
2025-07-09 15:10:17,307:WARNING:Only Model saved as it was a pipeline.
2025-07-09 15:10:25,052:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual.pkl saved in current working directory
2025-07-09 15:10:25,067:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Tran...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-09 15:10:25,067:INFO:save_model() successfully completed......................................
2025-07-09 15:10:34,365:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:10:34,370:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:10:34,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:10:34,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 15:11:43,709:INFO:Initializing load_model()
2025-07-09 15:11:43,709:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_anual, platform=None, authentication=None, verbose=True)
2025-07-09 15:11:52,488:INFO:Initializing predict_model()
2025-07-09 15:11:52,490:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000222476BC210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022247915EE0>)
2025-07-09 15:11:52,490:INFO:Checking exceptions
2025-07-09 15:11:52,490:INFO:Preloading libraries
2025-07-09 15:11:52,490:INFO:Set up data.
2025-07-09 15:11:52,513:INFO:Set up index.
2025-07-10 10:40:50,515:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:40:50,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:40:50,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:40:50,519:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:41:24,652:INFO:Initializing load_model()
2025-07-10 10:41:24,653:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_carga_fornecedor, platform=None, authentication=None, verbose=True)
2025-07-10 10:41:58,538:INFO:Initializing predict_model()
2025-07-10 10:41:58,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000238BC2F7B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue', 'MesPedido',
                                             'IdadePedido', 'DiasParaEntrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 Transf...per(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000238BE2C9F80>)
2025-07-10 10:41:58,545:INFO:Checking exceptions
2025-07-10 10:41:58,547:INFO:Preloading libraries
2025-07-10 10:41:58,550:INFO:Set up data.
2025-07-10 10:41:58,568:INFO:Set up index.
2025-07-10 10:56:49,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:56:49,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:56:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:56:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 10:57:33,098:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:118: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-10 10:57:55,580:INFO:PyCaret ClassificationExperiment
2025-07-10 10:57:55,581:INFO:Logging name: clf-default-name
2025-07-10 10:57:55,581:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-10 10:57:55,582:INFO:version 3.3.2
2025-07-10 10:57:55,582:INFO:Initializing setup()
2025-07-10 10:57:55,582:INFO:self.USI: 28b9
2025-07-10 10:57:55,582:INFO:self._variable_keys: {'exp_id', 'exp_name_log', 'n_jobs_param', 'X_train', 'y_test', 'data', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'is_multiclass', 'fold_shuffle_param', 'target_param', '_available_plots', 'idx', '_ml_usecase', 'y_train', 'fix_imbalance', 'seed', 'pipeline', 'USI', 'fold_generator', 'memory', 'y', 'logging_param', 'X', 'gpu_param', 'X_test', 'fold_groups_param'}
2025-07-10 10:57:55,583:INFO:Checking environment
2025-07-10 10:57:55,584:INFO:python_version: 3.11.9
2025-07-10 10:57:55,584:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-10 10:57:55,584:INFO:machine: AMD64
2025-07-10 10:57:55,647:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-10 10:57:55,654:INFO:Memory: svmem(total=16844595200, available=1371922432, percent=91.9, used=15472672768, free=1371922432)
2025-07-10 10:57:55,655:INFO:Physical Core: 4
2025-07-10 10:57:55,655:INFO:Logical Core: 8
2025-07-10 10:57:55,656:INFO:Checking libraries
2025-07-10 10:57:55,656:INFO:System:
2025-07-10 10:57:55,656:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-10 10:57:55,657:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-10 10:57:55,657:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-10 10:57:55,657:INFO:PyCaret required dependencies:
2025-07-10 10:57:55,717:INFO:                 pip: 25.1.1
2025-07-10 10:57:55,717:INFO:          setuptools: 65.5.0
2025-07-10 10:57:55,717:INFO:             pycaret: 3.3.2
2025-07-10 10:57:55,718:INFO:             IPython: 9.3.0
2025-07-10 10:57:55,718:INFO:          ipywidgets: 8.1.7
2025-07-10 10:57:55,718:INFO:                tqdm: 4.67.1
2025-07-10 10:57:55,718:INFO:               numpy: 1.26.4
2025-07-10 10:57:55,719:INFO:              pandas: 2.1.4
2025-07-10 10:57:55,719:INFO:              jinja2: 3.1.6
2025-07-10 10:57:55,719:INFO:               scipy: 1.11.4
2025-07-10 10:57:55,719:INFO:              joblib: 1.3.2
2025-07-10 10:57:55,721:INFO:             sklearn: 1.4.2
2025-07-10 10:57:55,721:INFO:                pyod: 2.0.5
2025-07-10 10:57:55,721:INFO:            imblearn: 0.13.0
2025-07-10 10:57:55,721:INFO:   category_encoders: 2.7.0
2025-07-10 10:57:55,721:INFO:            lightgbm: 4.6.0
2025-07-10 10:57:55,722:INFO:               numba: 0.61.2
2025-07-10 10:57:55,722:INFO:            requests: 2.32.4
2025-07-10 10:57:55,722:INFO:          matplotlib: 3.7.5
2025-07-10 10:57:55,722:INFO:          scikitplot: 0.3.7
2025-07-10 10:57:55,723:INFO:         yellowbrick: 1.5
2025-07-10 10:57:55,723:INFO:              plotly: 5.24.1
2025-07-10 10:57:55,723:INFO:    plotly-resampler: Not installed
2025-07-10 10:57:55,723:INFO:             kaleido: 1.0.0
2025-07-10 10:57:55,723:INFO:           schemdraw: 0.15
2025-07-10 10:57:55,723:INFO:         statsmodels: 0.14.4
2025-07-10 10:57:55,723:INFO:              sktime: 0.26.0
2025-07-10 10:57:55,723:INFO:               tbats: 1.1.3
2025-07-10 10:57:55,723:INFO:            pmdarima: 2.0.4
2025-07-10 10:57:55,723:INFO:              psutil: 7.0.0
2025-07-10 10:57:55,723:INFO:          markupsafe: 3.0.2
2025-07-10 10:57:55,723:INFO:             pickle5: Not installed
2025-07-10 10:57:55,723:INFO:         cloudpickle: 3.1.1
2025-07-10 10:57:55,723:INFO:         deprecation: 2.1.0
2025-07-10 10:57:55,723:INFO:              xxhash: 3.5.0
2025-07-10 10:57:55,723:INFO:           wurlitzer: Not installed
2025-07-10 10:57:55,723:INFO:PyCaret optional dependencies:
2025-07-10 10:57:55,747:INFO:                shap: Not installed
2025-07-10 10:57:55,747:INFO:           interpret: Not installed
2025-07-10 10:57:55,747:INFO:                umap: Not installed
2025-07-10 10:57:55,747:INFO:     ydata_profiling: Not installed
2025-07-10 10:57:55,747:INFO:  explainerdashboard: Not installed
2025-07-10 10:57:55,747:INFO:             autoviz: Not installed
2025-07-10 10:57:55,747:INFO:           fairlearn: Not installed
2025-07-10 10:57:55,747:INFO:          deepchecks: Not installed
2025-07-10 10:57:55,747:INFO:             xgboost: Not installed
2025-07-10 10:57:55,747:INFO:            catboost: Not installed
2025-07-10 10:57:55,747:INFO:              kmodes: Not installed
2025-07-10 10:57:55,747:INFO:             mlxtend: Not installed
2025-07-10 10:57:55,747:INFO:       statsforecast: Not installed
2025-07-10 10:57:55,747:INFO:        tune_sklearn: Not installed
2025-07-10 10:57:55,747:INFO:                 ray: Not installed
2025-07-10 10:57:55,747:INFO:            hyperopt: Not installed
2025-07-10 10:57:55,748:INFO:              optuna: Not installed
2025-07-10 10:57:55,748:INFO:               skopt: Not installed
2025-07-10 10:57:55,748:INFO:              mlflow: Not installed
2025-07-10 10:57:55,748:INFO:              gradio: Not installed
2025-07-10 10:57:55,748:INFO:             fastapi: Not installed
2025-07-10 10:57:55,748:INFO:             uvicorn: Not installed
2025-07-10 10:57:55,748:INFO:              m2cgen: Not installed
2025-07-10 10:57:55,748:INFO:           evidently: Not installed
2025-07-10 10:57:55,748:INFO:               fugue: Not installed
2025-07-10 10:57:55,748:INFO:           streamlit: Not installed
2025-07-10 10:57:55,748:INFO:             prophet: Not installed
2025-07-10 10:57:55,748:INFO:None
2025-07-10 10:57:55,748:INFO:Set up data.
2025-07-10 10:57:55,757:INFO:Set up folding strategy.
2025-07-10 10:57:55,758:INFO:Set up train/test split.
2025-07-10 10:57:55,805:INFO:Set up index.
2025-07-10 10:57:55,809:INFO:Assigning column types.
2025-07-10 10:57:55,819:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-10 10:57:55,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-10 10:57:55,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 10:57:55,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:55,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:55,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-10 10:57:55,964:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 10:57:55,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:55,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:55,987:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-10 10:57:56,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 10:57:56,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 10:57:56,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,144:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-10 10:57:56,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:56,307:INFO:Preparing preprocessing pipeline...
2025-07-10 10:57:56,309:INFO:Set up simple imputation.
2025-07-10 10:57:56,320:INFO:Set up encoding of categorical features.
2025-07-10 10:57:56,321:INFO:Set up imbalanced handling.
2025-07-10 10:57:56,322:INFO:Set up column name cleaning.
2025-07-10 10:57:57,024:INFO:Finished creating preprocessing pipeline.
2025-07-10 10:57:57,037:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Trans...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-10 10:57:57,037:INFO:Creating final display dataframe.
2025-07-10 10:57:57,987:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155375, 5)
4        Transformed data shape       (227383, 5)
5   Transformed train set shape       (180770, 5)
6    Transformed test set shape        (46613, 5)
7              Numeric features                 2
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              28b9
2025-07-10 10:57:58,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:58,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:58,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:58,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 10:57:58,414:INFO:setup() successfully completed in 2.87s...............
2025-07-10 10:57:58,426:INFO:Initializing create_model()
2025-07-10 10:57:58,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E427EEB590>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-10 10:57:58,426:INFO:Checking exceptions
2025-07-10 10:57:58,521:INFO:Importing libraries
2025-07-10 10:57:58,521:INFO:Copying training dataset
2025-07-10 10:57:58,605:INFO:Defining folds
2025-07-10 10:57:58,605:INFO:Declaring metric variables
2025-07-10 10:57:58,606:INFO:Importing untrained model
2025-07-10 10:57:58,607:INFO:Extra Trees Classifier Imported successfully
2025-07-10 10:57:58,607:INFO:Starting cross validation
2025-07-10 10:57:58,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-10 10:59:06,349:INFO:Calculating mean and std
2025-07-10 10:59:06,351:INFO:Creating metrics dataframe
2025-07-10 10:59:06,355:INFO:Finalizing model
2025-07-10 10:59:12,111:INFO:Uploading results into container
2025-07-10 10:59:12,113:INFO:Uploading model into container now
2025-07-10 10:59:12,176:INFO:_master_model_container: 1
2025-07-10 10:59:12,177:INFO:_display_container: 2
2025-07-10 10:59:12,177:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-10 10:59:12,178:INFO:create_model() successfully completed......................................
2025-07-10 10:59:12,792:INFO:Initializing finalize_model()
2025-07-10 10:59:12,792:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E427EEB590>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-10 10:59:12,794:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-10 10:59:12,863:INFO:Initializing create_model()
2025-07-10 10:59:12,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E427EEB590>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-10 10:59:12,864:INFO:Checking exceptions
2025-07-10 10:59:12,869:INFO:Importing libraries
2025-07-10 10:59:12,870:INFO:Copying training dataset
2025-07-10 10:59:12,872:INFO:Defining folds
2025-07-10 10:59:12,873:INFO:Declaring metric variables
2025-07-10 10:59:12,874:INFO:Importing untrained model
2025-07-10 10:59:12,874:INFO:Declaring custom model
2025-07-10 10:59:12,879:INFO:Extra Trees Classifier Imported successfully
2025-07-10 10:59:12,890:INFO:Cross validation set to False
2025-07-10 10:59:12,890:INFO:Fitting Model
2025-07-10 10:59:24,585:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['MATKL'...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 10:59:24,586:INFO:create_model() successfully completed......................................
2025-07-10 10:59:24,706:INFO:_master_model_container: 1
2025-07-10 10:59:24,706:INFO:_display_container: 2
2025-07-10 10:59:24,730:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['MATKL'...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 10:59:24,731:INFO:finalize_model() successfully completed......................................
2025-07-10 10:59:24,915:INFO:Initializing save_model()
2025-07-10 10:59:24,916:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['MATKL'...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 Trans...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-10 10:59:24,917:INFO:Adding model into prep_pipe
2025-07-10 10:59:24,918:WARNING:Only Model saved as it was a pipeline.
2025-07-10 10:59:59,494:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal.pkl saved in current working directory
2025-07-10 10:59:59,536:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=['MATKL'...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 10:59:59,536:INFO:save_model() successfully completed......................................
2025-07-10 11:00:15,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 11:00:15,734:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 11:00:15,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 11:00:15,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 11:01:05,558:INFO:Initializing load_model()
2025-07-10 11:01:05,559:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, platform=None, authentication=None, verbose=True)
2025-07-10 11:01:45,294:INFO:Initializing predict_model()
2025-07-10 11:01:45,296:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B8D6A9C950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8DC689EE0>)
2025-07-10 11:01:45,296:INFO:Checking exceptions
2025-07-10 11:01:45,297:INFO:Preloading libraries
2025-07-10 11:01:45,297:INFO:Set up data.
2025-07-10 11:01:45,312:INFO:Set up index.
2025-07-10 13:06:44,131:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:06:44,133:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:06:44,134:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:06:44,135:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:07:34,905:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-10 13:08:04,962:INFO:PyCaret ClassificationExperiment
2025-07-10 13:08:04,963:INFO:Logging name: clf-default-name
2025-07-10 13:08:04,963:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-10 13:08:04,966:INFO:version 3.3.2
2025-07-10 13:08:04,967:INFO:Initializing setup()
2025-07-10 13:08:04,967:INFO:self.USI: 120c
2025-07-10 13:08:04,969:INFO:self._variable_keys: {'exp_id', 'fold_generator', 'X', 'idx', 'seed', 'memory', 'target_param', 'exp_name_log', 'is_multiclass', 'n_jobs_param', 'logging_param', 'X_test', 'USI', 'html_param', 'gpu_param', 'fix_imbalance', 'data', 'y_test', 'gpu_n_jobs_param', 'y', 'log_plots_param', 'pipeline', 'fold_shuffle_param', 'fold_groups_param', 'y_train', '_ml_usecase', 'X_train', '_available_plots'}
2025-07-10 13:08:04,970:INFO:Checking environment
2025-07-10 13:08:04,971:INFO:python_version: 3.11.9
2025-07-10 13:08:04,973:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-10 13:08:04,974:INFO:machine: AMD64
2025-07-10 13:08:05,033:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-10 13:08:05,053:INFO:Memory: svmem(total=16844595200, available=1188704256, percent=92.9, used=15655890944, free=1188704256)
2025-07-10 13:08:05,054:INFO:Physical Core: 4
2025-07-10 13:08:05,055:INFO:Logical Core: 8
2025-07-10 13:08:05,055:INFO:Checking libraries
2025-07-10 13:08:05,056:INFO:System:
2025-07-10 13:08:05,056:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-10 13:08:05,057:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-10 13:08:05,057:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-10 13:08:05,057:INFO:PyCaret required dependencies:
2025-07-10 13:08:05,149:INFO:                 pip: 25.1.1
2025-07-10 13:08:05,149:INFO:          setuptools: 65.5.0
2025-07-10 13:08:05,149:INFO:             pycaret: 3.3.2
2025-07-10 13:08:05,151:INFO:             IPython: 9.3.0
2025-07-10 13:08:05,151:INFO:          ipywidgets: 8.1.7
2025-07-10 13:08:05,151:INFO:                tqdm: 4.67.1
2025-07-10 13:08:05,152:INFO:               numpy: 1.26.4
2025-07-10 13:08:05,152:INFO:              pandas: 2.1.4
2025-07-10 13:08:05,152:INFO:              jinja2: 3.1.6
2025-07-10 13:08:05,153:INFO:               scipy: 1.11.4
2025-07-10 13:08:05,153:INFO:              joblib: 1.3.2
2025-07-10 13:08:05,153:INFO:             sklearn: 1.4.2
2025-07-10 13:08:05,154:INFO:                pyod: 2.0.5
2025-07-10 13:08:05,154:INFO:            imblearn: 0.13.0
2025-07-10 13:08:05,154:INFO:   category_encoders: 2.7.0
2025-07-10 13:08:05,155:INFO:            lightgbm: 4.6.0
2025-07-10 13:08:05,155:INFO:               numba: 0.61.2
2025-07-10 13:08:05,155:INFO:            requests: 2.32.4
2025-07-10 13:08:05,156:INFO:          matplotlib: 3.7.5
2025-07-10 13:08:05,156:INFO:          scikitplot: 0.3.7
2025-07-10 13:08:05,156:INFO:         yellowbrick: 1.5
2025-07-10 13:08:05,156:INFO:              plotly: 5.24.1
2025-07-10 13:08:05,156:INFO:    plotly-resampler: Not installed
2025-07-10 13:08:05,156:INFO:             kaleido: 1.0.0
2025-07-10 13:08:05,156:INFO:           schemdraw: 0.15
2025-07-10 13:08:05,157:INFO:         statsmodels: 0.14.4
2025-07-10 13:08:05,157:INFO:              sktime: 0.26.0
2025-07-10 13:08:05,157:INFO:               tbats: 1.1.3
2025-07-10 13:08:05,157:INFO:            pmdarima: 2.0.4
2025-07-10 13:08:05,157:INFO:              psutil: 7.0.0
2025-07-10 13:08:05,157:INFO:          markupsafe: 3.0.2
2025-07-10 13:08:05,157:INFO:             pickle5: Not installed
2025-07-10 13:08:05,157:INFO:         cloudpickle: 3.1.1
2025-07-10 13:08:05,157:INFO:         deprecation: 2.1.0
2025-07-10 13:08:05,157:INFO:              xxhash: 3.5.0
2025-07-10 13:08:05,157:INFO:           wurlitzer: Not installed
2025-07-10 13:08:05,157:INFO:PyCaret optional dependencies:
2025-07-10 13:08:05,192:INFO:                shap: Not installed
2025-07-10 13:08:05,192:INFO:           interpret: Not installed
2025-07-10 13:08:05,192:INFO:                umap: Not installed
2025-07-10 13:08:05,192:INFO:     ydata_profiling: Not installed
2025-07-10 13:08:05,193:INFO:  explainerdashboard: Not installed
2025-07-10 13:08:05,193:INFO:             autoviz: Not installed
2025-07-10 13:08:05,193:INFO:           fairlearn: Not installed
2025-07-10 13:08:05,193:INFO:          deepchecks: Not installed
2025-07-10 13:08:05,193:INFO:             xgboost: Not installed
2025-07-10 13:08:05,193:INFO:            catboost: Not installed
2025-07-10 13:08:05,193:INFO:              kmodes: Not installed
2025-07-10 13:08:05,193:INFO:             mlxtend: Not installed
2025-07-10 13:08:05,193:INFO:       statsforecast: Not installed
2025-07-10 13:08:05,193:INFO:        tune_sklearn: Not installed
2025-07-10 13:08:05,194:INFO:                 ray: Not installed
2025-07-10 13:08:05,194:INFO:            hyperopt: Not installed
2025-07-10 13:08:05,194:INFO:              optuna: Not installed
2025-07-10 13:08:05,194:INFO:               skopt: Not installed
2025-07-10 13:08:05,194:INFO:              mlflow: Not installed
2025-07-10 13:08:05,194:INFO:              gradio: Not installed
2025-07-10 13:08:05,194:INFO:             fastapi: Not installed
2025-07-10 13:08:05,194:INFO:             uvicorn: Not installed
2025-07-10 13:08:05,194:INFO:              m2cgen: Not installed
2025-07-10 13:08:05,194:INFO:           evidently: Not installed
2025-07-10 13:08:05,194:INFO:               fugue: Not installed
2025-07-10 13:08:05,194:INFO:           streamlit: Not installed
2025-07-10 13:08:05,194:INFO:             prophet: Not installed
2025-07-10 13:08:05,194:INFO:None
2025-07-10 13:08:05,195:INFO:Set up data.
2025-07-10 13:08:05,222:INFO:Set up folding strategy.
2025-07-10 13:08:05,222:INFO:Set up train/test split.
2025-07-10 13:08:05,312:INFO:Set up index.
2025-07-10 13:08:05,316:INFO:Assigning column types.
2025-07-10 13:08:05,335:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-10 13:08:05,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,559:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-10 13:08:05,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-10 13:08:05,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,759:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-10 13:08:05,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:05,961:INFO:Preparing preprocessing pipeline...
2025-07-10 13:08:05,968:INFO:Set up simple imputation.
2025-07-10 13:08:05,982:INFO:Set up encoding of categorical features.
2025-07-10 13:08:05,984:INFO:Set up imbalanced handling.
2025-07-10 13:08:05,990:INFO:Set up column name cleaning.
2025-07-10 13:08:06,868:INFO:Finished creating preprocessing pipeline.
2025-07-10 13:08:06,878:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-10 13:08:06,879:INFO:Creating final display dataframe.
2025-07-10 13:08:07,887:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155375, 6)
4        Transformed data shape       (227383, 6)
5   Transformed train set shape       (180770, 6)
6    Transformed test set shape        (46613, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              120c
2025-07-10 13:08:08,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:08,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:08,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:08,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-10 13:08:08,201:INFO:setup() successfully completed in 3.31s...............
2025-07-10 13:08:08,202:INFO:Initializing create_model()
2025-07-10 13:08:08,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021095444050>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-10 13:08:08,202:INFO:Checking exceptions
2025-07-10 13:08:08,207:INFO:Importing libraries
2025-07-10 13:08:08,207:INFO:Copying training dataset
2025-07-10 13:08:08,292:INFO:Defining folds
2025-07-10 13:08:08,292:INFO:Declaring metric variables
2025-07-10 13:08:08,292:INFO:Importing untrained model
2025-07-10 13:08:08,293:INFO:Extra Trees Classifier Imported successfully
2025-07-10 13:08:08,294:INFO:Starting cross validation
2025-07-10 13:08:08,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-10 13:09:23,472:INFO:Calculating mean and std
2025-07-10 13:09:23,484:INFO:Creating metrics dataframe
2025-07-10 13:09:23,502:INFO:Finalizing model
2025-07-10 13:09:28,762:INFO:Uploading results into container
2025-07-10 13:09:28,764:INFO:Uploading model into container now
2025-07-10 13:09:28,789:INFO:_master_model_container: 1
2025-07-10 13:09:28,790:INFO:_display_container: 2
2025-07-10 13:09:28,792:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-10 13:09:28,793:INFO:create_model() successfully completed......................................
2025-07-10 13:09:29,738:INFO:Initializing finalize_model()
2025-07-10 13:09:29,739:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021095444050>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-10 13:09:29,740:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-10 13:09:29,771:INFO:Initializing create_model()
2025-07-10 13:09:29,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021095444050>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-10 13:09:29,772:INFO:Checking exceptions
2025-07-10 13:09:29,776:INFO:Importing libraries
2025-07-10 13:09:29,779:INFO:Copying training dataset
2025-07-10 13:09:29,784:INFO:Defining folds
2025-07-10 13:09:29,785:INFO:Declaring metric variables
2025-07-10 13:09:29,786:INFO:Importing untrained model
2025-07-10 13:09:29,787:INFO:Declaring custom model
2025-07-10 13:09:29,788:INFO:Extra Trees Classifier Imported successfully
2025-07-10 13:09:29,798:INFO:Cross validation set to False
2025-07-10 13:09:29,798:INFO:Fitting Model
2025-07-10 13:09:37,894:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 13:09:37,895:INFO:create_model() successfully completed......................................
2025-07-10 13:09:38,002:INFO:_master_model_container: 1
2025-07-10 13:09:38,002:INFO:_display_container: 2
2025-07-10 13:09:38,023:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 13:09:38,024:INFO:finalize_model() successfully completed......................................
2025-07-10 13:09:38,174:INFO:Initializing save_model()
2025-07-10 13:09:38,174:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-10 13:09:38,175:INFO:Adding model into prep_pipe
2025-07-10 13:09:38,175:WARNING:Only Model saved as it was a pipeline.
2025-07-10 13:10:08,798:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal.pkl saved in current working directory
2025-07-10 13:10:08,813:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-10 13:10:08,813:INFO:save_model() successfully completed......................................
2025-07-10 13:10:43,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:10:43,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:10:43,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:10:43,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-10 13:11:34,344:INFO:Initializing load_model()
2025-07-10 13:11:34,344:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, platform=None, authentication=None, verbose=True)
2025-07-10 13:12:05,982:INFO:Initializing predict_model()
2025-07-10 13:12:05,986:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E356308210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E35EA02AC0>)
2025-07-10 13:12:05,987:INFO:Checking exceptions
2025-07-10 13:12:05,987:INFO:Preloading libraries
2025-07-10 13:12:05,988:INFO:Set up data.
2025-07-10 13:12:06,002:INFO:Set up index.
2025-07-14 09:57:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 09:57:31,752:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 09:57:31,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 09:57:31,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 09:58:22,716:INFO:Initializing load_model()
2025-07-14 09:58:22,717:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, platform=None, authentication=None, verbose=True)
2025-07-14 09:58:56,027:INFO:Initializing predict_model()
2025-07-14 09:58:56,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001415A9F0F50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=109))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000014157EFD620>)
2025-07-14 09:58:56,028:INFO:Checking exceptions
2025-07-14 09:58:56,028:INFO:Preloading libraries
2025-07-14 09:58:56,028:INFO:Set up data.
2025-07-14 09:58:56,038:INFO:Set up index.
2025-07-14 14:37:48,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:37:48,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:37:48,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:37:48,273:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:38:24,164:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 14:38:42,758:INFO:PyCaret ClassificationExperiment
2025-07-14 14:38:42,758:INFO:Logging name: clf-default-name
2025-07-14 14:38:42,758:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 14:38:42,758:INFO:version 3.3.2
2025-07-14 14:38:42,758:INFO:Initializing setup()
2025-07-14 14:38:42,758:INFO:self.USI: 28f9
2025-07-14 14:38:42,758:INFO:self._variable_keys: {'html_param', '_available_plots', 'fix_imbalance', 'USI', 'is_multiclass', 'exp_id', 'memory', 'pipeline', 'X_test', 'data', 'fold_generator', 'idx', 'fold_shuffle_param', 'exp_name_log', 'y_train', 'logging_param', '_ml_usecase', 'target_param', 'gpu_n_jobs_param', 'X', 'gpu_param', 'seed', 'y_test', 'n_jobs_param', 'log_plots_param', 'y', 'X_train', 'fold_groups_param'}
2025-07-14 14:38:42,758:INFO:Checking environment
2025-07-14 14:38:42,758:INFO:python_version: 3.11.9
2025-07-14 14:38:42,759:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 14:38:42,759:INFO:machine: AMD64
2025-07-14 14:38:42,809:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 14:38:42,817:INFO:Memory: svmem(total=16844595200, available=836141056, percent=95.0, used=16008454144, free=836141056)
2025-07-14 14:38:42,817:INFO:Physical Core: 4
2025-07-14 14:38:42,817:INFO:Logical Core: 8
2025-07-14 14:38:42,817:INFO:Checking libraries
2025-07-14 14:38:42,817:INFO:System:
2025-07-14 14:38:42,818:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 14:38:42,818:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 14:38:42,818:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 14:38:42,818:INFO:PyCaret required dependencies:
2025-07-14 14:38:42,871:INFO:                 pip: 25.1.1
2025-07-14 14:38:42,871:INFO:          setuptools: 65.5.0
2025-07-14 14:38:42,871:INFO:             pycaret: 3.3.2
2025-07-14 14:38:42,871:INFO:             IPython: 9.3.0
2025-07-14 14:38:42,871:INFO:          ipywidgets: 8.1.7
2025-07-14 14:38:42,871:INFO:                tqdm: 4.67.1
2025-07-14 14:38:42,871:INFO:               numpy: 1.26.4
2025-07-14 14:38:42,871:INFO:              pandas: 2.1.4
2025-07-14 14:38:42,871:INFO:              jinja2: 3.1.6
2025-07-14 14:38:42,871:INFO:               scipy: 1.11.4
2025-07-14 14:38:42,871:INFO:              joblib: 1.3.2
2025-07-14 14:38:42,871:INFO:             sklearn: 1.4.2
2025-07-14 14:38:42,871:INFO:                pyod: 2.0.5
2025-07-14 14:38:42,871:INFO:            imblearn: 0.13.0
2025-07-14 14:38:42,871:INFO:   category_encoders: 2.7.0
2025-07-14 14:38:42,871:INFO:            lightgbm: 4.6.0
2025-07-14 14:38:42,871:INFO:               numba: 0.61.2
2025-07-14 14:38:42,871:INFO:            requests: 2.32.4
2025-07-14 14:38:42,871:INFO:          matplotlib: 3.7.5
2025-07-14 14:38:42,871:INFO:          scikitplot: 0.3.7
2025-07-14 14:38:42,871:INFO:         yellowbrick: 1.5
2025-07-14 14:38:42,871:INFO:              plotly: 5.24.1
2025-07-14 14:38:42,871:INFO:    plotly-resampler: Not installed
2025-07-14 14:38:42,871:INFO:             kaleido: 1.0.0
2025-07-14 14:38:42,871:INFO:           schemdraw: 0.15
2025-07-14 14:38:42,871:INFO:         statsmodels: 0.14.4
2025-07-14 14:38:42,871:INFO:              sktime: 0.26.0
2025-07-14 14:38:42,871:INFO:               tbats: 1.1.3
2025-07-14 14:38:42,871:INFO:            pmdarima: 2.0.4
2025-07-14 14:38:42,871:INFO:              psutil: 7.0.0
2025-07-14 14:38:42,871:INFO:          markupsafe: 3.0.2
2025-07-14 14:38:42,871:INFO:             pickle5: Not installed
2025-07-14 14:38:42,871:INFO:         cloudpickle: 3.1.1
2025-07-14 14:38:42,871:INFO:         deprecation: 2.1.0
2025-07-14 14:38:42,871:INFO:              xxhash: 3.5.0
2025-07-14 14:38:42,871:INFO:           wurlitzer: Not installed
2025-07-14 14:38:42,872:INFO:PyCaret optional dependencies:
2025-07-14 14:38:42,886:INFO:                shap: Not installed
2025-07-14 14:38:42,886:INFO:           interpret: Not installed
2025-07-14 14:38:42,887:INFO:                umap: Not installed
2025-07-14 14:38:42,887:INFO:     ydata_profiling: Not installed
2025-07-14 14:38:42,887:INFO:  explainerdashboard: Not installed
2025-07-14 14:38:42,887:INFO:             autoviz: Not installed
2025-07-14 14:38:42,887:INFO:           fairlearn: Not installed
2025-07-14 14:38:42,887:INFO:          deepchecks: Not installed
2025-07-14 14:38:42,887:INFO:             xgboost: Not installed
2025-07-14 14:38:42,887:INFO:            catboost: Not installed
2025-07-14 14:38:42,887:INFO:              kmodes: Not installed
2025-07-14 14:38:42,887:INFO:             mlxtend: Not installed
2025-07-14 14:38:42,887:INFO:       statsforecast: Not installed
2025-07-14 14:38:42,887:INFO:        tune_sklearn: Not installed
2025-07-14 14:38:42,887:INFO:                 ray: Not installed
2025-07-14 14:38:42,887:INFO:            hyperopt: Not installed
2025-07-14 14:38:42,887:INFO:              optuna: Not installed
2025-07-14 14:38:42,887:INFO:               skopt: Not installed
2025-07-14 14:38:42,887:INFO:              mlflow: Not installed
2025-07-14 14:38:42,887:INFO:              gradio: Not installed
2025-07-14 14:38:42,887:INFO:             fastapi: Not installed
2025-07-14 14:38:42,887:INFO:             uvicorn: Not installed
2025-07-14 14:38:42,887:INFO:              m2cgen: Not installed
2025-07-14 14:38:42,887:INFO:           evidently: Not installed
2025-07-14 14:38:42,887:INFO:               fugue: Not installed
2025-07-14 14:38:42,887:INFO:           streamlit: Not installed
2025-07-14 14:38:42,887:INFO:             prophet: Not installed
2025-07-14 14:38:42,887:INFO:None
2025-07-14 14:38:42,887:INFO:Set up data.
2025-07-14 14:38:42,901:INFO:Set up folding strategy.
2025-07-14 14:38:42,902:INFO:Set up train/test split.
2025-07-14 14:38:42,943:INFO:Set up index.
2025-07-14 14:38:42,947:INFO:Assigning column types.
2025-07-14 14:38:42,959:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 14:38:42,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 14:38:42,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:38:43,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 14:38:43,070:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:38:43,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,091:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 14:38:43,126:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:38:43,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:38:43,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,202:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 14:38:43,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:43,321:INFO:Preparing preprocessing pipeline...
2025-07-14 14:38:43,324:INFO:Set up simple imputation.
2025-07-14 14:38:43,336:INFO:Set up encoding of categorical features.
2025-07-14 14:38:43,336:INFO:Set up imbalanced handling.
2025-07-14 14:38:43,339:INFO:Set up column name cleaning.
2025-07-14 14:38:43,905:INFO:Finished creating preprocessing pipeline.
2025-07-14 14:38:43,912:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 14:38:43,912:INFO:Creating final display dataframe.
2025-07-14 14:38:44,655:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              28f9
2025-07-14 14:38:44,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:44,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:44,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:44,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:38:44,844:INFO:setup() successfully completed in 2.12s...............
2025-07-14 14:38:44,845:INFO:Initializing create_model()
2025-07-14 14:38:44,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024705CD7F50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 14:38:44,845:INFO:Checking exceptions
2025-07-14 14:38:44,853:INFO:Importing libraries
2025-07-14 14:38:44,853:INFO:Copying training dataset
2025-07-14 14:38:44,912:INFO:Defining folds
2025-07-14 14:38:44,913:INFO:Declaring metric variables
2025-07-14 14:38:44,914:INFO:Importing untrained model
2025-07-14 14:38:44,914:INFO:Random Forest Classifier Imported successfully
2025-07-14 14:38:44,914:INFO:Starting cross validation
2025-07-14 14:38:44,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 14:40:57,421:INFO:Calculating mean and std
2025-07-14 14:40:57,427:INFO:Creating metrics dataframe
2025-07-14 14:40:57,433:INFO:Finalizing model
2025-07-14 14:41:12,766:INFO:Uploading results into container
2025-07-14 14:41:12,768:INFO:Uploading model into container now
2025-07-14 14:41:12,791:INFO:_master_model_container: 1
2025-07-14 14:41:12,792:INFO:_display_container: 2
2025-07-14 14:41:12,793:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=109, verbose=0,
                       warm_start=False)
2025-07-14 14:41:12,795:INFO:create_model() successfully completed......................................
2025-07-14 14:41:13,462:INFO:Initializing interpret_model()
2025-07-14 14:41:13,462:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024705CD7F50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=109, verbose=0,
                       warm_start=False), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2025-07-14 14:41:13,462:INFO:Checking exceptions
2025-07-14 14:41:13,462:ERROR:
'shap' is a soft dependency and not included in the pycaret installation. Please run: `pip install shap` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2025-07-14 14:49:55,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:49:55,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:49:55,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:49:55,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 14:50:57,989:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 14:51:34,982:INFO:PyCaret ClassificationExperiment
2025-07-14 14:51:34,985:INFO:Logging name: clf-default-name
2025-07-14 14:51:34,985:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 14:51:34,985:INFO:version 3.3.2
2025-07-14 14:51:34,985:INFO:Initializing setup()
2025-07-14 14:51:34,985:INFO:self.USI: 2c69
2025-07-14 14:51:34,990:INFO:self._variable_keys: {'exp_name_log', 'X_train', 'y', 'pipeline', '_available_plots', 'fold_shuffle_param', 'exp_id', 'y_train', 'log_plots_param', 'is_multiclass', 'seed', 'idx', 'X_test', 'gpu_param', 'target_param', 'n_jobs_param', 'fold_groups_param', 'fix_imbalance', 'X', 'USI', 'y_test', 'memory', 'fold_generator', '_ml_usecase', 'logging_param', 'html_param', 'data', 'gpu_n_jobs_param'}
2025-07-14 14:51:34,990:INFO:Checking environment
2025-07-14 14:51:34,991:INFO:python_version: 3.11.9
2025-07-14 14:51:34,991:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 14:51:34,992:INFO:machine: AMD64
2025-07-14 14:51:35,077:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 14:51:35,087:INFO:Memory: svmem(total=16844595200, available=1701339136, percent=89.9, used=15143256064, free=1701339136)
2025-07-14 14:51:35,087:INFO:Physical Core: 4
2025-07-14 14:51:35,089:INFO:Logical Core: 8
2025-07-14 14:51:35,089:INFO:Checking libraries
2025-07-14 14:51:35,089:INFO:System:
2025-07-14 14:51:35,089:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 14:51:35,089:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 14:51:35,089:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 14:51:35,091:INFO:PyCaret required dependencies:
2025-07-14 14:51:35,182:INFO:                 pip: 25.1.1
2025-07-14 14:51:35,182:INFO:          setuptools: 65.5.0
2025-07-14 14:51:35,182:INFO:             pycaret: 3.3.2
2025-07-14 14:51:35,182:INFO:             IPython: 9.3.0
2025-07-14 14:51:35,182:INFO:          ipywidgets: 8.1.7
2025-07-14 14:51:35,182:INFO:                tqdm: 4.67.1
2025-07-14 14:51:35,182:INFO:               numpy: 1.26.4
2025-07-14 14:51:35,182:INFO:              pandas: 2.1.4
2025-07-14 14:51:35,182:INFO:              jinja2: 3.1.6
2025-07-14 14:51:35,182:INFO:               scipy: 1.11.4
2025-07-14 14:51:35,182:INFO:              joblib: 1.3.2
2025-07-14 14:51:35,182:INFO:             sklearn: 1.4.2
2025-07-14 14:51:35,182:INFO:                pyod: 2.0.5
2025-07-14 14:51:35,182:INFO:            imblearn: 0.13.0
2025-07-14 14:51:35,182:INFO:   category_encoders: 2.7.0
2025-07-14 14:51:35,186:INFO:            lightgbm: 4.6.0
2025-07-14 14:51:35,186:INFO:               numba: 0.61.2
2025-07-14 14:51:35,186:INFO:            requests: 2.32.4
2025-07-14 14:51:35,186:INFO:          matplotlib: 3.7.5
2025-07-14 14:51:35,186:INFO:          scikitplot: 0.3.7
2025-07-14 14:51:35,186:INFO:         yellowbrick: 1.5
2025-07-14 14:51:35,186:INFO:              plotly: 5.24.1
2025-07-14 14:51:35,186:INFO:    plotly-resampler: Not installed
2025-07-14 14:51:35,186:INFO:             kaleido: 1.0.0
2025-07-14 14:51:35,186:INFO:           schemdraw: 0.15
2025-07-14 14:51:35,186:INFO:         statsmodels: 0.14.4
2025-07-14 14:51:35,186:INFO:              sktime: 0.26.0
2025-07-14 14:51:35,186:INFO:               tbats: 1.1.3
2025-07-14 14:51:35,186:INFO:            pmdarima: 2.0.4
2025-07-14 14:51:35,186:INFO:              psutil: 7.0.0
2025-07-14 14:51:35,186:INFO:          markupsafe: 3.0.2
2025-07-14 14:51:35,186:INFO:             pickle5: Not installed
2025-07-14 14:51:35,186:INFO:         cloudpickle: 3.1.1
2025-07-14 14:51:35,186:INFO:         deprecation: 2.1.0
2025-07-14 14:51:35,186:INFO:              xxhash: 3.5.0
2025-07-14 14:51:35,186:INFO:           wurlitzer: Not installed
2025-07-14 14:51:35,186:INFO:PyCaret optional dependencies:
2025-07-14 14:51:35,207:INFO:                shap: 0.48.0
2025-07-14 14:51:35,207:INFO:           interpret: Not installed
2025-07-14 14:51:35,207:INFO:                umap: Not installed
2025-07-14 14:51:35,207:INFO:     ydata_profiling: Not installed
2025-07-14 14:51:35,207:INFO:  explainerdashboard: Not installed
2025-07-14 14:51:35,207:INFO:             autoviz: Not installed
2025-07-14 14:51:35,207:INFO:           fairlearn: Not installed
2025-07-14 14:51:35,207:INFO:          deepchecks: Not installed
2025-07-14 14:51:35,207:INFO:             xgboost: Not installed
2025-07-14 14:51:35,207:INFO:            catboost: Not installed
2025-07-14 14:51:35,207:INFO:              kmodes: Not installed
2025-07-14 14:51:35,207:INFO:             mlxtend: Not installed
2025-07-14 14:51:35,207:INFO:       statsforecast: Not installed
2025-07-14 14:51:35,207:INFO:        tune_sklearn: Not installed
2025-07-14 14:51:35,217:INFO:                 ray: Not installed
2025-07-14 14:51:35,217:INFO:            hyperopt: Not installed
2025-07-14 14:51:35,217:INFO:              optuna: Not installed
2025-07-14 14:51:35,217:INFO:               skopt: Not installed
2025-07-14 14:51:35,217:INFO:              mlflow: Not installed
2025-07-14 14:51:35,217:INFO:              gradio: Not installed
2025-07-14 14:51:35,217:INFO:             fastapi: Not installed
2025-07-14 14:51:35,218:INFO:             uvicorn: Not installed
2025-07-14 14:51:35,218:INFO:              m2cgen: Not installed
2025-07-14 14:51:35,218:INFO:           evidently: Not installed
2025-07-14 14:51:35,218:INFO:               fugue: Not installed
2025-07-14 14:51:35,218:INFO:           streamlit: Not installed
2025-07-14 14:51:35,218:INFO:             prophet: Not installed
2025-07-14 14:51:35,218:INFO:None
2025-07-14 14:51:35,218:INFO:Set up data.
2025-07-14 14:51:35,243:INFO:Set up folding strategy.
2025-07-14 14:51:35,243:INFO:Set up train/test split.
2025-07-14 14:51:35,363:INFO:Set up index.
2025-07-14 14:51:35,374:INFO:Assigning column types.
2025-07-14 14:51:35,398:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 14:51:35,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 14:51:35,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:51:35,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:35,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:35,687:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 14:51:35,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:51:35,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:35,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:35,754:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 14:51:35,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:51:35,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:35,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,019:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 14:51:36,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,083:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 14:51:36,226:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:36,384:INFO:Preparing preprocessing pipeline...
2025-07-14 14:51:36,395:INFO:Set up simple imputation.
2025-07-14 14:51:36,422:INFO:Set up encoding of categorical features.
2025-07-14 14:51:36,423:INFO:Set up imbalanced handling.
2025-07-14 14:51:36,428:INFO:Set up column name cleaning.
2025-07-14 14:51:37,182:INFO:Finished creating preprocessing pipeline.
2025-07-14 14:51:37,197:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 14:51:37,198:INFO:Creating final display dataframe.
2025-07-14 14:51:37,965:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              2c69
2025-07-14 14:51:38,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:38,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:38,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:38,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 14:51:38,201:INFO:setup() successfully completed in 3.28s...............
2025-07-14 14:51:38,201:INFO:Initializing create_model()
2025-07-14 14:51:38,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B3D5BC1890>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 14:51:38,201:INFO:Checking exceptions
2025-07-14 14:51:38,205:INFO:Importing libraries
2025-07-14 14:51:38,205:INFO:Copying training dataset
2025-07-14 14:51:38,267:INFO:Defining folds
2025-07-14 14:51:38,267:INFO:Declaring metric variables
2025-07-14 14:51:38,270:INFO:Importing untrained model
2025-07-14 14:51:38,272:INFO:Random Forest Classifier Imported successfully
2025-07-14 14:51:38,273:INFO:Starting cross validation
2025-07-14 14:51:38,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 14:54:35,831:INFO:Calculating mean and std
2025-07-14 14:54:35,844:INFO:Creating metrics dataframe
2025-07-14 14:54:35,858:INFO:Finalizing model
2025-07-14 14:55:01,282:INFO:Uploading results into container
2025-07-14 14:55:01,284:INFO:Uploading model into container now
2025-07-14 14:55:01,366:INFO:_master_model_container: 1
2025-07-14 14:55:01,366:INFO:_display_container: 2
2025-07-14 14:55:01,377:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=109, verbose=0,
                       warm_start=False)
2025-07-14 14:55:01,377:INFO:create_model() successfully completed......................................
2025-07-14 14:55:03,632:INFO:Initializing interpret_model()
2025-07-14 14:55:03,632:INFO:interpret_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B3D5BC1890>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=109, verbose=0,
                       warm_start=False), plot=summary, feature=None, observation=None, use_train_data=False, X_new_sample=None, y_new_sample=None, save=False, kwargs={})
2025-07-14 14:55:03,632:INFO:Checking exceptions
2025-07-14 14:55:03,633:INFO:Soft dependency imported: shap: 0.48.0
2025-07-14 14:55:05,673:INFO:plot type: summary
2025-07-14 14:55:05,674:INFO:Creating TreeExplainer
2025-07-14 14:55:06,218:INFO:Compiling shap values
2025-07-14 15:23:54,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:23:54,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:23:54,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:23:54,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:24:30,067:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 15:24:55,713:INFO:PyCaret ClassificationExperiment
2025-07-14 15:24:55,714:INFO:Logging name: clf-default-name
2025-07-14 15:24:55,716:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 15:24:55,718:INFO:version 3.3.2
2025-07-14 15:24:55,720:INFO:Initializing setup()
2025-07-14 15:24:55,720:INFO:self.USI: f608
2025-07-14 15:24:55,721:INFO:self._variable_keys: {'is_multiclass', '_available_plots', 'pipeline', '_ml_usecase', 'idx', 'data', 'y_train', 'gpu_param', 'exp_id', 'target_param', 'seed', 'log_plots_param', 'fold_shuffle_param', 'y_test', 'logging_param', 'exp_name_log', 'fix_imbalance', 'fold_generator', 'html_param', 'fold_groups_param', 'X_train', 'gpu_n_jobs_param', 'y', 'n_jobs_param', 'X', 'USI', 'X_test', 'memory'}
2025-07-14 15:24:55,721:INFO:Checking environment
2025-07-14 15:24:55,723:INFO:python_version: 3.11.9
2025-07-14 15:24:55,723:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 15:24:55,724:INFO:machine: AMD64
2025-07-14 15:24:55,774:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 15:24:55,779:INFO:Memory: svmem(total=16844595200, available=1553797120, percent=90.8, used=15290798080, free=1553797120)
2025-07-14 15:24:55,781:INFO:Physical Core: 4
2025-07-14 15:24:55,782:INFO:Logical Core: 8
2025-07-14 15:24:55,782:INFO:Checking libraries
2025-07-14 15:24:55,782:INFO:System:
2025-07-14 15:24:55,782:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 15:24:55,783:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 15:24:55,784:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 15:24:55,784:INFO:PyCaret required dependencies:
2025-07-14 15:24:55,846:INFO:                 pip: 25.1.1
2025-07-14 15:24:55,846:INFO:          setuptools: 65.5.0
2025-07-14 15:24:55,847:INFO:             pycaret: 3.3.2
2025-07-14 15:24:55,848:INFO:             IPython: 9.3.0
2025-07-14 15:24:55,848:INFO:          ipywidgets: 8.1.7
2025-07-14 15:24:55,848:INFO:                tqdm: 4.67.1
2025-07-14 15:24:55,849:INFO:               numpy: 1.26.4
2025-07-14 15:24:55,849:INFO:              pandas: 2.1.4
2025-07-14 15:24:55,850:INFO:              jinja2: 3.1.6
2025-07-14 15:24:55,850:INFO:               scipy: 1.11.4
2025-07-14 15:24:55,850:INFO:              joblib: 1.3.2
2025-07-14 15:24:55,851:INFO:             sklearn: 1.4.2
2025-07-14 15:24:55,851:INFO:                pyod: 2.0.5
2025-07-14 15:24:55,851:INFO:            imblearn: 0.13.0
2025-07-14 15:24:55,851:INFO:   category_encoders: 2.7.0
2025-07-14 15:24:55,852:INFO:            lightgbm: 4.6.0
2025-07-14 15:24:55,852:INFO:               numba: 0.61.2
2025-07-14 15:24:55,852:INFO:            requests: 2.32.4
2025-07-14 15:24:55,852:INFO:          matplotlib: 3.7.5
2025-07-14 15:24:55,854:INFO:          scikitplot: 0.3.7
2025-07-14 15:24:55,854:INFO:         yellowbrick: 1.5
2025-07-14 15:24:55,854:INFO:              plotly: 5.24.1
2025-07-14 15:24:55,854:INFO:    plotly-resampler: Not installed
2025-07-14 15:24:55,855:INFO:             kaleido: 1.0.0
2025-07-14 15:24:55,855:INFO:           schemdraw: 0.15
2025-07-14 15:24:55,855:INFO:         statsmodels: 0.14.4
2025-07-14 15:24:55,855:INFO:              sktime: 0.26.0
2025-07-14 15:24:55,855:INFO:               tbats: 1.1.3
2025-07-14 15:24:55,855:INFO:            pmdarima: 2.0.4
2025-07-14 15:24:55,855:INFO:              psutil: 7.0.0
2025-07-14 15:24:55,855:INFO:          markupsafe: 3.0.2
2025-07-14 15:24:55,855:INFO:             pickle5: Not installed
2025-07-14 15:24:55,855:INFO:         cloudpickle: 3.1.1
2025-07-14 15:24:55,855:INFO:         deprecation: 2.1.0
2025-07-14 15:24:55,855:INFO:              xxhash: 3.5.0
2025-07-14 15:24:55,855:INFO:           wurlitzer: Not installed
2025-07-14 15:24:55,855:INFO:PyCaret optional dependencies:
2025-07-14 15:24:55,867:INFO:                shap: 0.48.0
2025-07-14 15:24:55,867:INFO:           interpret: Not installed
2025-07-14 15:24:55,867:INFO:                umap: Not installed
2025-07-14 15:24:55,867:INFO:     ydata_profiling: Not installed
2025-07-14 15:24:55,867:INFO:  explainerdashboard: Not installed
2025-07-14 15:24:55,867:INFO:             autoviz: Not installed
2025-07-14 15:24:55,867:INFO:           fairlearn: Not installed
2025-07-14 15:24:55,867:INFO:          deepchecks: Not installed
2025-07-14 15:24:55,867:INFO:             xgboost: Not installed
2025-07-14 15:24:55,867:INFO:            catboost: Not installed
2025-07-14 15:24:55,867:INFO:              kmodes: Not installed
2025-07-14 15:24:55,867:INFO:             mlxtend: Not installed
2025-07-14 15:24:55,867:INFO:       statsforecast: Not installed
2025-07-14 15:24:55,867:INFO:        tune_sklearn: Not installed
2025-07-14 15:24:55,867:INFO:                 ray: Not installed
2025-07-14 15:24:55,868:INFO:            hyperopt: Not installed
2025-07-14 15:24:55,868:INFO:              optuna: Not installed
2025-07-14 15:24:55,868:INFO:               skopt: Not installed
2025-07-14 15:24:55,868:INFO:              mlflow: Not installed
2025-07-14 15:24:55,868:INFO:              gradio: Not installed
2025-07-14 15:24:55,868:INFO:             fastapi: Not installed
2025-07-14 15:24:55,868:INFO:             uvicorn: Not installed
2025-07-14 15:24:55,868:INFO:              m2cgen: Not installed
2025-07-14 15:24:55,868:INFO:           evidently: Not installed
2025-07-14 15:24:55,868:INFO:               fugue: Not installed
2025-07-14 15:24:55,868:INFO:           streamlit: Not installed
2025-07-14 15:24:55,868:INFO:             prophet: Not installed
2025-07-14 15:24:55,868:INFO:None
2025-07-14 15:24:55,868:INFO:Set up data.
2025-07-14 15:24:55,883:INFO:Set up folding strategy.
2025-07-14 15:24:55,883:INFO:Set up train/test split.
2025-07-14 15:24:55,946:INFO:Set up index.
2025-07-14 15:24:55,953:INFO:Assigning column types.
2025-07-14 15:24:55,971:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 15:24:56,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,094:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,118:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 15:24:56,151:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:24:56,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,247:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 15:24:56,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:56,387:INFO:Preparing preprocessing pipeline...
2025-07-14 15:24:56,391:INFO:Set up simple imputation.
2025-07-14 15:24:56,402:INFO:Set up encoding of categorical features.
2025-07-14 15:24:56,402:INFO:Set up imbalanced handling.
2025-07-14 15:24:56,404:INFO:Set up column name cleaning.
2025-07-14 15:24:56,659:INFO:Finished creating preprocessing pipeline.
2025-07-14 15:24:56,666:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 15:24:56,666:INFO:Creating final display dataframe.
2025-07-14 15:24:57,156:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f608
2025-07-14 15:24:57,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:57,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:57,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:57,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:24:57,292:INFO:setup() successfully completed in 1.62s...............
2025-07-14 15:24:57,293:INFO:Initializing create_model()
2025-07-14 15:24:57,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000186507493D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 15:24:57,293:INFO:Checking exceptions
2025-07-14 15:24:57,296:INFO:Importing libraries
2025-07-14 15:24:57,296:INFO:Copying training dataset
2025-07-14 15:24:57,330:INFO:Defining folds
2025-07-14 15:24:57,330:INFO:Declaring metric variables
2025-07-14 15:24:57,330:INFO:Importing untrained model
2025-07-14 15:24:57,330:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:24:57,330:INFO:Starting cross validation
2025-07-14 15:24:57,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 15:26:15,595:INFO:Calculating mean and std
2025-07-14 15:26:15,618:INFO:Creating metrics dataframe
2025-07-14 15:26:15,662:INFO:Finalizing model
2025-07-14 15:26:23,382:INFO:Uploading results into container
2025-07-14 15:26:23,385:INFO:Uploading model into container now
2025-07-14 15:26:23,421:INFO:_master_model_container: 1
2025-07-14 15:26:23,423:INFO:_display_container: 2
2025-07-14 15:26:23,432:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:26:23,433:INFO:create_model() successfully completed......................................
2025-07-14 15:26:25,064:INFO:Initializing plot_model()
2025-07-14 15:26:25,066:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000186507493D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 15:26:25,067:INFO:Checking exceptions
2025-07-14 15:26:25,193:INFO:Preloading libraries
2025-07-14 15:26:26,277:INFO:Copying training dataset
2025-07-14 15:26:26,278:INFO:Plot type: feature
2025-07-14 15:26:26,279:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 15:33:50,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:33:50,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:34:45,005:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 15:35:14,042:INFO:PyCaret ClassificationExperiment
2025-07-14 15:35:14,043:INFO:Logging name: clf-default-name
2025-07-14 15:35:14,043:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 15:35:14,043:INFO:version 3.3.2
2025-07-14 15:35:14,044:INFO:Initializing setup()
2025-07-14 15:35:14,044:INFO:self.USI: 08cc
2025-07-14 15:35:14,044:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'n_jobs_param', 'log_plots_param', 'X_train', 'data', 'y_train', 'idx', 'target_param', 'html_param', '_available_plots', 'exp_name_log', 'y_test', 'pipeline', 'gpu_param', 'exp_id', 'is_multiclass', 'USI', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'y', 'X', 'seed', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance'}
2025-07-14 15:35:14,045:INFO:Checking environment
2025-07-14 15:35:14,045:INFO:python_version: 3.11.9
2025-07-14 15:35:14,045:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 15:35:14,045:INFO:machine: AMD64
2025-07-14 15:35:14,089:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 15:35:14,095:INFO:Memory: svmem(total=16844595200, available=2706374656, percent=83.9, used=14138220544, free=2706374656)
2025-07-14 15:35:14,095:INFO:Physical Core: 4
2025-07-14 15:35:14,095:INFO:Logical Core: 8
2025-07-14 15:35:14,095:INFO:Checking libraries
2025-07-14 15:35:14,095:INFO:System:
2025-07-14 15:35:14,095:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 15:35:14,096:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 15:35:14,096:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 15:35:14,096:INFO:PyCaret required dependencies:
2025-07-14 15:35:14,180:INFO:                 pip: 25.1.1
2025-07-14 15:35:14,181:INFO:          setuptools: 65.5.0
2025-07-14 15:35:14,181:INFO:             pycaret: 3.3.2
2025-07-14 15:35:14,181:INFO:             IPython: 9.3.0
2025-07-14 15:35:14,181:INFO:          ipywidgets: 8.1.7
2025-07-14 15:35:14,181:INFO:                tqdm: 4.67.1
2025-07-14 15:35:14,181:INFO:               numpy: 1.26.4
2025-07-14 15:35:14,182:INFO:              pandas: 2.1.4
2025-07-14 15:35:14,182:INFO:              jinja2: 3.1.6
2025-07-14 15:35:14,182:INFO:               scipy: 1.11.4
2025-07-14 15:35:14,182:INFO:              joblib: 1.3.2
2025-07-14 15:35:14,182:INFO:             sklearn: 1.4.2
2025-07-14 15:35:14,182:INFO:                pyod: 2.0.5
2025-07-14 15:35:14,182:INFO:            imblearn: 0.13.0
2025-07-14 15:35:14,182:INFO:   category_encoders: 2.7.0
2025-07-14 15:35:14,182:INFO:            lightgbm: 4.6.0
2025-07-14 15:35:14,182:INFO:               numba: 0.61.2
2025-07-14 15:35:14,182:INFO:            requests: 2.32.4
2025-07-14 15:35:14,183:INFO:          matplotlib: 3.7.5
2025-07-14 15:35:14,183:INFO:          scikitplot: 0.3.7
2025-07-14 15:35:14,183:INFO:         yellowbrick: 1.5
2025-07-14 15:35:14,183:INFO:              plotly: 5.24.1
2025-07-14 15:35:14,184:INFO:    plotly-resampler: Not installed
2025-07-14 15:35:14,184:INFO:             kaleido: 1.0.0
2025-07-14 15:35:14,184:INFO:           schemdraw: 0.15
2025-07-14 15:35:14,184:INFO:         statsmodels: 0.14.4
2025-07-14 15:35:14,184:INFO:              sktime: 0.26.0
2025-07-14 15:35:14,184:INFO:               tbats: 1.1.3
2025-07-14 15:35:14,184:INFO:            pmdarima: 2.0.4
2025-07-14 15:35:14,184:INFO:              psutil: 7.0.0
2025-07-14 15:35:14,185:INFO:          markupsafe: 3.0.2
2025-07-14 15:35:14,185:INFO:             pickle5: Not installed
2025-07-14 15:35:14,185:INFO:         cloudpickle: 3.1.1
2025-07-14 15:35:14,185:INFO:         deprecation: 2.1.0
2025-07-14 15:35:14,185:INFO:              xxhash: 3.5.0
2025-07-14 15:35:14,185:INFO:           wurlitzer: Not installed
2025-07-14 15:35:14,185:INFO:PyCaret optional dependencies:
2025-07-14 15:35:14,213:INFO:                shap: 0.48.0
2025-07-14 15:35:14,214:INFO:           interpret: Not installed
2025-07-14 15:35:14,214:INFO:                umap: Not installed
2025-07-14 15:35:14,214:INFO:     ydata_profiling: Not installed
2025-07-14 15:35:14,214:INFO:  explainerdashboard: Not installed
2025-07-14 15:35:14,214:INFO:             autoviz: Not installed
2025-07-14 15:35:14,214:INFO:           fairlearn: Not installed
2025-07-14 15:35:14,214:INFO:          deepchecks: Not installed
2025-07-14 15:35:14,215:INFO:             xgboost: Not installed
2025-07-14 15:35:14,215:INFO:            catboost: Not installed
2025-07-14 15:35:14,215:INFO:              kmodes: Not installed
2025-07-14 15:35:14,215:INFO:             mlxtend: Not installed
2025-07-14 15:35:14,215:INFO:       statsforecast: Not installed
2025-07-14 15:35:14,215:INFO:        tune_sklearn: Not installed
2025-07-14 15:35:14,215:INFO:                 ray: Not installed
2025-07-14 15:35:14,215:INFO:            hyperopt: Not installed
2025-07-14 15:35:14,216:INFO:              optuna: Not installed
2025-07-14 15:35:14,216:INFO:               skopt: Not installed
2025-07-14 15:35:14,216:INFO:              mlflow: Not installed
2025-07-14 15:35:14,216:INFO:              gradio: Not installed
2025-07-14 15:35:14,216:INFO:             fastapi: Not installed
2025-07-14 15:35:14,216:INFO:             uvicorn: Not installed
2025-07-14 15:35:14,216:INFO:              m2cgen: Not installed
2025-07-14 15:35:14,216:INFO:           evidently: Not installed
2025-07-14 15:35:14,216:INFO:               fugue: Not installed
2025-07-14 15:35:14,217:INFO:           streamlit: Not installed
2025-07-14 15:35:14,217:INFO:             prophet: Not installed
2025-07-14 15:35:14,217:INFO:None
2025-07-14 15:35:14,217:INFO:Set up data.
2025-07-14 15:35:14,239:INFO:Set up folding strategy.
2025-07-14 15:35:14,239:INFO:Set up train/test split.
2025-07-14 15:35:14,314:INFO:Set up index.
2025-07-14 15:35:14,320:INFO:Assigning column types.
2025-07-14 15:35:14,336:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 15:35:14,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 15:35:14,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:35:14,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,713:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 15:35:14,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:14,890:INFO:Preparing preprocessing pipeline...
2025-07-14 15:35:14,898:INFO:Set up simple imputation.
2025-07-14 15:35:14,914:INFO:Set up encoding of categorical features.
2025-07-14 15:35:14,915:INFO:Set up imbalanced handling.
2025-07-14 15:35:14,918:INFO:Set up column name cleaning.
2025-07-14 15:35:15,210:INFO:Finished creating preprocessing pipeline.
2025-07-14 15:35:15,218:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 15:35:15,218:INFO:Creating final display dataframe.
2025-07-14 15:35:15,630:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              08cc
2025-07-14 15:35:15,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:15,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:15,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:15,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:35:15,855:INFO:setup() successfully completed in 1.87s...............
2025-07-14 15:35:15,855:INFO:Initializing create_model()
2025-07-14 15:35:15,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCD85AE690>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 15:35:15,855:INFO:Checking exceptions
2025-07-14 15:35:15,858:INFO:Importing libraries
2025-07-14 15:35:15,858:INFO:Copying training dataset
2025-07-14 15:35:15,917:INFO:Defining folds
2025-07-14 15:35:15,917:INFO:Declaring metric variables
2025-07-14 15:35:15,918:INFO:Importing untrained model
2025-07-14 15:35:15,918:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:35:15,919:INFO:Starting cross validation
2025-07-14 15:35:15,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 15:36:26,777:INFO:Calculating mean and std
2025-07-14 15:36:26,796:INFO:Creating metrics dataframe
2025-07-14 15:36:26,838:INFO:Finalizing model
2025-07-14 15:36:33,538:INFO:Uploading results into container
2025-07-14 15:36:33,540:INFO:Uploading model into container now
2025-07-14 15:36:33,569:INFO:_master_model_container: 1
2025-07-14 15:36:33,570:INFO:_display_container: 2
2025-07-14 15:36:33,573:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:36:33,573:INFO:create_model() successfully completed......................................
2025-07-14 15:36:34,819:INFO:Initializing plot_model()
2025-07-14 15:36:34,820:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FCD85AE690>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 15:36:34,822:INFO:Checking exceptions
2025-07-14 15:36:34,913:INFO:Preloading libraries
2025-07-14 15:36:35,698:INFO:Copying training dataset
2025-07-14 15:36:35,698:INFO:Plot type: feature
2025-07-14 15:36:35,700:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 15:40:47,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:40:47,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:40:47,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:40:47,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 15:41:24,985:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 15:41:43,697:INFO:PyCaret ClassificationExperiment
2025-07-14 15:41:43,697:INFO:Logging name: clf-default-name
2025-07-14 15:41:43,698:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 15:41:43,698:INFO:version 3.3.2
2025-07-14 15:41:43,699:INFO:Initializing setup()
2025-07-14 15:41:43,699:INFO:self.USI: 89ef
2025-07-14 15:41:43,699:INFO:self._variable_keys: {'html_param', '_available_plots', 'USI', 'y', 'logging_param', 'seed', 'data', 'y_test', 'X', 'gpu_param', 'exp_name_log', 'X_test', 'X_train', 'is_multiclass', 'fold_groups_param', '_ml_usecase', 'y_train', 'fold_generator', 'memory', 'n_jobs_param', 'log_plots_param', 'gpu_n_jobs_param', 'exp_id', 'fold_shuffle_param', 'idx', 'target_param', 'fix_imbalance', 'pipeline'}
2025-07-14 15:41:43,700:INFO:Checking environment
2025-07-14 15:41:43,700:INFO:python_version: 3.11.9
2025-07-14 15:41:43,700:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 15:41:43,701:INFO:machine: AMD64
2025-07-14 15:41:43,754:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 15:41:43,761:INFO:Memory: svmem(total=16844595200, available=3035758592, percent=82.0, used=13808836608, free=3035758592)
2025-07-14 15:41:43,761:INFO:Physical Core: 4
2025-07-14 15:41:43,762:INFO:Logical Core: 8
2025-07-14 15:41:43,762:INFO:Checking libraries
2025-07-14 15:41:43,762:INFO:System:
2025-07-14 15:41:43,762:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 15:41:43,763:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 15:41:43,763:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 15:41:43,763:INFO:PyCaret required dependencies:
2025-07-14 15:41:43,807:INFO:                 pip: 25.1.1
2025-07-14 15:41:43,807:INFO:          setuptools: 65.5.0
2025-07-14 15:41:43,807:INFO:             pycaret: 3.3.2
2025-07-14 15:41:43,808:INFO:             IPython: 9.3.0
2025-07-14 15:41:43,808:INFO:          ipywidgets: 8.1.7
2025-07-14 15:41:43,808:INFO:                tqdm: 4.67.1
2025-07-14 15:41:43,809:INFO:               numpy: 1.26.4
2025-07-14 15:41:43,809:INFO:              pandas: 2.1.4
2025-07-14 15:41:43,809:INFO:              jinja2: 3.1.6
2025-07-14 15:41:43,809:INFO:               scipy: 1.11.4
2025-07-14 15:41:43,809:INFO:              joblib: 1.3.2
2025-07-14 15:41:43,809:INFO:             sklearn: 1.4.2
2025-07-14 15:41:43,809:INFO:                pyod: 2.0.5
2025-07-14 15:41:43,809:INFO:            imblearn: 0.13.0
2025-07-14 15:41:43,809:INFO:   category_encoders: 2.7.0
2025-07-14 15:41:43,809:INFO:            lightgbm: 4.6.0
2025-07-14 15:41:43,809:INFO:               numba: 0.61.2
2025-07-14 15:41:43,809:INFO:            requests: 2.32.4
2025-07-14 15:41:43,809:INFO:          matplotlib: 3.7.5
2025-07-14 15:41:43,809:INFO:          scikitplot: 0.3.7
2025-07-14 15:41:43,809:INFO:         yellowbrick: 1.5
2025-07-14 15:41:43,809:INFO:              plotly: 5.24.1
2025-07-14 15:41:43,809:INFO:    plotly-resampler: Not installed
2025-07-14 15:41:43,809:INFO:             kaleido: 1.0.0
2025-07-14 15:41:43,809:INFO:           schemdraw: 0.15
2025-07-14 15:41:43,809:INFO:         statsmodels: 0.14.4
2025-07-14 15:41:43,809:INFO:              sktime: 0.26.0
2025-07-14 15:41:43,809:INFO:               tbats: 1.1.3
2025-07-14 15:41:43,809:INFO:            pmdarima: 2.0.4
2025-07-14 15:41:43,809:INFO:              psutil: 7.0.0
2025-07-14 15:41:43,809:INFO:          markupsafe: 3.0.2
2025-07-14 15:41:43,809:INFO:             pickle5: Not installed
2025-07-14 15:41:43,809:INFO:         cloudpickle: 3.1.1
2025-07-14 15:41:43,809:INFO:         deprecation: 2.1.0
2025-07-14 15:41:43,810:INFO:              xxhash: 3.5.0
2025-07-14 15:41:43,810:INFO:           wurlitzer: Not installed
2025-07-14 15:41:43,810:INFO:PyCaret optional dependencies:
2025-07-14 15:41:43,821:INFO:                shap: 0.48.0
2025-07-14 15:41:43,822:INFO:           interpret: Not installed
2025-07-14 15:41:43,822:INFO:                umap: Not installed
2025-07-14 15:41:43,822:INFO:     ydata_profiling: Not installed
2025-07-14 15:41:43,822:INFO:  explainerdashboard: Not installed
2025-07-14 15:41:43,822:INFO:             autoviz: Not installed
2025-07-14 15:41:43,822:INFO:           fairlearn: Not installed
2025-07-14 15:41:43,822:INFO:          deepchecks: Not installed
2025-07-14 15:41:43,822:INFO:             xgboost: Not installed
2025-07-14 15:41:43,822:INFO:            catboost: Not installed
2025-07-14 15:41:43,822:INFO:              kmodes: Not installed
2025-07-14 15:41:43,822:INFO:             mlxtend: Not installed
2025-07-14 15:41:43,822:INFO:       statsforecast: Not installed
2025-07-14 15:41:43,822:INFO:        tune_sklearn: Not installed
2025-07-14 15:41:43,822:INFO:                 ray: Not installed
2025-07-14 15:41:43,822:INFO:            hyperopt: Not installed
2025-07-14 15:41:43,822:INFO:              optuna: Not installed
2025-07-14 15:41:43,822:INFO:               skopt: Not installed
2025-07-14 15:41:43,822:INFO:              mlflow: Not installed
2025-07-14 15:41:43,822:INFO:              gradio: Not installed
2025-07-14 15:41:43,822:INFO:             fastapi: Not installed
2025-07-14 15:41:43,822:INFO:             uvicorn: Not installed
2025-07-14 15:41:43,822:INFO:              m2cgen: Not installed
2025-07-14 15:41:43,822:INFO:           evidently: Not installed
2025-07-14 15:41:43,822:INFO:               fugue: Not installed
2025-07-14 15:41:43,822:INFO:           streamlit: Not installed
2025-07-14 15:41:43,822:INFO:             prophet: Not installed
2025-07-14 15:41:43,822:INFO:None
2025-07-14 15:41:43,822:INFO:Set up data.
2025-07-14 15:41:43,838:INFO:Set up folding strategy.
2025-07-14 15:41:43,838:INFO:Set up train/test split.
2025-07-14 15:41:43,879:INFO:Set up index.
2025-07-14 15:41:43,882:INFO:Assigning column types.
2025-07-14 15:41:43,893:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 15:41:43,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:41:43,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:41:43,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:43,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:43,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 15:41:43,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:41:44,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,020:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 15:41:44,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:41:44,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,109:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 15:41:44,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,132:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 15:41:44,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,273:INFO:Preparing preprocessing pipeline...
2025-07-14 15:41:44,275:INFO:Set up simple imputation.
2025-07-14 15:41:44,285:INFO:Set up encoding of categorical features.
2025-07-14 15:41:44,285:INFO:Set up imbalanced handling.
2025-07-14 15:41:44,287:INFO:Set up column name cleaning.
2025-07-14 15:41:44,498:INFO:Finished creating preprocessing pipeline.
2025-07-14 15:41:44,505:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 15:41:44,505:INFO:Creating final display dataframe.
2025-07-14 15:41:44,630:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              89ef
2025-07-14 15:41:44,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 15:41:44,796:INFO:setup() successfully completed in 1.14s...............
2025-07-14 15:41:44,797:INFO:Initializing create_model()
2025-07-14 15:41:44,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 15:41:44,797:INFO:Checking exceptions
2025-07-14 15:41:44,801:INFO:Importing libraries
2025-07-14 15:41:44,802:INFO:Copying training dataset
2025-07-14 15:41:44,847:INFO:Defining folds
2025-07-14 15:41:44,847:INFO:Declaring metric variables
2025-07-14 15:41:44,847:INFO:Importing untrained model
2025-07-14 15:41:44,849:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:41:44,849:INFO:Starting cross validation
2025-07-14 15:41:44,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 15:42:51,752:INFO:Calculating mean and std
2025-07-14 15:42:51,758:INFO:Creating metrics dataframe
2025-07-14 15:42:51,764:INFO:Finalizing model
2025-07-14 15:42:58,528:INFO:Uploading results into container
2025-07-14 15:42:58,530:INFO:Uploading model into container now
2025-07-14 15:42:58,553:INFO:_master_model_container: 1
2025-07-14 15:42:58,554:INFO:_display_container: 2
2025-07-14 15:42:58,555:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:42:58,556:INFO:create_model() successfully completed......................................
2025-07-14 15:42:59,377:INFO:Initializing plot_model()
2025-07-14 15:42:59,378:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 15:42:59,378:INFO:Checking exceptions
2025-07-14 15:42:59,473:INFO:Preloading libraries
2025-07-14 15:43:00,459:INFO:Copying training dataset
2025-07-14 15:43:00,459:INFO:Plot type: feature
2025-07-14 15:43:00,462:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 15:43:07,743:INFO:Visual Rendered Successfully
2025-07-14 15:43:08,220:INFO:plot_model() successfully completed......................................
2025-07-14 15:43:08,375:INFO:Initializing tune_model()
2025-07-14 15:43:08,383:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-14 15:43:08,384:INFO:Checking exceptions
2025-07-14 15:43:08,437:INFO:Copying training dataset
2025-07-14 15:43:08,603:INFO:Checking base model
2025-07-14 15:43:08,603:INFO:Base model : Extra Trees Classifier
2025-07-14 15:43:08,604:INFO:Declaring metric variables
2025-07-14 15:43:08,604:INFO:Defining Hyperparameters
2025-07-14 15:43:08,802:INFO:Tuning with n_jobs=-1
2025-07-14 15:43:08,803:INFO:Initializing RandomizedSearchCV
2025-07-14 15:45:38,097:INFO:best_params: {'actual_estimator__n_estimators': 90, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2025-07-14 15:45:38,098:INFO:Hyperparameter search completed
2025-07-14 15:45:38,098:INFO:SubProcess create_model() called ==================================
2025-07-14 15:45:38,100:INFO:Initializing create_model()
2025-07-14 15:45:38,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237898D6310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 90, 'min_samples_split': 7, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.01, 'max_features': 'log2', 'max_depth': 8, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': False})
2025-07-14 15:45:38,100:INFO:Checking exceptions
2025-07-14 15:45:38,100:INFO:Importing libraries
2025-07-14 15:45:38,100:INFO:Copying training dataset
2025-07-14 15:45:38,208:INFO:Defining folds
2025-07-14 15:45:38,209:INFO:Declaring metric variables
2025-07-14 15:45:38,211:INFO:Importing untrained model
2025-07-14 15:45:38,211:INFO:Declaring custom model
2025-07-14 15:45:38,215:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:45:38,216:INFO:Starting cross validation
2025-07-14 15:45:38,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 15:45:50,155:INFO:Calculating mean and std
2025-07-14 15:45:50,157:INFO:Creating metrics dataframe
2025-07-14 15:45:50,161:INFO:Finalizing model
2025-07-14 15:45:52,754:INFO:Uploading results into container
2025-07-14 15:45:52,755:INFO:Uploading model into container now
2025-07-14 15:45:52,756:INFO:_master_model_container: 2
2025-07-14 15:45:52,756:INFO:_display_container: 3
2025-07-14 15:45:52,757:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='entropy', max_depth=8, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.01, min_samples_leaf=2,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=90, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:45:52,757:INFO:create_model() successfully completed......................................
2025-07-14 15:45:52,905:INFO:SubProcess create_model() end ==================================
2025-07-14 15:45:52,905:INFO:choose_better activated
2025-07-14 15:45:52,906:INFO:SubProcess create_model() called ==================================
2025-07-14 15:45:52,907:INFO:Initializing create_model()
2025-07-14 15:45:52,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 15:45:52,908:INFO:Checking exceptions
2025-07-14 15:45:52,910:INFO:Importing libraries
2025-07-14 15:45:52,910:INFO:Copying training dataset
2025-07-14 15:45:52,990:INFO:Defining folds
2025-07-14 15:45:52,991:INFO:Declaring metric variables
2025-07-14 15:45:52,992:INFO:Importing untrained model
2025-07-14 15:45:52,992:INFO:Declaring custom model
2025-07-14 15:45:52,993:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:45:52,994:INFO:Starting cross validation
2025-07-14 15:45:52,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 15:46:45,458:INFO:Calculating mean and std
2025-07-14 15:46:45,460:INFO:Creating metrics dataframe
2025-07-14 15:46:45,466:INFO:Finalizing model
2025-07-14 15:46:52,798:INFO:Uploading results into container
2025-07-14 15:46:52,799:INFO:Uploading model into container now
2025-07-14 15:46:52,800:INFO:_master_model_container: 3
2025-07-14 15:46:52,800:INFO:_display_container: 4
2025-07-14 15:46:52,801:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:46:52,801:INFO:create_model() successfully completed......................................
2025-07-14 15:46:52,956:INFO:SubProcess create_model() end ==================================
2025-07-14 15:46:52,958:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for Recall is 0.7898
2025-07-14 15:46:52,958:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='entropy', max_depth=8, max_features='log2',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.01, min_samples_leaf=2,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=90, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for Recall is 0.7777
2025-07-14 15:46:52,960:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) is best model
2025-07-14 15:46:52,960:INFO:choose_better completed
2025-07-14 15:46:52,961:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-14 15:46:52,982:INFO:_master_model_container: 3
2025-07-14 15:46:52,982:INFO:_display_container: 3
2025-07-14 15:46:52,983:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:46:52,984:INFO:tune_model() successfully completed......................................
2025-07-14 15:46:53,300:INFO:Initializing finalize_model()
2025-07-14 15:46:53,300:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-14 15:46:53,301:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 15:46:53,346:INFO:Initializing create_model()
2025-07-14 15:46:53,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237FF1CD490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 15:46:53,346:INFO:Checking exceptions
2025-07-14 15:46:53,349:INFO:Importing libraries
2025-07-14 15:46:53,349:INFO:Copying training dataset
2025-07-14 15:46:53,353:INFO:Defining folds
2025-07-14 15:46:53,353:INFO:Declaring metric variables
2025-07-14 15:46:53,353:INFO:Importing untrained model
2025-07-14 15:46:53,353:INFO:Declaring custom model
2025-07-14 15:46:53,361:INFO:Extra Trees Classifier Imported successfully
2025-07-14 15:46:53,365:INFO:Cross validation set to False
2025-07-14 15:46:53,366:INFO:Fitting Model
2025-07-14 15:47:05,987:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 15:47:05,987:INFO:create_model() successfully completed......................................
2025-07-14 15:47:06,103:INFO:_master_model_container: 3
2025-07-14 15:47:06,103:INFO:_display_container: 3
2025-07-14 15:47:06,126:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 15:47:06,126:INFO:finalize_model() successfully completed......................................
2025-07-14 15:47:06,300:INFO:Initializing save_model()
2025-07-14 15:47:06,301:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-14 15:47:06,301:INFO:Adding model into prep_pipe
2025-07-14 15:47:06,301:WARNING:Only Model saved as it was a pipeline.
2025-07-14 15:47:37,631:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal.pkl saved in current working directory
2025-07-14 15:47:37,661:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 15:47:37,664:INFO:save_model() successfully completed......................................
2025-07-14 16:06:12,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:06:12,040:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:06:12,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:06:12,041:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:07:03,107:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:10:35,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:10:35,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:10:35,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:10:35,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:11:11,011:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:11:11,135:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:149: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df.groupby('Vendor', group_keys=False)

2025-07-14 16:11:56,460:INFO:PyCaret ClassificationExperiment
2025-07-14 16:11:56,462:INFO:Logging name: clf-default-name
2025-07-14 16:11:56,464:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 16:11:56,466:INFO:version 3.3.2
2025-07-14 16:11:56,467:INFO:Initializing setup()
2025-07-14 16:11:56,468:INFO:self.USI: 0ed2
2025-07-14 16:11:56,469:INFO:self._variable_keys: {'X_train', 'y_test', 'data', 'log_plots_param', 'logging_param', 'y', '_available_plots', 'pipeline', 'fold_generator', 'y_train', 'gpu_param', '_ml_usecase', 'gpu_n_jobs_param', 'X', 'target_param', 'X_test', 'USI', 'html_param', 'is_multiclass', 'idx', 'seed', 'memory', 'fix_imbalance', 'n_jobs_param', 'exp_id', 'exp_name_log', 'fold_groups_param', 'fold_shuffle_param'}
2025-07-14 16:11:56,469:INFO:Checking environment
2025-07-14 16:11:56,470:INFO:python_version: 3.11.9
2025-07-14 16:11:56,471:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 16:11:56,471:INFO:machine: AMD64
2025-07-14 16:11:56,526:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 16:11:56,540:INFO:Memory: svmem(total=16844595200, available=1911525376, percent=88.7, used=14933069824, free=1911525376)
2025-07-14 16:11:56,540:INFO:Physical Core: 4
2025-07-14 16:11:56,542:INFO:Logical Core: 8
2025-07-14 16:11:56,542:INFO:Checking libraries
2025-07-14 16:11:56,543:INFO:System:
2025-07-14 16:11:56,544:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 16:11:56,544:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 16:11:56,545:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 16:11:56,545:INFO:PyCaret required dependencies:
2025-07-14 16:11:56,650:INFO:                 pip: 25.1.1
2025-07-14 16:11:56,651:INFO:          setuptools: 65.5.0
2025-07-14 16:11:56,651:INFO:             pycaret: 3.3.2
2025-07-14 16:11:56,652:INFO:             IPython: 9.3.0
2025-07-14 16:11:56,652:INFO:          ipywidgets: 8.1.7
2025-07-14 16:11:56,653:INFO:                tqdm: 4.67.1
2025-07-14 16:11:56,653:INFO:               numpy: 1.26.4
2025-07-14 16:11:56,653:INFO:              pandas: 2.1.4
2025-07-14 16:11:56,654:INFO:              jinja2: 3.1.6
2025-07-14 16:11:56,654:INFO:               scipy: 1.11.4
2025-07-14 16:11:56,655:INFO:              joblib: 1.3.2
2025-07-14 16:11:56,655:INFO:             sklearn: 1.4.2
2025-07-14 16:11:56,656:INFO:                pyod: 2.0.5
2025-07-14 16:11:56,656:INFO:            imblearn: 0.13.0
2025-07-14 16:11:56,657:INFO:   category_encoders: 2.7.0
2025-07-14 16:11:56,658:INFO:            lightgbm: 4.6.0
2025-07-14 16:11:56,658:INFO:               numba: 0.61.2
2025-07-14 16:11:56,658:INFO:            requests: 2.32.4
2025-07-14 16:11:56,659:INFO:          matplotlib: 3.7.5
2025-07-14 16:11:56,659:INFO:          scikitplot: 0.3.7
2025-07-14 16:11:56,659:INFO:         yellowbrick: 1.5
2025-07-14 16:11:56,659:INFO:              plotly: 5.24.1
2025-07-14 16:11:56,659:INFO:    plotly-resampler: Not installed
2025-07-14 16:11:56,659:INFO:             kaleido: 1.0.0
2025-07-14 16:11:56,659:INFO:           schemdraw: 0.15
2025-07-14 16:11:56,659:INFO:         statsmodels: 0.14.4
2025-07-14 16:11:56,660:INFO:              sktime: 0.26.0
2025-07-14 16:11:56,660:INFO:               tbats: 1.1.3
2025-07-14 16:11:56,660:INFO:            pmdarima: 2.0.4
2025-07-14 16:11:56,660:INFO:              psutil: 7.0.0
2025-07-14 16:11:56,660:INFO:          markupsafe: 3.0.2
2025-07-14 16:11:56,660:INFO:             pickle5: Not installed
2025-07-14 16:11:56,660:INFO:         cloudpickle: 3.1.1
2025-07-14 16:11:56,660:INFO:         deprecation: 2.1.0
2025-07-14 16:11:56,661:INFO:              xxhash: 3.5.0
2025-07-14 16:11:56,661:INFO:           wurlitzer: Not installed
2025-07-14 16:11:56,661:INFO:PyCaret optional dependencies:
2025-07-14 16:11:56,703:INFO:                shap: 0.48.0
2025-07-14 16:11:56,703:INFO:           interpret: Not installed
2025-07-14 16:11:56,703:INFO:                umap: Not installed
2025-07-14 16:11:56,703:INFO:     ydata_profiling: Not installed
2025-07-14 16:11:56,703:INFO:  explainerdashboard: Not installed
2025-07-14 16:11:56,703:INFO:             autoviz: Not installed
2025-07-14 16:11:56,703:INFO:           fairlearn: Not installed
2025-07-14 16:11:56,703:INFO:          deepchecks: Not installed
2025-07-14 16:11:56,704:INFO:             xgboost: Not installed
2025-07-14 16:11:56,704:INFO:            catboost: Not installed
2025-07-14 16:11:56,704:INFO:              kmodes: Not installed
2025-07-14 16:11:56,704:INFO:             mlxtend: Not installed
2025-07-14 16:11:56,704:INFO:       statsforecast: Not installed
2025-07-14 16:11:56,704:INFO:        tune_sklearn: Not installed
2025-07-14 16:11:56,704:INFO:                 ray: Not installed
2025-07-14 16:11:56,704:INFO:            hyperopt: Not installed
2025-07-14 16:11:56,704:INFO:              optuna: Not installed
2025-07-14 16:11:56,704:INFO:               skopt: Not installed
2025-07-14 16:11:56,704:INFO:              mlflow: Not installed
2025-07-14 16:11:56,704:INFO:              gradio: Not installed
2025-07-14 16:11:56,704:INFO:             fastapi: Not installed
2025-07-14 16:11:56,704:INFO:             uvicorn: Not installed
2025-07-14 16:11:56,704:INFO:              m2cgen: Not installed
2025-07-14 16:11:56,704:INFO:           evidently: Not installed
2025-07-14 16:11:56,704:INFO:               fugue: Not installed
2025-07-14 16:11:56,704:INFO:           streamlit: Not installed
2025-07-14 16:11:56,704:INFO:             prophet: Not installed
2025-07-14 16:11:56,704:INFO:None
2025-07-14 16:11:56,705:INFO:Set up data.
2025-07-14 16:11:56,738:INFO:Set up folding strategy.
2025-07-14 16:11:56,738:INFO:Set up train/test split.
2025-07-14 16:11:56,840:INFO:Set up index.
2025-07-14 16:11:56,848:INFO:Assigning column types.
2025-07-14 16:11:56,886:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 16:11:57,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,017:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,432:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 16:11:57,590:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:11:57,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,784:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 16:11:57,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:57,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:58,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:58,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:11:58,124:INFO:Preparing preprocessing pipeline...
2025-07-14 16:11:58,135:INFO:Set up simple imputation.
2025-07-14 16:11:58,163:INFO:Set up encoding of categorical features.
2025-07-14 16:11:58,165:INFO:Set up imbalanced handling.
2025-07-14 16:11:58,175:INFO:Set up column name cleaning.
2025-07-14 16:11:59,398:INFO:Finished creating preprocessing pipeline.
2025-07-14 16:11:59,415:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor',
                                             'taxa_atraso_ultimos_5'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strat...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 16:11:59,415:INFO:Creating final display dataframe.
2025-07-14 16:12:00,954:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 7)
4        Transformed data shape       (227757, 7)
5   Transformed train set shape       (181070, 7)
6    Transformed test set shape        (46687, 7)
7              Numeric features                 4
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0ed2
2025-07-14 16:12:01,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:12:01,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:12:01,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:12:01,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:12:01,322:INFO:setup() successfully completed in 4.95s...............
2025-07-14 16:12:01,322:INFO:Initializing create_model()
2025-07-14 16:12:01,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCE642E410>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 16:12:01,323:INFO:Checking exceptions
2025-07-14 16:12:01,337:INFO:Importing libraries
2025-07-14 16:12:01,337:INFO:Copying training dataset
2025-07-14 16:12:01,443:INFO:Defining folds
2025-07-14 16:12:01,444:INFO:Declaring metric variables
2025-07-14 16:12:01,444:INFO:Importing untrained model
2025-07-14 16:12:01,446:INFO:Extra Trees Classifier Imported successfully
2025-07-14 16:12:01,446:INFO:Starting cross validation
2025-07-14 16:12:01,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 16:13:11,067:INFO:Calculating mean and std
2025-07-14 16:13:11,069:INFO:Creating metrics dataframe
2025-07-14 16:13:11,075:INFO:Finalizing model
2025-07-14 16:13:16,405:INFO:Uploading results into container
2025-07-14 16:13:16,409:INFO:Uploading model into container now
2025-07-14 16:13:16,447:INFO:_master_model_container: 1
2025-07-14 16:13:16,447:INFO:_display_container: 2
2025-07-14 16:13:16,448:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 16:13:16,448:INFO:create_model() successfully completed......................................
2025-07-14 16:13:17,329:INFO:Initializing plot_model()
2025-07-14 16:13:17,330:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCE642E410>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 16:13:17,330:INFO:Checking exceptions
2025-07-14 16:13:17,473:INFO:Preloading libraries
2025-07-14 16:13:18,200:INFO:Copying training dataset
2025-07-14 16:13:18,201:INFO:Plot type: feature
2025-07-14 16:13:18,202:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 16:19:51,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:19:51,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:19:51,740:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:19:51,741:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:20:59,284:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:20:59,804:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:152: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df.groupby('Vendor', group_keys=False)

2025-07-14 16:21:36,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:21:36,558:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:21:36,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:21:36,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:22:24,382:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:22:24,532:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:152: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df.groupby('Vendor', group_keys=False)

2025-07-14 16:23:28,182:INFO:PyCaret ClassificationExperiment
2025-07-14 16:23:28,183:INFO:Logging name: clf-default-name
2025-07-14 16:23:28,184:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 16:23:28,184:INFO:version 3.3.2
2025-07-14 16:23:28,184:INFO:Initializing setup()
2025-07-14 16:23:28,184:INFO:self.USI: f643
2025-07-14 16:23:28,185:INFO:self._variable_keys: {'_ml_usecase', 'USI', 'log_plots_param', 'gpu_param', 'X', 'logging_param', 'idx', 'fold_generator', 'html_param', 'exp_id', 'fold_shuffle_param', 'target_param', 'pipeline', 'gpu_n_jobs_param', 'memory', '_available_plots', 'X_train', 'X_test', 'y_train', 'fix_imbalance', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'n_jobs_param', 'data', 'y_test', 'y', 'seed'}
2025-07-14 16:23:28,185:INFO:Checking environment
2025-07-14 16:23:28,186:INFO:python_version: 3.11.9
2025-07-14 16:23:28,186:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 16:23:28,187:INFO:machine: AMD64
2025-07-14 16:23:28,270:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 16:23:28,280:INFO:Memory: svmem(total=16844595200, available=1297424384, percent=92.3, used=15547170816, free=1297424384)
2025-07-14 16:23:28,281:INFO:Physical Core: 4
2025-07-14 16:23:28,281:INFO:Logical Core: 8
2025-07-14 16:23:28,283:INFO:Checking libraries
2025-07-14 16:23:28,283:INFO:System:
2025-07-14 16:23:28,284:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 16:23:28,284:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 16:23:28,285:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 16:23:28,285:INFO:PyCaret required dependencies:
2025-07-14 16:23:28,389:INFO:                 pip: 25.1.1
2025-07-14 16:23:28,389:INFO:          setuptools: 65.5.0
2025-07-14 16:23:28,391:INFO:             pycaret: 3.3.2
2025-07-14 16:23:28,391:INFO:             IPython: 9.3.0
2025-07-14 16:23:28,392:INFO:          ipywidgets: 8.1.7
2025-07-14 16:23:28,393:INFO:                tqdm: 4.67.1
2025-07-14 16:23:28,393:INFO:               numpy: 1.26.4
2025-07-14 16:23:28,394:INFO:              pandas: 2.1.4
2025-07-14 16:23:28,398:INFO:              jinja2: 3.1.6
2025-07-14 16:23:28,399:INFO:               scipy: 1.11.4
2025-07-14 16:23:28,399:INFO:              joblib: 1.3.2
2025-07-14 16:23:28,400:INFO:             sklearn: 1.4.2
2025-07-14 16:23:28,400:INFO:                pyod: 2.0.5
2025-07-14 16:23:28,401:INFO:            imblearn: 0.13.0
2025-07-14 16:23:28,401:INFO:   category_encoders: 2.7.0
2025-07-14 16:23:28,401:INFO:            lightgbm: 4.6.0
2025-07-14 16:23:28,401:INFO:               numba: 0.61.2
2025-07-14 16:23:28,401:INFO:            requests: 2.32.4
2025-07-14 16:23:28,402:INFO:          matplotlib: 3.7.5
2025-07-14 16:23:28,402:INFO:          scikitplot: 0.3.7
2025-07-14 16:23:28,402:INFO:         yellowbrick: 1.5
2025-07-14 16:23:28,402:INFO:              plotly: 5.24.1
2025-07-14 16:23:28,402:INFO:    plotly-resampler: Not installed
2025-07-14 16:23:28,402:INFO:             kaleido: 1.0.0
2025-07-14 16:23:28,402:INFO:           schemdraw: 0.15
2025-07-14 16:23:28,402:INFO:         statsmodels: 0.14.4
2025-07-14 16:23:28,402:INFO:              sktime: 0.26.0
2025-07-14 16:23:28,402:INFO:               tbats: 1.1.3
2025-07-14 16:23:28,402:INFO:            pmdarima: 2.0.4
2025-07-14 16:23:28,402:INFO:              psutil: 7.0.0
2025-07-14 16:23:28,402:INFO:          markupsafe: 3.0.2
2025-07-14 16:23:28,402:INFO:             pickle5: Not installed
2025-07-14 16:23:28,402:INFO:         cloudpickle: 3.1.1
2025-07-14 16:23:28,402:INFO:         deprecation: 2.1.0
2025-07-14 16:23:28,402:INFO:              xxhash: 3.5.0
2025-07-14 16:23:28,402:INFO:           wurlitzer: Not installed
2025-07-14 16:23:28,402:INFO:PyCaret optional dependencies:
2025-07-14 16:23:28,440:INFO:                shap: 0.48.0
2025-07-14 16:23:28,440:INFO:           interpret: Not installed
2025-07-14 16:23:28,440:INFO:                umap: Not installed
2025-07-14 16:23:28,440:INFO:     ydata_profiling: Not installed
2025-07-14 16:23:28,440:INFO:  explainerdashboard: Not installed
2025-07-14 16:23:28,440:INFO:             autoviz: Not installed
2025-07-14 16:23:28,440:INFO:           fairlearn: Not installed
2025-07-14 16:23:28,440:INFO:          deepchecks: Not installed
2025-07-14 16:23:28,440:INFO:             xgboost: Not installed
2025-07-14 16:23:28,440:INFO:            catboost: Not installed
2025-07-14 16:23:28,440:INFO:              kmodes: Not installed
2025-07-14 16:23:28,440:INFO:             mlxtend: Not installed
2025-07-14 16:23:28,440:INFO:       statsforecast: Not installed
2025-07-14 16:23:28,440:INFO:        tune_sklearn: Not installed
2025-07-14 16:23:28,441:INFO:                 ray: Not installed
2025-07-14 16:23:28,441:INFO:            hyperopt: Not installed
2025-07-14 16:23:28,441:INFO:              optuna: Not installed
2025-07-14 16:23:28,441:INFO:               skopt: Not installed
2025-07-14 16:23:28,441:INFO:              mlflow: Not installed
2025-07-14 16:23:28,441:INFO:              gradio: Not installed
2025-07-14 16:23:28,441:INFO:             fastapi: Not installed
2025-07-14 16:23:28,442:INFO:             uvicorn: Not installed
2025-07-14 16:23:28,442:INFO:              m2cgen: Not installed
2025-07-14 16:23:28,442:INFO:           evidently: Not installed
2025-07-14 16:23:28,442:INFO:               fugue: Not installed
2025-07-14 16:23:28,442:INFO:           streamlit: Not installed
2025-07-14 16:23:28,442:INFO:             prophet: Not installed
2025-07-14 16:23:28,442:INFO:None
2025-07-14 16:23:28,442:INFO:Set up data.
2025-07-14 16:23:28,468:INFO:Set up folding strategy.
2025-07-14 16:23:28,468:INFO:Set up train/test split.
2025-07-14 16:23:28,587:INFO:Set up index.
2025-07-14 16:23:28,596:INFO:Assigning column types.
2025-07-14 16:23:28,630:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 16:23:28,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:23:28,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:23:28,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:28,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:28,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:23:28,917:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:23:28,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:28,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:28,970:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 16:23:29,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:23:29,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:23:29,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,328:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 16:23:29,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:29,661:INFO:Preparing preprocessing pipeline...
2025-07-14 16:23:29,668:INFO:Set up simple imputation.
2025-07-14 16:23:29,688:INFO:Set up encoding of categorical features.
2025-07-14 16:23:29,688:INFO:Set up imbalanced handling.
2025-07-14 16:23:29,692:INFO:Set up column name cleaning.
2025-07-14 16:23:30,768:INFO:Finished creating preprocessing pipeline.
2025-07-14 16:23:30,780:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor',
                                             'taxa_atraso_ultimos_5'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strat...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 16:23:30,780:INFO:Creating final display dataframe.
2025-07-14 16:23:32,129:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 7)
4        Transformed data shape       (227757, 7)
5   Transformed train set shape       (181070, 7)
6    Transformed test set shape        (46687, 7)
7              Numeric features                 4
8          Categorical features                 2
9      Rows with missing values              1.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16                Fix imbalance              True
17         Fix imbalance method             SMOTE
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              f643
2025-07-14 16:23:32,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:32,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:32,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:32,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:23:32,601:INFO:setup() successfully completed in 4.5s...............
2025-07-14 16:23:32,602:INFO:Initializing create_model()
2025-07-14 16:23:32,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000247FE60E450>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 16:23:32,603:INFO:Checking exceptions
2025-07-14 16:23:32,619:INFO:Importing libraries
2025-07-14 16:23:32,619:INFO:Copying training dataset
2025-07-14 16:23:32,755:INFO:Defining folds
2025-07-14 16:23:32,755:INFO:Declaring metric variables
2025-07-14 16:23:32,756:INFO:Importing untrained model
2025-07-14 16:23:32,757:INFO:Extra Trees Classifier Imported successfully
2025-07-14 16:23:32,758:INFO:Starting cross validation
2025-07-14 16:23:32,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 16:24:46,574:INFO:Calculating mean and std
2025-07-14 16:24:46,577:INFO:Creating metrics dataframe
2025-07-14 16:24:46,583:INFO:Finalizing model
2025-07-14 16:24:52,086:INFO:Uploading results into container
2025-07-14 16:24:52,088:INFO:Uploading model into container now
2025-07-14 16:24:52,107:INFO:_master_model_container: 1
2025-07-14 16:24:52,108:INFO:_display_container: 2
2025-07-14 16:24:52,110:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 16:24:52,111:INFO:create_model() successfully completed......................................
2025-07-14 16:24:53,089:INFO:Initializing plot_model()
2025-07-14 16:24:53,090:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000247FE60E450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 16:24:53,090:INFO:Checking exceptions
2025-07-14 16:24:53,208:INFO:Preloading libraries
2025-07-14 16:24:54,048:INFO:Copying training dataset
2025-07-14 16:24:54,049:INFO:Plot type: feature
2025-07-14 16:24:54,050:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 16:25:51,229:INFO:Visual Rendered Successfully
2025-07-14 16:25:51,507:INFO:plot_model() successfully completed......................................
2025-07-14 16:25:51,631:INFO:Initializing tune_model()
2025-07-14 16:25:51,632:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000247FE60E450>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-14 16:25:51,633:INFO:Checking exceptions
2025-07-14 16:25:51,704:INFO:Copying training dataset
2025-07-14 16:25:51,775:INFO:Checking base model
2025-07-14 16:25:51,776:INFO:Base model : Extra Trees Classifier
2025-07-14 16:25:51,777:INFO:Declaring metric variables
2025-07-14 16:25:51,777:INFO:Defining Hyperparameters
2025-07-14 16:25:51,937:INFO:Tuning with n_jobs=-1
2025-07-14 16:25:51,937:INFO:Initializing RandomizedSearchCV
2025-07-14 16:28:30,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:28:30,966:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:28:30,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:28:30,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:29:11,924:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:29:12,101:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:159: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df.groupby('Vendor', group_keys=False)

2025-07-14 16:30:07,518:INFO:PyCaret ClassificationExperiment
2025-07-14 16:30:07,521:INFO:Logging name: clf-default-name
2025-07-14 16:30:07,524:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 16:30:07,525:INFO:version 3.3.2
2025-07-14 16:30:07,526:INFO:Initializing setup()
2025-07-14 16:30:07,526:INFO:self.USI: 1e0c
2025-07-14 16:30:07,527:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'y_test', 'fold_groups_param', 'X_test', 'seed', 'X_train', 'memory', 'y', 'X', 'fix_imbalance', 'fold_generator', 'pipeline', 'target_param', 'is_multiclass', 'data', 'logging_param', 'exp_name_log', 'idx', '_available_plots', 'log_plots_param', 'y_train', 'n_jobs_param', 'exp_id', 'gpu_n_jobs_param', 'USI', 'gpu_param', 'html_param'}
2025-07-14 16:30:07,527:INFO:Checking environment
2025-07-14 16:30:07,529:INFO:python_version: 3.11.9
2025-07-14 16:30:07,529:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 16:30:07,529:INFO:machine: AMD64
2025-07-14 16:30:07,670:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 16:30:07,683:INFO:Memory: svmem(total=16844595200, available=1944133632, percent=88.5, used=14900461568, free=1944133632)
2025-07-14 16:30:07,683:INFO:Physical Core: 4
2025-07-14 16:30:07,684:INFO:Logical Core: 8
2025-07-14 16:30:07,685:INFO:Checking libraries
2025-07-14 16:30:07,686:INFO:System:
2025-07-14 16:30:07,686:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 16:30:07,687:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 16:30:07,688:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 16:30:07,688:INFO:PyCaret required dependencies:
2025-07-14 16:30:07,830:INFO:                 pip: 25.1.1
2025-07-14 16:30:07,831:INFO:          setuptools: 65.5.0
2025-07-14 16:30:07,832:INFO:             pycaret: 3.3.2
2025-07-14 16:30:07,832:INFO:             IPython: 9.3.0
2025-07-14 16:30:07,832:INFO:          ipywidgets: 8.1.7
2025-07-14 16:30:07,833:INFO:                tqdm: 4.67.1
2025-07-14 16:30:07,833:INFO:               numpy: 1.26.4
2025-07-14 16:30:07,833:INFO:              pandas: 2.1.4
2025-07-14 16:30:07,833:INFO:              jinja2: 3.1.6
2025-07-14 16:30:07,835:INFO:               scipy: 1.11.4
2025-07-14 16:30:07,835:INFO:              joblib: 1.3.2
2025-07-14 16:30:07,835:INFO:             sklearn: 1.4.2
2025-07-14 16:30:07,835:INFO:                pyod: 2.0.5
2025-07-14 16:30:07,835:INFO:            imblearn: 0.13.0
2025-07-14 16:30:07,835:INFO:   category_encoders: 2.7.0
2025-07-14 16:30:07,835:INFO:            lightgbm: 4.6.0
2025-07-14 16:30:07,835:INFO:               numba: 0.61.2
2025-07-14 16:30:07,835:INFO:            requests: 2.32.4
2025-07-14 16:30:07,835:INFO:          matplotlib: 3.7.5
2025-07-14 16:30:07,836:INFO:          scikitplot: 0.3.7
2025-07-14 16:30:07,836:INFO:         yellowbrick: 1.5
2025-07-14 16:30:07,836:INFO:              plotly: 5.24.1
2025-07-14 16:30:07,836:INFO:    plotly-resampler: Not installed
2025-07-14 16:30:07,836:INFO:             kaleido: 1.0.0
2025-07-14 16:30:07,836:INFO:           schemdraw: 0.15
2025-07-14 16:30:07,836:INFO:         statsmodels: 0.14.4
2025-07-14 16:30:07,836:INFO:              sktime: 0.26.0
2025-07-14 16:30:07,836:INFO:               tbats: 1.1.3
2025-07-14 16:30:07,836:INFO:            pmdarima: 2.0.4
2025-07-14 16:30:07,836:INFO:              psutil: 7.0.0
2025-07-14 16:30:07,837:INFO:          markupsafe: 3.0.2
2025-07-14 16:30:07,837:INFO:             pickle5: Not installed
2025-07-14 16:30:07,837:INFO:         cloudpickle: 3.1.1
2025-07-14 16:30:07,837:INFO:         deprecation: 2.1.0
2025-07-14 16:30:07,837:INFO:              xxhash: 3.5.0
2025-07-14 16:30:07,837:INFO:           wurlitzer: Not installed
2025-07-14 16:30:07,837:INFO:PyCaret optional dependencies:
2025-07-14 16:30:07,884:INFO:                shap: 0.48.0
2025-07-14 16:30:07,884:INFO:           interpret: Not installed
2025-07-14 16:30:07,884:INFO:                umap: Not installed
2025-07-14 16:30:07,884:INFO:     ydata_profiling: Not installed
2025-07-14 16:30:07,884:INFO:  explainerdashboard: Not installed
2025-07-14 16:30:07,885:INFO:             autoviz: Not installed
2025-07-14 16:30:07,885:INFO:           fairlearn: Not installed
2025-07-14 16:30:07,885:INFO:          deepchecks: Not installed
2025-07-14 16:30:07,885:INFO:             xgboost: Not installed
2025-07-14 16:30:07,885:INFO:            catboost: Not installed
2025-07-14 16:30:07,885:INFO:              kmodes: Not installed
2025-07-14 16:30:07,885:INFO:             mlxtend: Not installed
2025-07-14 16:30:07,885:INFO:       statsforecast: Not installed
2025-07-14 16:30:07,885:INFO:        tune_sklearn: Not installed
2025-07-14 16:30:07,886:INFO:                 ray: Not installed
2025-07-14 16:30:07,886:INFO:            hyperopt: Not installed
2025-07-14 16:30:07,886:INFO:              optuna: Not installed
2025-07-14 16:30:07,886:INFO:               skopt: Not installed
2025-07-14 16:30:07,886:INFO:              mlflow: Not installed
2025-07-14 16:30:07,886:INFO:              gradio: Not installed
2025-07-14 16:30:07,886:INFO:             fastapi: Not installed
2025-07-14 16:30:07,886:INFO:             uvicorn: Not installed
2025-07-14 16:30:07,887:INFO:              m2cgen: Not installed
2025-07-14 16:30:07,887:INFO:           evidently: Not installed
2025-07-14 16:30:07,887:INFO:               fugue: Not installed
2025-07-14 16:30:07,887:INFO:           streamlit: Not installed
2025-07-14 16:30:07,887:INFO:             prophet: Not installed
2025-07-14 16:30:07,887:INFO:None
2025-07-14 16:30:07,887:INFO:Set up data.
2025-07-14 16:30:07,920:INFO:Set up folding strategy.
2025-07-14 16:30:07,921:INFO:Set up train/test split.
2025-07-14 16:30:08,097:INFO:Set up index.
2025-07-14 16:30:08,110:INFO:Assigning column types.
2025-07-14 16:30:08,172:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 16:30:08,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,265:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,487:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 16:30:08,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:30:08,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,748:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 16:30:08,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:08,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:09,001:INFO:Preparing preprocessing pipeline...
2025-07-14 16:30:09,011:INFO:Set up simple imputation.
2025-07-14 16:30:09,047:INFO:Set up encoding of categorical features.
2025-07-14 16:30:09,048:INFO:Set up imbalanced handling.
2025-07-14 16:30:09,054:INFO:Set up column name cleaning.
2025-07-14 16:30:10,358:INFO:Finished creating preprocessing pipeline.
2025-07-14 16:30:10,376:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor',
                                             'taxa_atraso_ultimos_5'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strat...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 16:30:10,376:INFO:Creating final display dataframe.
2025-07-14 16:30:12,168:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 7)
4        Transformed data shape       (227757, 7)
5   Transformed train set shape       (181070, 7)
6    Transformed test set shape        (46687, 7)
7              Numeric features                 4
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              1e0c
2025-07-14 16:30:12,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:12,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:12,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:12,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:30:12,492:INFO:setup() successfully completed in 5.02s...............
2025-07-14 16:30:12,492:INFO:Initializing create_model()
2025-07-14 16:30:12,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204F1E72D90>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 16:30:12,492:INFO:Checking exceptions
2025-07-14 16:30:12,496:INFO:Importing libraries
2025-07-14 16:30:12,496:INFO:Copying training dataset
2025-07-14 16:30:12,566:INFO:Defining folds
2025-07-14 16:30:12,566:INFO:Declaring metric variables
2025-07-14 16:30:12,567:INFO:Importing untrained model
2025-07-14 16:30:12,569:INFO:Extra Trees Classifier Imported successfully
2025-07-14 16:30:12,570:INFO:Starting cross validation
2025-07-14 16:30:12,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 16:31:31,361:INFO:Calculating mean and std
2025-07-14 16:31:31,371:INFO:Creating metrics dataframe
2025-07-14 16:31:31,424:INFO:Finalizing model
2025-07-14 16:31:39,913:INFO:Uploading results into container
2025-07-14 16:31:39,915:INFO:Uploading model into container now
2025-07-14 16:31:39,936:INFO:_master_model_container: 1
2025-07-14 16:31:39,937:INFO:_display_container: 2
2025-07-14 16:31:39,938:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 16:31:39,938:INFO:create_model() successfully completed......................................
2025-07-14 16:31:41,306:INFO:Initializing plot_model()
2025-07-14 16:31:41,306:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204F1E72D90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 16:31:41,307:INFO:Checking exceptions
2025-07-14 16:31:41,429:INFO:Preloading libraries
2025-07-14 16:31:42,398:INFO:Copying training dataset
2025-07-14 16:31:42,398:INFO:Plot type: feature
2025-07-14 16:31:42,402:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 16:36:28,531:INFO:Visual Rendered Successfully
2025-07-14 16:36:28,764:INFO:plot_model() successfully completed......................................
2025-07-14 16:36:28,839:INFO:Initializing tune_model()
2025-07-14 16:36:28,841:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204F1E72D90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-14 16:36:28,842:INFO:Checking exceptions
2025-07-14 16:36:28,861:INFO:Copying training dataset
2025-07-14 16:36:28,920:INFO:Checking base model
2025-07-14 16:36:28,921:INFO:Base model : Extra Trees Classifier
2025-07-14 16:36:28,921:INFO:Declaring metric variables
2025-07-14 16:36:28,922:INFO:Defining Hyperparameters
2025-07-14 16:36:29,023:INFO:Tuning with n_jobs=-1
2025-07-14 16:36:29,024:INFO:Initializing RandomizedSearchCV
2025-07-14 16:37:12,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:37:12,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:37:12,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:37:12,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 16:38:01,363:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 16:38:01,560:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:146: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df.groupby('Vendor')['On Time'] # Aplica o rolling na coluna 'On Time' por grupo 'Vendor'

2025-07-14 16:38:41,118:INFO:PyCaret ClassificationExperiment
2025-07-14 16:38:41,120:INFO:Logging name: clf-default-name
2025-07-14 16:38:41,121:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 16:38:41,121:INFO:version 3.3.2
2025-07-14 16:38:41,121:INFO:Initializing setup()
2025-07-14 16:38:41,122:INFO:self.USI: 2e77
2025-07-14 16:38:41,122:INFO:self._variable_keys: {'data', '_available_plots', 'log_plots_param', 'X_test', 'n_jobs_param', 'logging_param', 'html_param', 'exp_id', 'exp_name_log', 'gpu_n_jobs_param', 'gpu_param', 'fix_imbalance', 'seed', 'idx', 'pipeline', 'X', 'target_param', 'is_multiclass', 'y_train', 'USI', 'fold_generator', 'fold_shuffle_param', 'fold_groups_param', 'X_train', 'memory', 'y_test', '_ml_usecase', 'y'}
2025-07-14 16:38:41,122:INFO:Checking environment
2025-07-14 16:38:41,123:INFO:python_version: 3.11.9
2025-07-14 16:38:41,123:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 16:38:41,123:INFO:machine: AMD64
2025-07-14 16:38:41,170:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 16:38:41,175:INFO:Memory: svmem(total=16844595200, available=2108424192, percent=87.5, used=14736171008, free=2108424192)
2025-07-14 16:38:41,176:INFO:Physical Core: 4
2025-07-14 16:38:41,176:INFO:Logical Core: 8
2025-07-14 16:38:41,176:INFO:Checking libraries
2025-07-14 16:38:41,176:INFO:System:
2025-07-14 16:38:41,177:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 16:38:41,177:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 16:38:41,178:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 16:38:41,178:INFO:PyCaret required dependencies:
2025-07-14 16:38:41,226:INFO:                 pip: 25.1.1
2025-07-14 16:38:41,227:INFO:          setuptools: 65.5.0
2025-07-14 16:38:41,227:INFO:             pycaret: 3.3.2
2025-07-14 16:38:41,227:INFO:             IPython: 9.3.0
2025-07-14 16:38:41,227:INFO:          ipywidgets: 8.1.7
2025-07-14 16:38:41,227:INFO:                tqdm: 4.67.1
2025-07-14 16:38:41,227:INFO:               numpy: 1.26.4
2025-07-14 16:38:41,227:INFO:              pandas: 2.1.4
2025-07-14 16:38:41,227:INFO:              jinja2: 3.1.6
2025-07-14 16:38:41,227:INFO:               scipy: 1.11.4
2025-07-14 16:38:41,227:INFO:              joblib: 1.3.2
2025-07-14 16:38:41,227:INFO:             sklearn: 1.4.2
2025-07-14 16:38:41,227:INFO:                pyod: 2.0.5
2025-07-14 16:38:41,227:INFO:            imblearn: 0.13.0
2025-07-14 16:38:41,227:INFO:   category_encoders: 2.7.0
2025-07-14 16:38:41,227:INFO:            lightgbm: 4.6.0
2025-07-14 16:38:41,227:INFO:               numba: 0.61.2
2025-07-14 16:38:41,227:INFO:            requests: 2.32.4
2025-07-14 16:38:41,227:INFO:          matplotlib: 3.7.5
2025-07-14 16:38:41,227:INFO:          scikitplot: 0.3.7
2025-07-14 16:38:41,227:INFO:         yellowbrick: 1.5
2025-07-14 16:38:41,227:INFO:              plotly: 5.24.1
2025-07-14 16:38:41,227:INFO:    plotly-resampler: Not installed
2025-07-14 16:38:41,227:INFO:             kaleido: 1.0.0
2025-07-14 16:38:41,227:INFO:           schemdraw: 0.15
2025-07-14 16:38:41,227:INFO:         statsmodels: 0.14.4
2025-07-14 16:38:41,227:INFO:              sktime: 0.26.0
2025-07-14 16:38:41,227:INFO:               tbats: 1.1.3
2025-07-14 16:38:41,227:INFO:            pmdarima: 2.0.4
2025-07-14 16:38:41,227:INFO:              psutil: 7.0.0
2025-07-14 16:38:41,227:INFO:          markupsafe: 3.0.2
2025-07-14 16:38:41,227:INFO:             pickle5: Not installed
2025-07-14 16:38:41,227:INFO:         cloudpickle: 3.1.1
2025-07-14 16:38:41,227:INFO:         deprecation: 2.1.0
2025-07-14 16:38:41,227:INFO:              xxhash: 3.5.0
2025-07-14 16:38:41,227:INFO:           wurlitzer: Not installed
2025-07-14 16:38:41,227:INFO:PyCaret optional dependencies:
2025-07-14 16:38:41,243:INFO:                shap: 0.48.0
2025-07-14 16:38:41,243:INFO:           interpret: Not installed
2025-07-14 16:38:41,243:INFO:                umap: Not installed
2025-07-14 16:38:41,243:INFO:     ydata_profiling: Not installed
2025-07-14 16:38:41,244:INFO:  explainerdashboard: Not installed
2025-07-14 16:38:41,244:INFO:             autoviz: Not installed
2025-07-14 16:38:41,244:INFO:           fairlearn: Not installed
2025-07-14 16:38:41,244:INFO:          deepchecks: Not installed
2025-07-14 16:38:41,244:INFO:             xgboost: Not installed
2025-07-14 16:38:41,244:INFO:            catboost: Not installed
2025-07-14 16:38:41,244:INFO:              kmodes: Not installed
2025-07-14 16:38:41,244:INFO:             mlxtend: Not installed
2025-07-14 16:38:41,244:INFO:       statsforecast: Not installed
2025-07-14 16:38:41,244:INFO:        tune_sklearn: Not installed
2025-07-14 16:38:41,244:INFO:                 ray: Not installed
2025-07-14 16:38:41,244:INFO:            hyperopt: Not installed
2025-07-14 16:38:41,244:INFO:              optuna: Not installed
2025-07-14 16:38:41,244:INFO:               skopt: Not installed
2025-07-14 16:38:41,244:INFO:              mlflow: Not installed
2025-07-14 16:38:41,244:INFO:              gradio: Not installed
2025-07-14 16:38:41,244:INFO:             fastapi: Not installed
2025-07-14 16:38:41,244:INFO:             uvicorn: Not installed
2025-07-14 16:38:41,244:INFO:              m2cgen: Not installed
2025-07-14 16:38:41,244:INFO:           evidently: Not installed
2025-07-14 16:38:41,244:INFO:               fugue: Not installed
2025-07-14 16:38:41,244:INFO:           streamlit: Not installed
2025-07-14 16:38:41,244:INFO:             prophet: Not installed
2025-07-14 16:38:41,245:INFO:None
2025-07-14 16:38:41,245:INFO:Set up data.
2025-07-14 16:38:41,260:INFO:Set up folding strategy.
2025-07-14 16:38:41,260:INFO:Set up train/test split.
2025-07-14 16:38:41,313:INFO:Set up index.
2025-07-14 16:38:41,316:INFO:Assigning column types.
2025-07-14 16:38:41,336:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 16:38:41,381:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,386:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,471:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,501:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 16:38:41,546:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 16:38:41,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,658:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 16:38:41,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:41,829:INFO:Preparing preprocessing pipeline...
2025-07-14 16:38:41,836:INFO:Set up simple imputation.
2025-07-14 16:38:41,855:INFO:Set up encoding of categorical features.
2025-07-14 16:38:41,856:INFO:Set up imbalanced handling.
2025-07-14 16:38:41,859:INFO:Set up column name cleaning.
2025-07-14 16:38:42,148:INFO:Finished creating preprocessing pipeline.
2025-07-14 16:38:42,162:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor',
                                             'taxa_atraso_ultimos_5'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strat...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 16:38:42,163:INFO:Creating final display dataframe.
2025-07-14 16:38:42,710:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 7)
4        Transformed data shape       (227757, 7)
5   Transformed train set shape       (181070, 7)
6    Transformed test set shape        (46687, 7)
7              Numeric features                 4
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              2e77
2025-07-14 16:38:42,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:42,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:42,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:42,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 16:38:42,893:INFO:setup() successfully completed in 1.85s...............
2025-07-14 16:38:42,894:INFO:Initializing create_model()
2025-07-14 16:38:42,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0849DC790>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 16:38:42,894:INFO:Checking exceptions
2025-07-14 16:38:42,896:INFO:Importing libraries
2025-07-14 16:38:42,896:INFO:Copying training dataset
2025-07-14 16:38:42,967:INFO:Defining folds
2025-07-14 16:38:42,967:INFO:Declaring metric variables
2025-07-14 16:38:42,967:INFO:Importing untrained model
2025-07-14 16:38:42,968:INFO:Extra Trees Classifier Imported successfully
2025-07-14 16:38:42,968:INFO:Starting cross validation
2025-07-14 16:38:42,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 16:39:53,166:INFO:Calculating mean and std
2025-07-14 16:39:53,178:INFO:Creating metrics dataframe
2025-07-14 16:39:53,200:INFO:Finalizing model
2025-07-14 16:40:01,201:INFO:Uploading results into container
2025-07-14 16:40:01,205:INFO:Uploading model into container now
2025-07-14 16:40:01,233:INFO:_master_model_container: 1
2025-07-14 16:40:01,234:INFO:_display_container: 2
2025-07-14 16:40:01,237:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 16:40:01,238:INFO:create_model() successfully completed......................................
2025-07-14 16:40:02,919:INFO:Initializing plot_model()
2025-07-14 16:40:02,920:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0849DC790>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 16:40:02,921:INFO:Checking exceptions
2025-07-14 16:40:03,089:INFO:Preloading libraries
2025-07-14 16:40:04,219:INFO:Copying training dataset
2025-07-14 16:40:04,220:INFO:Plot type: feature
2025-07-14 16:40:04,225:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 16:41:31,515:INFO:Visual Rendered Successfully
2025-07-14 16:41:31,887:INFO:plot_model() successfully completed......................................
2025-07-14 16:41:32,067:INFO:Initializing tune_model()
2025-07-14 16:41:32,067:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0849DC790>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-14 16:41:32,067:INFO:Checking exceptions
2025-07-14 16:41:32,150:INFO:Copying training dataset
2025-07-14 16:41:32,318:INFO:Checking base model
2025-07-14 16:41:32,319:INFO:Base model : Extra Trees Classifier
2025-07-14 16:41:32,320:INFO:Declaring metric variables
2025-07-14 16:41:32,320:INFO:Defining Hyperparameters
2025-07-14 16:41:32,661:INFO:Tuning with n_jobs=-1
2025-07-14 16:41:32,661:INFO:Initializing RandomizedSearchCV
2025-07-14 17:01:27,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:01:27,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:01:27,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:01:27,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:02:11,433:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 17:02:37,263:INFO:PyCaret ClassificationExperiment
2025-07-14 17:02:37,265:INFO:Logging name: clf-default-name
2025-07-14 17:02:37,266:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 17:02:37,267:INFO:version 3.3.2
2025-07-14 17:02:37,267:INFO:Initializing setup()
2025-07-14 17:02:37,267:INFO:self.USI: abff
2025-07-14 17:02:37,269:INFO:self._variable_keys: {'target_param', 'memory', 'X', 'fold_generator', 'y', '_ml_usecase', 'fold_shuffle_param', 'seed', 'X_train', 'fold_groups_param', 'fix_imbalance', 'gpu_param', 'html_param', 'y_train', 'logging_param', 'n_jobs_param', 'USI', 'X_test', 'y_test', 'gpu_n_jobs_param', 'data', 'idx', 'pipeline', 'exp_name_log', 'log_plots_param', 'exp_id', '_available_plots', 'is_multiclass'}
2025-07-14 17:02:37,270:INFO:Checking environment
2025-07-14 17:02:37,270:INFO:python_version: 3.11.9
2025-07-14 17:02:37,271:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 17:02:37,271:INFO:machine: AMD64
2025-07-14 17:02:37,317:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 17:02:37,325:INFO:Memory: svmem(total=16844595200, available=1924034560, percent=88.6, used=14920560640, free=1924034560)
2025-07-14 17:02:37,326:INFO:Physical Core: 4
2025-07-14 17:02:37,327:INFO:Logical Core: 8
2025-07-14 17:02:37,327:INFO:Checking libraries
2025-07-14 17:02:37,327:INFO:System:
2025-07-14 17:02:37,328:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 17:02:37,329:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 17:02:37,329:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 17:02:37,329:INFO:PyCaret required dependencies:
2025-07-14 17:02:37,423:INFO:                 pip: 25.1.1
2025-07-14 17:02:37,424:INFO:          setuptools: 65.5.0
2025-07-14 17:02:37,424:INFO:             pycaret: 3.3.2
2025-07-14 17:02:37,424:INFO:             IPython: 9.3.0
2025-07-14 17:02:37,424:INFO:          ipywidgets: 8.1.7
2025-07-14 17:02:37,424:INFO:                tqdm: 4.67.1
2025-07-14 17:02:37,424:INFO:               numpy: 1.26.4
2025-07-14 17:02:37,424:INFO:              pandas: 2.1.4
2025-07-14 17:02:37,424:INFO:              jinja2: 3.1.6
2025-07-14 17:02:37,424:INFO:               scipy: 1.11.4
2025-07-14 17:02:37,424:INFO:              joblib: 1.3.2
2025-07-14 17:02:37,424:INFO:             sklearn: 1.4.2
2025-07-14 17:02:37,425:INFO:                pyod: 2.0.5
2025-07-14 17:02:37,425:INFO:            imblearn: 0.13.0
2025-07-14 17:02:37,425:INFO:   category_encoders: 2.7.0
2025-07-14 17:02:37,425:INFO:            lightgbm: 4.6.0
2025-07-14 17:02:37,425:INFO:               numba: 0.61.2
2025-07-14 17:02:37,425:INFO:            requests: 2.32.4
2025-07-14 17:02:37,425:INFO:          matplotlib: 3.7.5
2025-07-14 17:02:37,425:INFO:          scikitplot: 0.3.7
2025-07-14 17:02:37,425:INFO:         yellowbrick: 1.5
2025-07-14 17:02:37,425:INFO:              plotly: 5.24.1
2025-07-14 17:02:37,425:INFO:    plotly-resampler: Not installed
2025-07-14 17:02:37,425:INFO:             kaleido: 1.0.0
2025-07-14 17:02:37,425:INFO:           schemdraw: 0.15
2025-07-14 17:02:37,425:INFO:         statsmodels: 0.14.4
2025-07-14 17:02:37,426:INFO:              sktime: 0.26.0
2025-07-14 17:02:37,426:INFO:               tbats: 1.1.3
2025-07-14 17:02:37,426:INFO:            pmdarima: 2.0.4
2025-07-14 17:02:37,426:INFO:              psutil: 7.0.0
2025-07-14 17:02:37,426:INFO:          markupsafe: 3.0.2
2025-07-14 17:02:37,426:INFO:             pickle5: Not installed
2025-07-14 17:02:37,426:INFO:         cloudpickle: 3.1.1
2025-07-14 17:02:37,426:INFO:         deprecation: 2.1.0
2025-07-14 17:02:37,426:INFO:              xxhash: 3.5.0
2025-07-14 17:02:37,426:INFO:           wurlitzer: Not installed
2025-07-14 17:02:37,426:INFO:PyCaret optional dependencies:
2025-07-14 17:02:37,450:INFO:                shap: 0.48.0
2025-07-14 17:02:37,450:INFO:           interpret: Not installed
2025-07-14 17:02:37,450:INFO:                umap: Not installed
2025-07-14 17:02:37,450:INFO:     ydata_profiling: Not installed
2025-07-14 17:02:37,450:INFO:  explainerdashboard: Not installed
2025-07-14 17:02:37,450:INFO:             autoviz: Not installed
2025-07-14 17:02:37,450:INFO:           fairlearn: Not installed
2025-07-14 17:02:37,450:INFO:          deepchecks: Not installed
2025-07-14 17:02:37,450:INFO:             xgboost: Not installed
2025-07-14 17:02:37,450:INFO:            catboost: Not installed
2025-07-14 17:02:37,450:INFO:              kmodes: Not installed
2025-07-14 17:02:37,450:INFO:             mlxtend: Not installed
2025-07-14 17:02:37,450:INFO:       statsforecast: Not installed
2025-07-14 17:02:37,450:INFO:        tune_sklearn: Not installed
2025-07-14 17:02:37,450:INFO:                 ray: Not installed
2025-07-14 17:02:37,450:INFO:            hyperopt: Not installed
2025-07-14 17:02:37,452:INFO:              optuna: Not installed
2025-07-14 17:02:37,452:INFO:               skopt: Not installed
2025-07-14 17:02:37,452:INFO:              mlflow: Not installed
2025-07-14 17:02:37,452:INFO:              gradio: Not installed
2025-07-14 17:02:37,452:INFO:             fastapi: Not installed
2025-07-14 17:02:37,452:INFO:             uvicorn: Not installed
2025-07-14 17:02:37,452:INFO:              m2cgen: Not installed
2025-07-14 17:02:37,452:INFO:           evidently: Not installed
2025-07-14 17:02:37,452:INFO:               fugue: Not installed
2025-07-14 17:02:37,452:INFO:           streamlit: Not installed
2025-07-14 17:02:37,452:INFO:             prophet: Not installed
2025-07-14 17:02:37,452:INFO:None
2025-07-14 17:02:37,452:INFO:Set up data.
2025-07-14 17:02:37,479:INFO:Set up folding strategy.
2025-07-14 17:02:37,479:INFO:Set up train/test split.
2025-07-14 17:02:37,551:INFO:Set up index.
2025-07-14 17:02:37,557:INFO:Assigning column types.
2025-07-14 17:02:37,580:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 17:02:37,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:02:37,644:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:02:37,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:37,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:37,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:02:37,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:02:37,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:37,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:37,850:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 17:02:37,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:02:37,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:37,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,083:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:02:38,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,134:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 17:02:38,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:38,445:INFO:Preparing preprocessing pipeline...
2025-07-14 17:02:38,452:INFO:Set up simple imputation.
2025-07-14 17:02:38,472:INFO:Set up encoding of categorical features.
2025-07-14 17:02:38,473:INFO:Set up imbalanced handling.
2025-07-14 17:02:38,478:INFO:Set up column name cleaning.
2025-07-14 17:02:38,896:INFO:Finished creating preprocessing pipeline.
2025-07-14 17:02:38,912:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 17:02:38,913:INFO:Creating final display dataframe.
2025-07-14 17:02:39,219:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              abff
2025-07-14 17:02:39,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:39,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:39,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:39,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:02:39,526:INFO:setup() successfully completed in 2.34s...............
2025-07-14 17:02:39,528:INFO:Initializing create_model()
2025-07-14 17:02:39,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D432012FD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'encoding_method': 'target'})
2025-07-14 17:02:39,529:INFO:Checking exceptions
2025-07-14 17:02:39,534:INFO:Importing libraries
2025-07-14 17:02:39,535:INFO:Copying training dataset
2025-07-14 17:02:39,612:INFO:Defining folds
2025-07-14 17:02:39,612:INFO:Declaring metric variables
2025-07-14 17:02:39,614:INFO:Importing untrained model
2025-07-14 17:09:44,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:09:44,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:09:44,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:09:44,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:10:32,297:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 17:11:21,839:INFO:PyCaret ClassificationExperiment
2025-07-14 17:11:21,840:INFO:Logging name: clf-default-name
2025-07-14 17:11:21,840:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 17:11:21,842:INFO:version 3.3.2
2025-07-14 17:11:21,842:INFO:Initializing setup()
2025-07-14 17:11:21,843:INFO:self.USI: fde9
2025-07-14 17:11:21,843:INFO:self._variable_keys: {'y_train', 'idx', 'gpu_n_jobs_param', 'exp_name_log', '_ml_usecase', 'seed', 'n_jobs_param', 'html_param', 'X', 'USI', 'pipeline', 'y', 'X_train', 'y_test', 'log_plots_param', 'target_param', 'X_test', 'fix_imbalance', 'fold_shuffle_param', 'memory', 'is_multiclass', 'gpu_param', 'data', 'logging_param', '_available_plots', 'fold_groups_param', 'fold_generator', 'exp_id'}
2025-07-14 17:11:21,844:INFO:Checking environment
2025-07-14 17:11:21,844:INFO:python_version: 3.11.9
2025-07-14 17:11:21,845:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 17:11:21,845:INFO:machine: AMD64
2025-07-14 17:11:21,945:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 17:11:21,958:INFO:Memory: svmem(total=16844595200, available=1837821952, percent=89.1, used=15006773248, free=1837821952)
2025-07-14 17:11:21,960:INFO:Physical Core: 4
2025-07-14 17:11:21,961:INFO:Logical Core: 8
2025-07-14 17:11:21,962:INFO:Checking libraries
2025-07-14 17:11:21,963:INFO:System:
2025-07-14 17:11:21,963:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 17:11:21,964:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 17:11:21,965:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 17:11:21,965:INFO:PyCaret required dependencies:
2025-07-14 17:11:22,076:INFO:                 pip: 25.1.1
2025-07-14 17:11:22,076:INFO:          setuptools: 65.5.0
2025-07-14 17:11:22,076:INFO:             pycaret: 3.3.2
2025-07-14 17:11:22,076:INFO:             IPython: 9.3.0
2025-07-14 17:11:22,078:INFO:          ipywidgets: 8.1.7
2025-07-14 17:11:22,078:INFO:                tqdm: 4.67.1
2025-07-14 17:11:22,078:INFO:               numpy: 1.26.4
2025-07-14 17:11:22,078:INFO:              pandas: 2.1.4
2025-07-14 17:11:22,078:INFO:              jinja2: 3.1.6
2025-07-14 17:11:22,078:INFO:               scipy: 1.11.4
2025-07-14 17:11:22,078:INFO:              joblib: 1.3.2
2025-07-14 17:11:22,078:INFO:             sklearn: 1.4.2
2025-07-14 17:11:22,078:INFO:                pyod: 2.0.5
2025-07-14 17:11:22,078:INFO:            imblearn: 0.13.0
2025-07-14 17:11:22,078:INFO:   category_encoders: 2.7.0
2025-07-14 17:11:22,078:INFO:            lightgbm: 4.6.0
2025-07-14 17:11:22,078:INFO:               numba: 0.61.2
2025-07-14 17:11:22,078:INFO:            requests: 2.32.4
2025-07-14 17:11:22,079:INFO:          matplotlib: 3.7.5
2025-07-14 17:11:22,079:INFO:          scikitplot: 0.3.7
2025-07-14 17:11:22,079:INFO:         yellowbrick: 1.5
2025-07-14 17:11:22,080:INFO:              plotly: 5.24.1
2025-07-14 17:11:22,080:INFO:    plotly-resampler: Not installed
2025-07-14 17:11:22,080:INFO:             kaleido: 1.0.0
2025-07-14 17:11:22,080:INFO:           schemdraw: 0.15
2025-07-14 17:11:22,080:INFO:         statsmodels: 0.14.4
2025-07-14 17:11:22,081:INFO:              sktime: 0.26.0
2025-07-14 17:11:22,081:INFO:               tbats: 1.1.3
2025-07-14 17:11:22,081:INFO:            pmdarima: 2.0.4
2025-07-14 17:11:22,081:INFO:              psutil: 7.0.0
2025-07-14 17:11:22,081:INFO:          markupsafe: 3.0.2
2025-07-14 17:11:22,081:INFO:             pickle5: Not installed
2025-07-14 17:11:22,081:INFO:         cloudpickle: 3.1.1
2025-07-14 17:11:22,081:INFO:         deprecation: 2.1.0
2025-07-14 17:11:22,081:INFO:              xxhash: 3.5.0
2025-07-14 17:11:22,081:INFO:           wurlitzer: Not installed
2025-07-14 17:11:22,081:INFO:PyCaret optional dependencies:
2025-07-14 17:11:22,123:INFO:                shap: 0.48.0
2025-07-14 17:11:22,123:INFO:           interpret: Not installed
2025-07-14 17:11:22,124:INFO:                umap: Not installed
2025-07-14 17:11:22,124:INFO:     ydata_profiling: Not installed
2025-07-14 17:11:22,124:INFO:  explainerdashboard: Not installed
2025-07-14 17:11:22,124:INFO:             autoviz: Not installed
2025-07-14 17:11:22,124:INFO:           fairlearn: Not installed
2025-07-14 17:11:22,124:INFO:          deepchecks: Not installed
2025-07-14 17:11:22,124:INFO:             xgboost: Not installed
2025-07-14 17:11:22,126:INFO:            catboost: Not installed
2025-07-14 17:11:22,126:INFO:              kmodes: Not installed
2025-07-14 17:11:22,126:INFO:             mlxtend: Not installed
2025-07-14 17:11:22,126:INFO:       statsforecast: Not installed
2025-07-14 17:11:22,126:INFO:        tune_sklearn: Not installed
2025-07-14 17:11:22,126:INFO:                 ray: Not installed
2025-07-14 17:11:22,126:INFO:            hyperopt: Not installed
2025-07-14 17:11:22,126:INFO:              optuna: Not installed
2025-07-14 17:11:22,126:INFO:               skopt: Not installed
2025-07-14 17:11:22,127:INFO:              mlflow: Not installed
2025-07-14 17:11:22,127:INFO:              gradio: Not installed
2025-07-14 17:11:22,127:INFO:             fastapi: Not installed
2025-07-14 17:11:22,127:INFO:             uvicorn: Not installed
2025-07-14 17:11:22,127:INFO:              m2cgen: Not installed
2025-07-14 17:11:22,127:INFO:           evidently: Not installed
2025-07-14 17:11:22,127:INFO:               fugue: Not installed
2025-07-14 17:11:22,128:INFO:           streamlit: Not installed
2025-07-14 17:11:22,128:INFO:             prophet: Not installed
2025-07-14 17:11:22,128:INFO:None
2025-07-14 17:11:22,128:INFO:Set up data.
2025-07-14 17:11:22,160:INFO:Set up folding strategy.
2025-07-14 17:11:22,160:INFO:Set up train/test split.
2025-07-14 17:11:22,299:INFO:Set up index.
2025-07-14 17:11:22,310:INFO:Assigning column types.
2025-07-14 17:11:22,348:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 17:11:22,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:11:22,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:11:22,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:22,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:22,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:11:22,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:11:22,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:22,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:22,998:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 17:11:23,139:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:11:23,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,304:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:11:23,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,353:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 17:11:23,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:23,803:INFO:Preparing preprocessing pipeline...
2025-07-14 17:11:23,813:INFO:Set up simple imputation.
2025-07-14 17:11:23,840:INFO:Set up encoding of categorical features.
2025-07-14 17:11:23,843:INFO:Set up imbalanced handling.
2025-07-14 17:11:23,848:INFO:Set up column name cleaning.
2025-07-14 17:11:24,362:INFO:Finished creating preprocessing pipeline.
2025-07-14 17:11:24,382:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 17:11:24,382:INFO:Creating final display dataframe.
2025-07-14 17:11:24,688:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              fde9
2025-07-14 17:11:24,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:24,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:25,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:25,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:11:25,029:INFO:setup() successfully completed in 3.31s...............
2025-07-14 17:11:25,031:INFO:Initializing create_model()
2025-07-14 17:11:25,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 17:11:25,032:INFO:Checking exceptions
2025-07-14 17:11:25,041:INFO:Importing libraries
2025-07-14 17:11:25,041:INFO:Copying training dataset
2025-07-14 17:11:25,129:INFO:Defining folds
2025-07-14 17:11:25,129:INFO:Declaring metric variables
2025-07-14 17:11:25,130:INFO:Importing untrained model
2025-07-14 17:11:25,130:INFO:Extra Trees Classifier Imported successfully
2025-07-14 17:11:25,130:INFO:Starting cross validation
2025-07-14 17:11:25,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 17:12:46,172:INFO:Calculating mean and std
2025-07-14 17:12:46,189:INFO:Creating metrics dataframe
2025-07-14 17:12:46,237:INFO:Finalizing model
2025-07-14 17:12:51,731:INFO:Uploading results into container
2025-07-14 17:12:51,734:INFO:Uploading model into container now
2025-07-14 17:12:51,762:INFO:_master_model_container: 1
2025-07-14 17:12:51,762:INFO:_display_container: 2
2025-07-14 17:12:51,764:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:12:51,765:INFO:create_model() successfully completed......................................
2025-07-14 17:12:52,815:INFO:Initializing plot_model()
2025-07-14 17:12:52,816:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 17:12:52,816:INFO:Checking exceptions
2025-07-14 17:12:52,934:INFO:Preloading libraries
2025-07-14 17:12:53,936:INFO:Copying training dataset
2025-07-14 17:12:53,937:INFO:Plot type: feature
2025-07-14 17:12:53,940:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 17:14:17,253:INFO:Visual Rendered Successfully
2025-07-14 17:14:17,760:INFO:plot_model() successfully completed......................................
2025-07-14 17:14:17,841:INFO:Initializing tune_model()
2025-07-14 17:14:17,841:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-14 17:14:17,841:INFO:Checking exceptions
2025-07-14 17:14:17,860:INFO:Copying training dataset
2025-07-14 17:14:17,894:INFO:Checking base model
2025-07-14 17:14:17,894:INFO:Base model : Extra Trees Classifier
2025-07-14 17:14:17,894:INFO:Declaring metric variables
2025-07-14 17:14:17,895:INFO:Defining Hyperparameters
2025-07-14 17:14:18,026:INFO:Tuning with n_jobs=-1
2025-07-14 17:14:18,026:INFO:Initializing RandomizedSearchCV
2025-07-14 17:16:53,209:INFO:best_params: {'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2025-07-14 17:16:53,217:INFO:Hyperparameter search completed
2025-07-14 17:16:53,218:INFO:SubProcess create_model() called ==================================
2025-07-14 17:16:53,220:INFO:Initializing create_model()
2025-07-14 17:16:53,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002261FC17E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 250, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 10, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2025-07-14 17:16:53,223:INFO:Checking exceptions
2025-07-14 17:16:53,224:INFO:Importing libraries
2025-07-14 17:16:53,224:INFO:Copying training dataset
2025-07-14 17:16:53,349:INFO:Defining folds
2025-07-14 17:16:53,351:INFO:Declaring metric variables
2025-07-14 17:16:53,352:INFO:Importing untrained model
2025-07-14 17:16:53,353:INFO:Declaring custom model
2025-07-14 17:16:53,357:INFO:Extra Trees Classifier Imported successfully
2025-07-14 17:16:53,359:INFO:Starting cross validation
2025-07-14 17:16:53,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 17:17:29,874:INFO:Calculating mean and std
2025-07-14 17:17:29,876:INFO:Creating metrics dataframe
2025-07-14 17:17:29,880:INFO:Finalizing model
2025-07-14 17:17:34,658:INFO:Uploading results into container
2025-07-14 17:17:34,665:INFO:Uploading model into container now
2025-07-14 17:17:34,666:INFO:_master_model_container: 2
2025-07-14 17:17:34,666:INFO:_display_container: 3
2025-07-14 17:17:34,667:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0005, min_samples_leaf=5,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=250, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:17:34,667:INFO:create_model() successfully completed......................................
2025-07-14 17:17:34,933:INFO:SubProcess create_model() end ==================================
2025-07-14 17:17:34,934:INFO:choose_better activated
2025-07-14 17:17:34,934:INFO:SubProcess create_model() called ==================================
2025-07-14 17:17:34,951:INFO:Initializing create_model()
2025-07-14 17:17:34,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 17:17:34,951:INFO:Checking exceptions
2025-07-14 17:17:34,952:INFO:Importing libraries
2025-07-14 17:17:34,952:INFO:Copying training dataset
2025-07-14 17:17:35,046:INFO:Defining folds
2025-07-14 17:17:35,046:INFO:Declaring metric variables
2025-07-14 17:17:35,047:INFO:Importing untrained model
2025-07-14 17:17:35,047:INFO:Declaring custom model
2025-07-14 17:17:35,048:INFO:Extra Trees Classifier Imported successfully
2025-07-14 17:17:35,049:INFO:Starting cross validation
2025-07-14 17:17:35,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 17:18:27,751:INFO:Calculating mean and std
2025-07-14 17:18:27,752:INFO:Creating metrics dataframe
2025-07-14 17:18:27,756:INFO:Finalizing model
2025-07-14 17:18:33,263:INFO:Uploading results into container
2025-07-14 17:18:33,265:INFO:Uploading model into container now
2025-07-14 17:18:33,267:INFO:_master_model_container: 3
2025-07-14 17:18:33,267:INFO:_display_container: 4
2025-07-14 17:18:33,268:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:18:33,268:INFO:create_model() successfully completed......................................
2025-07-14 17:18:33,424:INFO:SubProcess create_model() end ==================================
2025-07-14 17:18:33,427:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for MCC is 0.7232
2025-07-14 17:18:33,429:INFO:ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                     criterion='gini', max_depth=10, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0005, min_samples_leaf=5,
                     min_samples_split=7, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=250, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) result for MCC is 0.3804
2025-07-14 17:18:33,430:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False) is best model
2025-07-14 17:18:33,430:INFO:choose_better completed
2025-07-14 17:18:33,430:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-14 17:18:33,452:INFO:_master_model_container: 3
2025-07-14 17:18:33,453:INFO:_display_container: 3
2025-07-14 17:18:33,454:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:18:33,454:INFO:tune_model() successfully completed......................................
2025-07-14 17:18:33,651:INFO:Initializing finalize_model()
2025-07-14 17:18:33,651:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-14 17:18:33,652:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:18:33,688:INFO:Initializing create_model()
2025-07-14 17:18:33,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000226199900D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 17:18:33,693:INFO:Checking exceptions
2025-07-14 17:18:33,694:INFO:Importing libraries
2025-07-14 17:18:33,694:INFO:Copying training dataset
2025-07-14 17:18:33,696:INFO:Defining folds
2025-07-14 17:18:33,696:INFO:Declaring metric variables
2025-07-14 17:18:33,696:INFO:Importing untrained model
2025-07-14 17:18:33,696:INFO:Declaring custom model
2025-07-14 17:18:33,697:INFO:Extra Trees Classifier Imported successfully
2025-07-14 17:18:33,700:INFO:Cross validation set to False
2025-07-14 17:18:33,700:INFO:Fitting Model
2025-07-14 17:18:41,794:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 17:18:41,796:INFO:create_model() successfully completed......................................
2025-07-14 17:18:41,937:INFO:_master_model_container: 3
2025-07-14 17:18:41,937:INFO:_display_container: 3
2025-07-14 17:18:41,956:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 17:18:41,957:INFO:finalize_model() successfully completed......................................
2025-07-14 17:18:42,095:INFO:Initializing save_model()
2025-07-14 17:18:42,097:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-14 17:18:42,097:INFO:Adding model into prep_pipe
2025-07-14 17:18:42,098:WARNING:Only Model saved as it was a pipeline.
2025-07-14 17:19:12,776:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal.pkl saved in current working directory
2025-07-14 17:19:12,783:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-14 17:19:12,783:INFO:save_model() successfully completed......................................
2025-07-14 17:20:28,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:20:28,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:20:28,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:20:28,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-14 17:21:35,016:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:108: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-14 17:22:12,480:INFO:PyCaret ClassificationExperiment
2025-07-14 17:22:12,480:INFO:Logging name: clf-default-name
2025-07-14 17:22:12,481:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-14 17:22:12,481:INFO:version 3.3.2
2025-07-14 17:22:12,481:INFO:Initializing setup()
2025-07-14 17:22:12,481:INFO:self.USI: 025b
2025-07-14 17:22:12,481:INFO:self._variable_keys: {'gpu_param', 'y_test', 'target_param', 'is_multiclass', 'n_jobs_param', 'fold_generator', 'X_train', 'fix_imbalance', 'logging_param', 'data', 'html_param', 'fold_groups_param', 'pipeline', 'seed', 'idx', 'y', 'fold_shuffle_param', 'log_plots_param', 'memory', 'y_train', '_ml_usecase', 'exp_name_log', 'X', 'X_test', '_available_plots', 'exp_id', 'gpu_n_jobs_param', 'USI'}
2025-07-14 17:22:12,481:INFO:Checking environment
2025-07-14 17:22:12,481:INFO:python_version: 3.11.9
2025-07-14 17:22:12,482:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-14 17:22:12,482:INFO:machine: AMD64
2025-07-14 17:22:12,551:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-14 17:22:12,561:INFO:Memory: svmem(total=16844595200, available=2131488768, percent=87.3, used=14713106432, free=2131488768)
2025-07-14 17:22:12,565:INFO:Physical Core: 4
2025-07-14 17:22:12,565:INFO:Logical Core: 8
2025-07-14 17:22:12,565:INFO:Checking libraries
2025-07-14 17:22:12,565:INFO:System:
2025-07-14 17:22:12,565:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-14 17:22:12,565:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-14 17:22:12,566:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-14 17:22:12,566:INFO:PyCaret required dependencies:
2025-07-14 17:22:12,671:INFO:                 pip: 25.1.1
2025-07-14 17:22:12,672:INFO:          setuptools: 65.5.0
2025-07-14 17:22:12,672:INFO:             pycaret: 3.3.2
2025-07-14 17:22:12,672:INFO:             IPython: 9.3.0
2025-07-14 17:22:12,672:INFO:          ipywidgets: 8.1.7
2025-07-14 17:22:12,672:INFO:                tqdm: 4.67.1
2025-07-14 17:22:12,672:INFO:               numpy: 1.26.4
2025-07-14 17:22:12,672:INFO:              pandas: 2.1.4
2025-07-14 17:22:12,672:INFO:              jinja2: 3.1.6
2025-07-14 17:22:12,672:INFO:               scipy: 1.11.4
2025-07-14 17:22:12,673:INFO:              joblib: 1.3.2
2025-07-14 17:22:12,673:INFO:             sklearn: 1.4.2
2025-07-14 17:22:12,673:INFO:                pyod: 2.0.5
2025-07-14 17:22:12,673:INFO:            imblearn: 0.13.0
2025-07-14 17:22:12,673:INFO:   category_encoders: 2.7.0
2025-07-14 17:22:12,673:INFO:            lightgbm: 4.6.0
2025-07-14 17:22:12,673:INFO:               numba: 0.61.2
2025-07-14 17:22:12,673:INFO:            requests: 2.32.4
2025-07-14 17:22:12,673:INFO:          matplotlib: 3.7.5
2025-07-14 17:22:12,673:INFO:          scikitplot: 0.3.7
2025-07-14 17:22:12,673:INFO:         yellowbrick: 1.5
2025-07-14 17:22:12,674:INFO:              plotly: 5.24.1
2025-07-14 17:22:12,674:INFO:    plotly-resampler: Not installed
2025-07-14 17:22:12,674:INFO:             kaleido: 1.0.0
2025-07-14 17:22:12,674:INFO:           schemdraw: 0.15
2025-07-14 17:22:12,674:INFO:         statsmodels: 0.14.4
2025-07-14 17:22:12,674:INFO:              sktime: 0.26.0
2025-07-14 17:22:12,674:INFO:               tbats: 1.1.3
2025-07-14 17:22:12,674:INFO:            pmdarima: 2.0.4
2025-07-14 17:22:12,674:INFO:              psutil: 7.0.0
2025-07-14 17:22:12,674:INFO:          markupsafe: 3.0.2
2025-07-14 17:22:12,674:INFO:             pickle5: Not installed
2025-07-14 17:22:12,675:INFO:         cloudpickle: 3.1.1
2025-07-14 17:22:12,675:INFO:         deprecation: 2.1.0
2025-07-14 17:22:12,675:INFO:              xxhash: 3.5.0
2025-07-14 17:22:12,675:INFO:           wurlitzer: Not installed
2025-07-14 17:22:12,675:INFO:PyCaret optional dependencies:
2025-07-14 17:22:12,724:INFO:                shap: 0.48.0
2025-07-14 17:22:12,724:INFO:           interpret: Not installed
2025-07-14 17:22:12,724:INFO:                umap: Not installed
2025-07-14 17:22:12,724:INFO:     ydata_profiling: Not installed
2025-07-14 17:22:12,725:INFO:  explainerdashboard: Not installed
2025-07-14 17:22:12,725:INFO:             autoviz: Not installed
2025-07-14 17:22:12,725:INFO:           fairlearn: Not installed
2025-07-14 17:22:12,725:INFO:          deepchecks: Not installed
2025-07-14 17:22:12,725:INFO:             xgboost: Not installed
2025-07-14 17:22:12,725:INFO:            catboost: Not installed
2025-07-14 17:22:12,727:INFO:              kmodes: Not installed
2025-07-14 17:22:12,727:INFO:             mlxtend: Not installed
2025-07-14 17:22:12,727:INFO:       statsforecast: Not installed
2025-07-14 17:22:12,727:INFO:        tune_sklearn: Not installed
2025-07-14 17:22:12,728:INFO:                 ray: Not installed
2025-07-14 17:22:12,728:INFO:            hyperopt: Not installed
2025-07-14 17:22:12,728:INFO:              optuna: Not installed
2025-07-14 17:22:12,728:INFO:               skopt: Not installed
2025-07-14 17:22:12,728:INFO:              mlflow: Not installed
2025-07-14 17:22:12,728:INFO:              gradio: Not installed
2025-07-14 17:22:12,728:INFO:             fastapi: Not installed
2025-07-14 17:22:12,728:INFO:             uvicorn: Not installed
2025-07-14 17:22:12,728:INFO:              m2cgen: Not installed
2025-07-14 17:22:12,728:INFO:           evidently: Not installed
2025-07-14 17:22:12,728:INFO:               fugue: Not installed
2025-07-14 17:22:12,730:INFO:           streamlit: Not installed
2025-07-14 17:22:12,730:INFO:             prophet: Not installed
2025-07-14 17:22:12,730:INFO:None
2025-07-14 17:22:12,730:INFO:Set up data.
2025-07-14 17:22:12,764:INFO:Set up folding strategy.
2025-07-14 17:22:12,764:INFO:Set up train/test split.
2025-07-14 17:22:12,919:INFO:Set up index.
2025-07-14 17:22:12,928:INFO:Assigning column types.
2025-07-14 17:22:12,988:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-14 17:22:13,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,158:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,390:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,487:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-14 17:22:13,635:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-14 17:22:13,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:13,923:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-14 17:22:14,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:14,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:14,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:14,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:14,302:INFO:Preparing preprocessing pipeline...
2025-07-14 17:22:14,308:INFO:Set up simple imputation.
2025-07-14 17:22:14,332:INFO:Set up encoding of categorical features.
2025-07-14 17:22:14,333:INFO:Set up imbalanced handling.
2025-07-14 17:22:14,337:INFO:Set up column name cleaning.
2025-07-14 17:22:14,774:INFO:Finished creating preprocessing pipeline.
2025-07-14 17:22:14,796:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-14 17:22:14,796:INFO:Creating final display dataframe.
2025-07-14 17:22:15,142:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              025b
2025-07-14 17:22:15,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:15,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:15,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:15,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-14 17:22:15,643:INFO:setup() successfully completed in 3.25s...............
2025-07-14 17:22:15,644:INFO:Initializing create_model()
2025-07-14 17:22:15,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A110D07D0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-14 17:22:15,644:INFO:Checking exceptions
2025-07-14 17:22:15,647:INFO:Importing libraries
2025-07-14 17:22:15,648:INFO:Copying training dataset
2025-07-14 17:22:15,736:INFO:Defining folds
2025-07-14 17:22:15,736:INFO:Declaring metric variables
2025-07-14 17:22:15,737:INFO:Importing untrained model
2025-07-14 17:22:15,737:INFO:Extra Trees Classifier Imported successfully
2025-07-14 17:22:15,738:INFO:Starting cross validation
2025-07-14 17:22:15,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-14 17:23:35,265:INFO:Calculating mean and std
2025-07-14 17:23:35,287:INFO:Creating metrics dataframe
2025-07-14 17:23:35,320:INFO:Finalizing model
2025-07-14 17:23:41,384:INFO:Uploading results into container
2025-07-14 17:23:41,385:INFO:Uploading model into container now
2025-07-14 17:23:41,451:INFO:_master_model_container: 1
2025-07-14 17:23:41,452:INFO:_display_container: 2
2025-07-14 17:23:41,454:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-14 17:23:41,455:INFO:create_model() successfully completed......................................
2025-07-14 17:23:42,992:INFO:Initializing plot_model()
2025-07-14 17:23:42,992:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A110D07D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 17:23:42,992:INFO:Checking exceptions
2025-07-14 17:23:43,162:INFO:Preloading libraries
2025-07-14 17:23:44,249:INFO:Copying training dataset
2025-07-14 17:23:44,249:INFO:Plot type: feature
2025-07-14 17:23:44,252:WARNING:No coef_ found. Trying feature_importances_
2025-07-14 17:24:18,722:INFO:Visual Rendered Successfully
2025-07-14 17:24:18,837:INFO:plot_model() successfully completed......................................
2025-07-14 17:24:18,906:INFO:Initializing plot_model()
2025-07-14 17:24:18,906:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025A110D07D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-14 17:24:18,906:INFO:Checking exceptions
2025-07-14 17:24:18,992:INFO:Preloading libraries
2025-07-14 17:24:19,952:INFO:Copying training dataset
2025-07-14 17:24:19,952:INFO:Plot type: confusion_matrix
2025-07-14 17:24:20,401:INFO:Fitting Model
2025-07-14 17:24:20,403:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-07-14 17:24:20,405:INFO:Scoring test/hold-out set
2025-07-16 16:14:52,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:14:52,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:14:52,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:14:52,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:15:44,879:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:118: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:16:12,987:INFO:PyCaret ClassificationExperiment
2025-07-16 16:16:12,987:INFO:Logging name: clf-default-name
2025-07-16 16:16:12,987:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:16:12,987:INFO:version 3.3.2
2025-07-16 16:16:12,987:INFO:Initializing setup()
2025-07-16 16:16:12,987:INFO:self.USI: f4b4
2025-07-16 16:16:12,987:INFO:self._variable_keys: {'n_jobs_param', 'exp_id', 'memory', 'X_train', '_available_plots', 'y_train', 'y_test', 'exp_name_log', 'fold_groups_param', 'seed', 'gpu_param', 'fix_imbalance', 'html_param', 'USI', 'X_test', 'y', 'pipeline', 'idx', 'gpu_n_jobs_param', 'X', 'fold_shuffle_param', 'logging_param', 'data', 'target_param', 'is_multiclass', 'log_plots_param', 'fold_generator', '_ml_usecase'}
2025-07-16 16:16:12,987:INFO:Checking environment
2025-07-16 16:16:12,987:INFO:python_version: 3.11.9
2025-07-16 16:16:12,987:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:16:12,987:INFO:machine: AMD64
2025-07-16 16:16:13,045:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:16:13,049:INFO:Memory: svmem(total=16844595200, available=643493888, percent=96.2, used=16201101312, free=643493888)
2025-07-16 16:16:13,049:INFO:Physical Core: 4
2025-07-16 16:16:13,050:INFO:Logical Core: 8
2025-07-16 16:16:13,050:INFO:Checking libraries
2025-07-16 16:16:13,050:INFO:System:
2025-07-16 16:16:13,050:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:16:13,050:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:16:13,050:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:16:13,050:INFO:PyCaret required dependencies:
2025-07-16 16:16:13,117:INFO:                 pip: 25.1.1
2025-07-16 16:16:13,118:INFO:          setuptools: 65.5.0
2025-07-16 16:16:13,118:INFO:             pycaret: 3.3.2
2025-07-16 16:16:13,118:INFO:             IPython: 9.3.0
2025-07-16 16:16:13,118:INFO:          ipywidgets: 8.1.7
2025-07-16 16:16:13,118:INFO:                tqdm: 4.67.1
2025-07-16 16:16:13,118:INFO:               numpy: 1.26.4
2025-07-16 16:16:13,118:INFO:              pandas: 2.1.4
2025-07-16 16:16:13,118:INFO:              jinja2: 3.1.6
2025-07-16 16:16:13,118:INFO:               scipy: 1.11.4
2025-07-16 16:16:13,118:INFO:              joblib: 1.3.2
2025-07-16 16:16:13,118:INFO:             sklearn: 1.4.2
2025-07-16 16:16:13,118:INFO:                pyod: 2.0.5
2025-07-16 16:16:13,118:INFO:            imblearn: 0.13.0
2025-07-16 16:16:13,118:INFO:   category_encoders: 2.7.0
2025-07-16 16:16:13,118:INFO:            lightgbm: 4.6.0
2025-07-16 16:16:13,118:INFO:               numba: 0.61.2
2025-07-16 16:16:13,118:INFO:            requests: 2.32.4
2025-07-16 16:16:13,118:INFO:          matplotlib: 3.7.5
2025-07-16 16:16:13,118:INFO:          scikitplot: 0.3.7
2025-07-16 16:16:13,118:INFO:         yellowbrick: 1.5
2025-07-16 16:16:13,118:INFO:              plotly: 5.24.1
2025-07-16 16:16:13,118:INFO:    plotly-resampler: Not installed
2025-07-16 16:16:13,118:INFO:             kaleido: 1.0.0
2025-07-16 16:16:13,118:INFO:           schemdraw: 0.15
2025-07-16 16:16:13,118:INFO:         statsmodels: 0.14.4
2025-07-16 16:16:13,118:INFO:              sktime: 0.26.0
2025-07-16 16:16:13,118:INFO:               tbats: 1.1.3
2025-07-16 16:16:13,118:INFO:            pmdarima: 2.0.4
2025-07-16 16:16:13,118:INFO:              psutil: 7.0.0
2025-07-16 16:16:13,118:INFO:          markupsafe: 3.0.2
2025-07-16 16:16:13,118:INFO:             pickle5: Not installed
2025-07-16 16:16:13,119:INFO:         cloudpickle: 3.1.1
2025-07-16 16:16:13,119:INFO:         deprecation: 2.1.0
2025-07-16 16:16:13,119:INFO:              xxhash: 3.5.0
2025-07-16 16:16:13,119:INFO:           wurlitzer: Not installed
2025-07-16 16:16:13,119:INFO:PyCaret optional dependencies:
2025-07-16 16:16:13,135:INFO:                shap: 0.48.0
2025-07-16 16:16:13,135:INFO:           interpret: Not installed
2025-07-16 16:16:13,135:INFO:                umap: Not installed
2025-07-16 16:16:13,135:INFO:     ydata_profiling: Not installed
2025-07-16 16:16:13,135:INFO:  explainerdashboard: Not installed
2025-07-16 16:16:13,135:INFO:             autoviz: Not installed
2025-07-16 16:16:13,135:INFO:           fairlearn: Not installed
2025-07-16 16:16:13,135:INFO:          deepchecks: Not installed
2025-07-16 16:16:13,135:INFO:             xgboost: Not installed
2025-07-16 16:16:13,135:INFO:            catboost: Not installed
2025-07-16 16:16:13,135:INFO:              kmodes: Not installed
2025-07-16 16:16:13,135:INFO:             mlxtend: Not installed
2025-07-16 16:16:13,135:INFO:       statsforecast: Not installed
2025-07-16 16:16:13,135:INFO:        tune_sklearn: Not installed
2025-07-16 16:16:13,135:INFO:                 ray: Not installed
2025-07-16 16:16:13,135:INFO:            hyperopt: Not installed
2025-07-16 16:16:13,135:INFO:              optuna: Not installed
2025-07-16 16:16:13,135:INFO:               skopt: Not installed
2025-07-16 16:16:13,135:INFO:              mlflow: Not installed
2025-07-16 16:16:13,135:INFO:              gradio: Not installed
2025-07-16 16:16:13,135:INFO:             fastapi: Not installed
2025-07-16 16:16:13,135:INFO:             uvicorn: Not installed
2025-07-16 16:16:13,135:INFO:              m2cgen: Not installed
2025-07-16 16:16:13,135:INFO:           evidently: Not installed
2025-07-16 16:16:13,135:INFO:               fugue: Not installed
2025-07-16 16:16:13,135:INFO:           streamlit: Not installed
2025-07-16 16:16:13,135:INFO:             prophet: Not installed
2025-07-16 16:16:13,135:INFO:None
2025-07-16 16:16:13,135:INFO:Set up data.
2025-07-16 16:16:13,156:INFO:Set up folding strategy.
2025-07-16 16:16:13,156:INFO:Set up train/test split.
2025-07-16 16:16:13,204:INFO:Set up index.
2025-07-16 16:16:13,208:INFO:Assigning column types.
2025-07-16 16:16:13,223:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:16:13,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,349:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:16:13,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,443:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:16:13,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,464:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:16:13,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:13,581:INFO:Preparing preprocessing pipeline...
2025-07-16 16:16:13,586:INFO:Set up simple imputation.
2025-07-16 16:16:13,603:INFO:Set up encoding of categorical features.
2025-07-16 16:16:13,603:INFO:Set up imbalanced handling.
2025-07-16 16:16:13,607:INFO:Set up column name cleaning.
2025-07-16 16:16:14,246:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:16:14,252:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dia da Semana Emissão',
                                             'Mês de Emissão',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_valu...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:16:14,252:INFO:Creating final display dataframe.
2025-07-16 16:16:15,286:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape       (227757, 8)
5   Transformed train set shape       (181070, 8)
6    Transformed test set shape        (46687, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f4b4
2025-07-16 16:16:15,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:15,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:15,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:15,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:16:15,640:INFO:setup() successfully completed in 2.74s...............
2025-07-16 16:16:15,641:INFO:Initializing create_model()
2025-07-16 16:16:15,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002302BCA0AD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:16:15,641:INFO:Checking exceptions
2025-07-16 16:16:15,646:INFO:Importing libraries
2025-07-16 16:16:15,646:INFO:Copying training dataset
2025-07-16 16:16:15,722:INFO:Defining folds
2025-07-16 16:16:15,723:INFO:Declaring metric variables
2025-07-16 16:16:15,723:INFO:Importing untrained model
2025-07-16 16:16:15,724:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:16:15,724:INFO:Starting cross validation
2025-07-16 16:16:15,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:17:29,516:INFO:Calculating mean and std
2025-07-16 16:17:29,522:INFO:Creating metrics dataframe
2025-07-16 16:17:29,535:INFO:Finalizing model
2025-07-16 16:17:35,400:INFO:Uploading results into container
2025-07-16 16:17:35,401:INFO:Uploading model into container now
2025-07-16 16:17:35,433:INFO:_master_model_container: 1
2025-07-16 16:17:35,434:INFO:_display_container: 2
2025-07-16 16:17:35,435:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:17:35,435:INFO:create_model() successfully completed......................................
2025-07-16 16:17:36,231:INFO:Initializing plot_model()
2025-07-16 16:17:36,232:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002302BCA0AD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:17:36,232:INFO:Checking exceptions
2025-07-16 16:17:36,356:INFO:Preloading libraries
2025-07-16 16:17:37,315:INFO:Copying training dataset
2025-07-16 16:17:37,316:INFO:Plot type: feature
2025-07-16 16:17:37,316:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 16:18:21,376:INFO:Visual Rendered Successfully
2025-07-16 16:18:21,651:INFO:plot_model() successfully completed......................................
2025-07-16 16:18:21,718:INFO:Initializing plot_model()
2025-07-16 16:18:21,718:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002302BCA0AD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:18:21,718:INFO:Checking exceptions
2025-07-16 16:18:21,917:INFO:Preloading libraries
2025-07-16 16:18:22,858:INFO:Copying training dataset
2025-07-16 16:18:22,858:INFO:Plot type: confusion_matrix
2025-07-16 16:18:23,331:INFO:Fitting Model
2025-07-16 16:18:23,333:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-07-16 16:18:23,336:INFO:Scoring test/hold-out set
2025-07-16 16:21:03,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:21:03,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:21:03,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:21:03,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:22:01,469:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:118: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:22:41,077:INFO:PyCaret ClassificationExperiment
2025-07-16 16:22:41,078:INFO:Logging name: clf-default-name
2025-07-16 16:22:41,078:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:22:41,078:INFO:version 3.3.2
2025-07-16 16:22:41,078:INFO:Initializing setup()
2025-07-16 16:22:41,078:INFO:self.USI: 1c56
2025-07-16 16:22:41,078:INFO:self._variable_keys: {'fold_shuffle_param', 'USI', 'log_plots_param', 'exp_id', 'data', 'gpu_n_jobs_param', 'is_multiclass', 'exp_name_log', 'logging_param', 'fold_groups_param', 'target_param', 'seed', 'pipeline', '_available_plots', 'y_train', 'fix_imbalance', 'html_param', 'memory', 'y_test', 'y', 'X', 'X_test', '_ml_usecase', 'fold_generator', 'X_train', 'n_jobs_param', 'gpu_param', 'idx'}
2025-07-16 16:22:41,078:INFO:Checking environment
2025-07-16 16:22:41,078:INFO:python_version: 3.11.9
2025-07-16 16:22:41,078:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:22:41,079:INFO:machine: AMD64
2025-07-16 16:22:41,121:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:22:41,126:INFO:Memory: svmem(total=16844595200, available=2026971136, percent=88.0, used=14817624064, free=2026971136)
2025-07-16 16:22:41,126:INFO:Physical Core: 4
2025-07-16 16:22:41,126:INFO:Logical Core: 8
2025-07-16 16:22:41,126:INFO:Checking libraries
2025-07-16 16:22:41,126:INFO:System:
2025-07-16 16:22:41,127:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:22:41,127:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:22:41,127:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:22:41,127:INFO:PyCaret required dependencies:
2025-07-16 16:22:41,236:INFO:                 pip: 25.1.1
2025-07-16 16:22:41,236:INFO:          setuptools: 65.5.0
2025-07-16 16:22:41,236:INFO:             pycaret: 3.3.2
2025-07-16 16:22:41,236:INFO:             IPython: 9.3.0
2025-07-16 16:22:41,236:INFO:          ipywidgets: 8.1.7
2025-07-16 16:22:41,236:INFO:                tqdm: 4.67.1
2025-07-16 16:22:41,236:INFO:               numpy: 1.26.4
2025-07-16 16:22:41,236:INFO:              pandas: 2.1.4
2025-07-16 16:22:41,237:INFO:              jinja2: 3.1.6
2025-07-16 16:22:41,237:INFO:               scipy: 1.11.4
2025-07-16 16:22:41,237:INFO:              joblib: 1.3.2
2025-07-16 16:22:41,237:INFO:             sklearn: 1.4.2
2025-07-16 16:22:41,237:INFO:                pyod: 2.0.5
2025-07-16 16:22:41,237:INFO:            imblearn: 0.13.0
2025-07-16 16:22:41,237:INFO:   category_encoders: 2.7.0
2025-07-16 16:22:41,237:INFO:            lightgbm: 4.6.0
2025-07-16 16:22:41,237:INFO:               numba: 0.61.2
2025-07-16 16:22:41,237:INFO:            requests: 2.32.4
2025-07-16 16:22:41,237:INFO:          matplotlib: 3.7.5
2025-07-16 16:22:41,237:INFO:          scikitplot: 0.3.7
2025-07-16 16:22:41,237:INFO:         yellowbrick: 1.5
2025-07-16 16:22:41,237:INFO:              plotly: 5.24.1
2025-07-16 16:22:41,237:INFO:    plotly-resampler: Not installed
2025-07-16 16:22:41,237:INFO:             kaleido: 1.0.0
2025-07-16 16:22:41,237:INFO:           schemdraw: 0.15
2025-07-16 16:22:41,237:INFO:         statsmodels: 0.14.4
2025-07-16 16:22:41,237:INFO:              sktime: 0.26.0
2025-07-16 16:22:41,237:INFO:               tbats: 1.1.3
2025-07-16 16:22:41,237:INFO:            pmdarima: 2.0.4
2025-07-16 16:22:41,237:INFO:              psutil: 7.0.0
2025-07-16 16:22:41,237:INFO:          markupsafe: 3.0.2
2025-07-16 16:22:41,237:INFO:             pickle5: Not installed
2025-07-16 16:22:41,237:INFO:         cloudpickle: 3.1.1
2025-07-16 16:22:41,237:INFO:         deprecation: 2.1.0
2025-07-16 16:22:41,237:INFO:              xxhash: 3.5.0
2025-07-16 16:22:41,237:INFO:           wurlitzer: Not installed
2025-07-16 16:22:41,237:INFO:PyCaret optional dependencies:
2025-07-16 16:22:41,251:INFO:                shap: 0.48.0
2025-07-16 16:22:41,251:INFO:           interpret: Not installed
2025-07-16 16:22:41,251:INFO:                umap: Not installed
2025-07-16 16:22:41,251:INFO:     ydata_profiling: Not installed
2025-07-16 16:22:41,251:INFO:  explainerdashboard: Not installed
2025-07-16 16:22:41,251:INFO:             autoviz: Not installed
2025-07-16 16:22:41,251:INFO:           fairlearn: Not installed
2025-07-16 16:22:41,251:INFO:          deepchecks: Not installed
2025-07-16 16:22:41,251:INFO:             xgboost: Not installed
2025-07-16 16:22:41,251:INFO:            catboost: Not installed
2025-07-16 16:22:41,251:INFO:              kmodes: Not installed
2025-07-16 16:22:41,251:INFO:             mlxtend: Not installed
2025-07-16 16:22:41,251:INFO:       statsforecast: Not installed
2025-07-16 16:22:41,251:INFO:        tune_sklearn: Not installed
2025-07-16 16:22:41,251:INFO:                 ray: Not installed
2025-07-16 16:22:41,251:INFO:            hyperopt: Not installed
2025-07-16 16:22:41,251:INFO:              optuna: Not installed
2025-07-16 16:22:41,251:INFO:               skopt: Not installed
2025-07-16 16:22:41,251:INFO:              mlflow: Not installed
2025-07-16 16:22:41,251:INFO:              gradio: Not installed
2025-07-16 16:22:41,251:INFO:             fastapi: Not installed
2025-07-16 16:22:41,251:INFO:             uvicorn: Not installed
2025-07-16 16:22:41,251:INFO:              m2cgen: Not installed
2025-07-16 16:22:41,251:INFO:           evidently: Not installed
2025-07-16 16:22:41,251:INFO:               fugue: Not installed
2025-07-16 16:22:41,251:INFO:           streamlit: Not installed
2025-07-16 16:22:41,251:INFO:             prophet: Not installed
2025-07-16 16:22:41,251:INFO:None
2025-07-16 16:22:41,251:INFO:Set up data.
2025-07-16 16:22:41,266:INFO:Set up folding strategy.
2025-07-16 16:22:41,266:INFO:Set up train/test split.
2025-07-16 16:22:41,317:INFO:Set up index.
2025-07-16 16:22:41,321:INFO:Assigning column types.
2025-07-16 16:22:41,338:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:22:41,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,452:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,453:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,476:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:22:41,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:22:41,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,611:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:22:41,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:41,809:INFO:Preparing preprocessing pipeline...
2025-07-16 16:22:41,813:INFO:Set up simple imputation.
2025-07-16 16:22:41,831:INFO:Set up encoding of categorical features.
2025-07-16 16:22:41,833:INFO:Set up imbalanced handling.
2025-07-16 16:22:41,836:INFO:Set up column name cleaning.
2025-07-16 16:22:42,481:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:22:42,489:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dia da Semana Emissão',
                                             'Mês de Emissão',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_valu...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:22:42,489:INFO:Creating final display dataframe.
2025-07-16 16:22:43,092:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape       (227757, 8)
5   Transformed train set shape       (181070, 8)
6    Transformed test set shape        (46687, 8)
7              Numeric features                 5
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              1c56
2025-07-16 16:22:43,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:43,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:43,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:43,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:22:43,362:INFO:setup() successfully completed in 2.42s...............
2025-07-16 16:22:43,363:INFO:Initializing create_model()
2025-07-16 16:22:43,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BF15A47950>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:22:43,363:INFO:Checking exceptions
2025-07-16 16:22:43,382:INFO:Importing libraries
2025-07-16 16:22:43,382:INFO:Copying training dataset
2025-07-16 16:22:43,507:INFO:Defining folds
2025-07-16 16:22:43,507:INFO:Declaring metric variables
2025-07-16 16:22:43,509:INFO:Importing untrained model
2025-07-16 16:22:43,510:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:22:43,510:INFO:Starting cross validation
2025-07-16 16:22:43,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:25:08,608:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:25:08,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:25:08,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:25:08,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:25:44,482:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:118: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:26:16,060:INFO:PyCaret ClassificationExperiment
2025-07-16 16:26:16,061:INFO:Logging name: clf-default-name
2025-07-16 16:26:16,062:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:26:16,062:INFO:version 3.3.2
2025-07-16 16:26:16,062:INFO:Initializing setup()
2025-07-16 16:26:16,062:INFO:self.USI: 7739
2025-07-16 16:26:16,063:INFO:self._variable_keys: {'_ml_usecase', 'fold_groups_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'y_test', 'data', 'memory', 'USI', 'y_train', 'exp_id', 'fix_imbalance', 'idx', 'X', 'fold_generator', 'n_jobs_param', 'logging_param', 'y', 'pipeline', 'X_train', 'log_plots_param', 'target_param', '_available_plots', 'html_param', 'exp_name_log', 'X_test', 'seed', 'gpu_param', 'is_multiclass'}
2025-07-16 16:26:16,063:INFO:Checking environment
2025-07-16 16:26:16,063:INFO:python_version: 3.11.9
2025-07-16 16:26:16,063:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:26:16,063:INFO:machine: AMD64
2025-07-16 16:26:16,105:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:26:16,113:INFO:Memory: svmem(total=16844595200, available=2632970240, percent=84.4, used=14211624960, free=2632970240)
2025-07-16 16:26:16,113:INFO:Physical Core: 4
2025-07-16 16:26:16,113:INFO:Logical Core: 8
2025-07-16 16:26:16,113:INFO:Checking libraries
2025-07-16 16:26:16,113:INFO:System:
2025-07-16 16:26:16,113:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:26:16,114:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:26:16,114:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:26:16,114:INFO:PyCaret required dependencies:
2025-07-16 16:26:16,183:INFO:                 pip: 25.1.1
2025-07-16 16:26:16,183:INFO:          setuptools: 65.5.0
2025-07-16 16:26:16,183:INFO:             pycaret: 3.3.2
2025-07-16 16:26:16,183:INFO:             IPython: 9.3.0
2025-07-16 16:26:16,183:INFO:          ipywidgets: 8.1.7
2025-07-16 16:26:16,185:INFO:                tqdm: 4.67.1
2025-07-16 16:26:16,185:INFO:               numpy: 1.26.4
2025-07-16 16:26:16,185:INFO:              pandas: 2.1.4
2025-07-16 16:26:16,185:INFO:              jinja2: 3.1.6
2025-07-16 16:26:16,185:INFO:               scipy: 1.11.4
2025-07-16 16:26:16,185:INFO:              joblib: 1.3.2
2025-07-16 16:26:16,185:INFO:             sklearn: 1.4.2
2025-07-16 16:26:16,185:INFO:                pyod: 2.0.5
2025-07-16 16:26:16,185:INFO:            imblearn: 0.13.0
2025-07-16 16:26:16,185:INFO:   category_encoders: 2.7.0
2025-07-16 16:26:16,185:INFO:            lightgbm: 4.6.0
2025-07-16 16:26:16,185:INFO:               numba: 0.61.2
2025-07-16 16:26:16,185:INFO:            requests: 2.32.4
2025-07-16 16:26:16,185:INFO:          matplotlib: 3.7.5
2025-07-16 16:26:16,185:INFO:          scikitplot: 0.3.7
2025-07-16 16:26:16,185:INFO:         yellowbrick: 1.5
2025-07-16 16:26:16,185:INFO:              plotly: 5.24.1
2025-07-16 16:26:16,185:INFO:    plotly-resampler: Not installed
2025-07-16 16:26:16,185:INFO:             kaleido: 1.0.0
2025-07-16 16:26:16,185:INFO:           schemdraw: 0.15
2025-07-16 16:26:16,185:INFO:         statsmodels: 0.14.4
2025-07-16 16:26:16,185:INFO:              sktime: 0.26.0
2025-07-16 16:26:16,186:INFO:               tbats: 1.1.3
2025-07-16 16:26:16,186:INFO:            pmdarima: 2.0.4
2025-07-16 16:26:16,186:INFO:              psutil: 7.0.0
2025-07-16 16:26:16,186:INFO:          markupsafe: 3.0.2
2025-07-16 16:26:16,186:INFO:             pickle5: Not installed
2025-07-16 16:26:16,186:INFO:         cloudpickle: 3.1.1
2025-07-16 16:26:16,186:INFO:         deprecation: 2.1.0
2025-07-16 16:26:16,186:INFO:              xxhash: 3.5.0
2025-07-16 16:26:16,186:INFO:           wurlitzer: Not installed
2025-07-16 16:26:16,186:INFO:PyCaret optional dependencies:
2025-07-16 16:26:16,207:INFO:                shap: 0.48.0
2025-07-16 16:26:16,207:INFO:           interpret: Not installed
2025-07-16 16:26:16,207:INFO:                umap: Not installed
2025-07-16 16:26:16,207:INFO:     ydata_profiling: Not installed
2025-07-16 16:26:16,207:INFO:  explainerdashboard: Not installed
2025-07-16 16:26:16,207:INFO:             autoviz: Not installed
2025-07-16 16:26:16,207:INFO:           fairlearn: Not installed
2025-07-16 16:26:16,207:INFO:          deepchecks: Not installed
2025-07-16 16:26:16,207:INFO:             xgboost: Not installed
2025-07-16 16:26:16,207:INFO:            catboost: Not installed
2025-07-16 16:26:16,207:INFO:              kmodes: Not installed
2025-07-16 16:26:16,207:INFO:             mlxtend: Not installed
2025-07-16 16:26:16,207:INFO:       statsforecast: Not installed
2025-07-16 16:26:16,207:INFO:        tune_sklearn: Not installed
2025-07-16 16:26:16,207:INFO:                 ray: Not installed
2025-07-16 16:26:16,208:INFO:            hyperopt: Not installed
2025-07-16 16:26:16,208:INFO:              optuna: Not installed
2025-07-16 16:26:16,208:INFO:               skopt: Not installed
2025-07-16 16:26:16,208:INFO:              mlflow: Not installed
2025-07-16 16:26:16,208:INFO:              gradio: Not installed
2025-07-16 16:26:16,208:INFO:             fastapi: Not installed
2025-07-16 16:26:16,208:INFO:             uvicorn: Not installed
2025-07-16 16:26:16,208:INFO:              m2cgen: Not installed
2025-07-16 16:26:16,208:INFO:           evidently: Not installed
2025-07-16 16:26:16,208:INFO:               fugue: Not installed
2025-07-16 16:26:16,208:INFO:           streamlit: Not installed
2025-07-16 16:26:16,208:INFO:             prophet: Not installed
2025-07-16 16:26:16,209:INFO:None
2025-07-16 16:26:16,210:INFO:Set up data.
2025-07-16 16:26:16,238:INFO:Set up folding strategy.
2025-07-16 16:26:16,238:INFO:Set up train/test split.
2025-07-16 16:26:16,373:INFO:Set up index.
2025-07-16 16:26:16,381:INFO:Assigning column types.
2025-07-16 16:26:16,415:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:26:16,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,480:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,667:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:26:16,729:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,823:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:26:16,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,867:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:26:16,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:16,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:17,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:17,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:17,073:INFO:Preparing preprocessing pipeline...
2025-07-16 16:26:17,078:INFO:Set up simple imputation.
2025-07-16 16:26:17,107:INFO:Set up encoding of categorical features.
2025-07-16 16:26:17,108:INFO:Set up imbalanced handling.
2025-07-16 16:26:17,112:INFO:Set up column name cleaning.
2025-07-16 16:26:20,568:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:26:20,590:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:26:20,591:INFO:Creating final display dataframe.
2025-07-16 16:26:24,012:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              7739
2025-07-16 16:26:24,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:24,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:24,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:24,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:26:24,241:INFO:setup() successfully completed in 8.23s...............
2025-07-16 16:26:24,242:INFO:Initializing create_model()
2025-07-16 16:26:24,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA4C01D890>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:26:24,243:INFO:Checking exceptions
2025-07-16 16:26:24,247:INFO:Importing libraries
2025-07-16 16:26:24,248:INFO:Copying training dataset
2025-07-16 16:26:24,310:INFO:Defining folds
2025-07-16 16:26:24,312:INFO:Declaring metric variables
2025-07-16 16:26:24,314:INFO:Importing untrained model
2025-07-16 16:26:24,317:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:26:24,318:INFO:Starting cross validation
2025-07-16 16:26:24,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:28:10,266:INFO:Calculating mean and std
2025-07-16 16:28:10,279:INFO:Creating metrics dataframe
2025-07-16 16:28:10,322:INFO:Finalizing model
2025-07-16 16:28:19,920:INFO:Uploading results into container
2025-07-16 16:28:19,921:INFO:Uploading model into container now
2025-07-16 16:28:19,948:INFO:_master_model_container: 1
2025-07-16 16:28:19,948:INFO:_display_container: 2
2025-07-16 16:28:19,951:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:28:19,951:INFO:create_model() successfully completed......................................
2025-07-16 16:28:20,862:INFO:Initializing plot_model()
2025-07-16 16:28:20,862:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA4C01D890>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:28:20,863:INFO:Checking exceptions
2025-07-16 16:28:20,948:INFO:Preloading libraries
2025-07-16 16:28:21,558:INFO:Copying training dataset
2025-07-16 16:28:21,559:INFO:Plot type: feature
2025-07-16 16:28:21,559:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 16:33:48,165:INFO:Visual Rendered Successfully
2025-07-16 16:33:48,473:INFO:plot_model() successfully completed......................................
2025-07-16 16:33:48,508:INFO:Initializing plot_model()
2025-07-16 16:33:48,509:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EA4C01D890>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:33:48,511:INFO:Checking exceptions
2025-07-16 16:33:48,603:INFO:Preloading libraries
2025-07-16 16:33:49,152:INFO:Copying training dataset
2025-07-16 16:33:49,153:INFO:Plot type: confusion_matrix
2025-07-16 16:33:49,645:INFO:Fitting Model
2025-07-16 16:33:49,648:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-07-16 16:33:49,651:INFO:Scoring test/hold-out set
2025-07-16 16:41:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:41:33,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:41:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:41:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:42:13,720:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:121: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:42:46,136:INFO:PyCaret ClassificationExperiment
2025-07-16 16:42:46,136:INFO:Logging name: clf-default-name
2025-07-16 16:42:46,137:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:42:46,137:INFO:version 3.3.2
2025-07-16 16:42:46,137:INFO:Initializing setup()
2025-07-16 16:42:46,138:INFO:self.USI: b4fa
2025-07-16 16:42:46,138:INFO:self._variable_keys: {'n_jobs_param', 'X', 'data', 'gpu_param', 'gpu_n_jobs_param', 'y_test', 'X_train', 'fold_groups_param', 'exp_name_log', 'fold_generator', 'y_train', 'USI', '_ml_usecase', 'X_test', 'pipeline', 'fold_shuffle_param', 'html_param', 'seed', '_available_plots', 'logging_param', 'is_multiclass', 'y', 'target_param', 'fix_imbalance', 'memory', 'idx', 'exp_id', 'log_plots_param'}
2025-07-16 16:42:46,139:INFO:Checking environment
2025-07-16 16:42:46,139:INFO:python_version: 3.11.9
2025-07-16 16:42:46,139:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:42:46,140:INFO:machine: AMD64
2025-07-16 16:42:46,183:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:42:46,189:INFO:Memory: svmem(total=16844595200, available=2374074368, percent=85.9, used=14470520832, free=2374074368)
2025-07-16 16:42:46,189:INFO:Physical Core: 4
2025-07-16 16:42:46,189:INFO:Logical Core: 8
2025-07-16 16:42:46,190:INFO:Checking libraries
2025-07-16 16:42:46,190:INFO:System:
2025-07-16 16:42:46,190:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:42:46,191:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:42:46,191:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:42:46,191:INFO:PyCaret required dependencies:
2025-07-16 16:42:46,255:INFO:                 pip: 25.1.1
2025-07-16 16:42:46,256:INFO:          setuptools: 65.5.0
2025-07-16 16:42:46,256:INFO:             pycaret: 3.3.2
2025-07-16 16:42:46,256:INFO:             IPython: 9.3.0
2025-07-16 16:42:46,256:INFO:          ipywidgets: 8.1.7
2025-07-16 16:42:46,256:INFO:                tqdm: 4.67.1
2025-07-16 16:42:46,257:INFO:               numpy: 1.26.4
2025-07-16 16:42:46,257:INFO:              pandas: 2.1.4
2025-07-16 16:42:46,257:INFO:              jinja2: 3.1.6
2025-07-16 16:42:46,257:INFO:               scipy: 1.11.4
2025-07-16 16:42:46,257:INFO:              joblib: 1.3.2
2025-07-16 16:42:46,258:INFO:             sklearn: 1.4.2
2025-07-16 16:42:46,258:INFO:                pyod: 2.0.5
2025-07-16 16:42:46,258:INFO:            imblearn: 0.13.0
2025-07-16 16:42:46,258:INFO:   category_encoders: 2.7.0
2025-07-16 16:42:46,258:INFO:            lightgbm: 4.6.0
2025-07-16 16:42:46,259:INFO:               numba: 0.61.2
2025-07-16 16:42:46,259:INFO:            requests: 2.32.4
2025-07-16 16:42:46,259:INFO:          matplotlib: 3.7.5
2025-07-16 16:42:46,261:INFO:          scikitplot: 0.3.7
2025-07-16 16:42:46,261:INFO:         yellowbrick: 1.5
2025-07-16 16:42:46,261:INFO:              plotly: 5.24.1
2025-07-16 16:42:46,261:INFO:    plotly-resampler: Not installed
2025-07-16 16:42:46,262:INFO:             kaleido: 1.0.0
2025-07-16 16:42:46,263:INFO:           schemdraw: 0.15
2025-07-16 16:42:46,263:INFO:         statsmodels: 0.14.4
2025-07-16 16:42:46,264:INFO:              sktime: 0.26.0
2025-07-16 16:42:46,265:INFO:               tbats: 1.1.3
2025-07-16 16:42:46,265:INFO:            pmdarima: 2.0.4
2025-07-16 16:42:46,265:INFO:              psutil: 7.0.0
2025-07-16 16:42:46,265:INFO:          markupsafe: 3.0.2
2025-07-16 16:42:46,266:INFO:             pickle5: Not installed
2025-07-16 16:42:46,266:INFO:         cloudpickle: 3.1.1
2025-07-16 16:42:46,266:INFO:         deprecation: 2.1.0
2025-07-16 16:42:46,266:INFO:              xxhash: 3.5.0
2025-07-16 16:42:46,266:INFO:           wurlitzer: Not installed
2025-07-16 16:42:46,266:INFO:PyCaret optional dependencies:
2025-07-16 16:42:46,290:INFO:                shap: 0.48.0
2025-07-16 16:42:46,291:INFO:           interpret: Not installed
2025-07-16 16:42:46,291:INFO:                umap: Not installed
2025-07-16 16:42:46,291:INFO:     ydata_profiling: Not installed
2025-07-16 16:42:46,291:INFO:  explainerdashboard: Not installed
2025-07-16 16:42:46,291:INFO:             autoviz: Not installed
2025-07-16 16:42:46,291:INFO:           fairlearn: Not installed
2025-07-16 16:42:46,291:INFO:          deepchecks: Not installed
2025-07-16 16:42:46,291:INFO:             xgboost: Not installed
2025-07-16 16:42:46,291:INFO:            catboost: Not installed
2025-07-16 16:42:46,291:INFO:              kmodes: Not installed
2025-07-16 16:42:46,291:INFO:             mlxtend: Not installed
2025-07-16 16:42:46,291:INFO:       statsforecast: Not installed
2025-07-16 16:42:46,291:INFO:        tune_sklearn: Not installed
2025-07-16 16:42:46,291:INFO:                 ray: Not installed
2025-07-16 16:42:46,291:INFO:            hyperopt: Not installed
2025-07-16 16:42:46,291:INFO:              optuna: Not installed
2025-07-16 16:42:46,291:INFO:               skopt: Not installed
2025-07-16 16:42:46,291:INFO:              mlflow: Not installed
2025-07-16 16:42:46,291:INFO:              gradio: Not installed
2025-07-16 16:42:46,292:INFO:             fastapi: Not installed
2025-07-16 16:42:46,292:INFO:             uvicorn: Not installed
2025-07-16 16:42:46,292:INFO:              m2cgen: Not installed
2025-07-16 16:42:46,292:INFO:           evidently: Not installed
2025-07-16 16:42:46,292:INFO:               fugue: Not installed
2025-07-16 16:42:46,292:INFO:           streamlit: Not installed
2025-07-16 16:42:46,292:INFO:             prophet: Not installed
2025-07-16 16:42:46,292:INFO:None
2025-07-16 16:42:46,292:INFO:Set up data.
2025-07-16 16:42:46,314:INFO:Set up folding strategy.
2025-07-16 16:42:46,314:INFO:Set up train/test split.
2025-07-16 16:42:46,357:INFO:Set up index.
2025-07-16 16:42:46,362:INFO:Assigning column types.
2025-07-16 16:42:46,374:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:42:46,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,534:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:42:46,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:42:46,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,689:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:42:46,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:46,822:INFO:Preparing preprocessing pipeline...
2025-07-16 16:42:46,825:INFO:Set up simple imputation.
2025-07-16 16:42:46,844:INFO:Set up encoding of categorical features.
2025-07-16 16:42:46,844:INFO:Set up imbalanced handling.
2025-07-16 16:42:46,846:INFO:Set up column name cleaning.
2025-07-16 16:42:47,525:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:42:47,532:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:42:47,533:INFO:Creating final display dataframe.
2025-07-16 16:42:48,306:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b4fa
2025-07-16 16:42:48,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:48,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:48,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:48,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:42:48,450:INFO:setup() successfully completed in 2.4s...............
2025-07-16 16:42:48,450:INFO:Initializing create_model()
2025-07-16 16:42:48,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002820912CAD0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:42:48,450:INFO:Checking exceptions
2025-07-16 16:42:48,453:INFO:Importing libraries
2025-07-16 16:42:48,454:INFO:Copying training dataset
2025-07-16 16:42:48,490:INFO:Defining folds
2025-07-16 16:42:48,490:INFO:Declaring metric variables
2025-07-16 16:42:48,490:INFO:Importing untrained model
2025-07-16 16:42:48,490:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:42:48,490:INFO:Starting cross validation
2025-07-16 16:42:48,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:44:25,164:INFO:Calculating mean and std
2025-07-16 16:44:25,165:INFO:Creating metrics dataframe
2025-07-16 16:44:25,169:INFO:Finalizing model
2025-07-16 16:44:33,952:INFO:Uploading results into container
2025-07-16 16:44:33,953:INFO:Uploading model into container now
2025-07-16 16:44:33,965:INFO:_master_model_container: 1
2025-07-16 16:44:33,966:INFO:_display_container: 2
2025-07-16 16:44:33,966:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:44:33,966:INFO:create_model() successfully completed......................................
2025-07-16 16:49:43,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:49:43,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:49:43,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:49:43,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:50:44,489:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:51:11,831:INFO:PyCaret ClassificationExperiment
2025-07-16 16:51:11,832:INFO:Logging name: clf-default-name
2025-07-16 16:51:11,832:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:51:11,833:INFO:version 3.3.2
2025-07-16 16:51:11,833:INFO:Initializing setup()
2025-07-16 16:51:11,833:INFO:self.USI: 9b59
2025-07-16 16:51:11,833:INFO:self._variable_keys: {'seed', 'exp_name_log', 'memory', 'logging_param', '_available_plots', 'gpu_n_jobs_param', 'X_train', 'y', 'is_multiclass', 'USI', 'exp_id', 'target_param', 'X_test', 'idx', 'fix_imbalance', 'data', 'fold_groups_param', 'y_test', 'html_param', 'log_plots_param', 'y_train', 'fold_shuffle_param', 'gpu_param', '_ml_usecase', 'X', 'fold_generator', 'n_jobs_param', 'pipeline'}
2025-07-16 16:51:11,833:INFO:Checking environment
2025-07-16 16:51:11,834:INFO:python_version: 3.11.9
2025-07-16 16:51:11,834:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:51:11,834:INFO:machine: AMD64
2025-07-16 16:51:11,881:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:51:11,887:INFO:Memory: svmem(total=16844595200, available=2032775168, percent=87.9, used=14811820032, free=2032775168)
2025-07-16 16:51:11,888:INFO:Physical Core: 4
2025-07-16 16:51:11,888:INFO:Logical Core: 8
2025-07-16 16:51:11,888:INFO:Checking libraries
2025-07-16 16:51:11,888:INFO:System:
2025-07-16 16:51:11,889:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:51:11,889:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:51:11,889:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:51:11,889:INFO:PyCaret required dependencies:
2025-07-16 16:51:11,977:INFO:                 pip: 25.1.1
2025-07-16 16:51:11,978:INFO:          setuptools: 65.5.0
2025-07-16 16:51:11,978:INFO:             pycaret: 3.3.2
2025-07-16 16:51:11,979:INFO:             IPython: 9.3.0
2025-07-16 16:51:11,979:INFO:          ipywidgets: 8.1.7
2025-07-16 16:51:11,979:INFO:                tqdm: 4.67.1
2025-07-16 16:51:11,979:INFO:               numpy: 1.26.4
2025-07-16 16:51:11,979:INFO:              pandas: 2.1.4
2025-07-16 16:51:11,980:INFO:              jinja2: 3.1.6
2025-07-16 16:51:11,980:INFO:               scipy: 1.11.4
2025-07-16 16:51:11,980:INFO:              joblib: 1.3.2
2025-07-16 16:51:11,980:INFO:             sklearn: 1.4.2
2025-07-16 16:51:11,980:INFO:                pyod: 2.0.5
2025-07-16 16:51:11,980:INFO:            imblearn: 0.13.0
2025-07-16 16:51:11,980:INFO:   category_encoders: 2.7.0
2025-07-16 16:51:11,980:INFO:            lightgbm: 4.6.0
2025-07-16 16:51:11,980:INFO:               numba: 0.61.2
2025-07-16 16:51:11,980:INFO:            requests: 2.32.4
2025-07-16 16:51:11,980:INFO:          matplotlib: 3.7.5
2025-07-16 16:51:11,980:INFO:          scikitplot: 0.3.7
2025-07-16 16:51:11,980:INFO:         yellowbrick: 1.5
2025-07-16 16:51:11,980:INFO:              plotly: 5.24.1
2025-07-16 16:51:11,981:INFO:    plotly-resampler: Not installed
2025-07-16 16:51:11,981:INFO:             kaleido: 1.0.0
2025-07-16 16:51:11,981:INFO:           schemdraw: 0.15
2025-07-16 16:51:11,981:INFO:         statsmodels: 0.14.4
2025-07-16 16:51:11,981:INFO:              sktime: 0.26.0
2025-07-16 16:51:11,981:INFO:               tbats: 1.1.3
2025-07-16 16:51:11,981:INFO:            pmdarima: 2.0.4
2025-07-16 16:51:11,981:INFO:              psutil: 7.0.0
2025-07-16 16:51:11,981:INFO:          markupsafe: 3.0.2
2025-07-16 16:51:11,981:INFO:             pickle5: Not installed
2025-07-16 16:51:11,981:INFO:         cloudpickle: 3.1.1
2025-07-16 16:51:11,981:INFO:         deprecation: 2.1.0
2025-07-16 16:51:11,981:INFO:              xxhash: 3.5.0
2025-07-16 16:51:11,982:INFO:           wurlitzer: Not installed
2025-07-16 16:51:11,982:INFO:PyCaret optional dependencies:
2025-07-16 16:51:12,003:INFO:                shap: 0.48.0
2025-07-16 16:51:12,003:INFO:           interpret: Not installed
2025-07-16 16:51:12,003:INFO:                umap: Not installed
2025-07-16 16:51:12,003:INFO:     ydata_profiling: Not installed
2025-07-16 16:51:12,003:INFO:  explainerdashboard: Not installed
2025-07-16 16:51:12,003:INFO:             autoviz: Not installed
2025-07-16 16:51:12,003:INFO:           fairlearn: Not installed
2025-07-16 16:51:12,003:INFO:          deepchecks: Not installed
2025-07-16 16:51:12,003:INFO:             xgboost: Not installed
2025-07-16 16:51:12,003:INFO:            catboost: Not installed
2025-07-16 16:51:12,003:INFO:              kmodes: Not installed
2025-07-16 16:51:12,003:INFO:             mlxtend: Not installed
2025-07-16 16:51:12,004:INFO:       statsforecast: Not installed
2025-07-16 16:51:12,004:INFO:        tune_sklearn: Not installed
2025-07-16 16:51:12,004:INFO:                 ray: Not installed
2025-07-16 16:51:12,004:INFO:            hyperopt: Not installed
2025-07-16 16:51:12,004:INFO:              optuna: Not installed
2025-07-16 16:51:12,004:INFO:               skopt: Not installed
2025-07-16 16:51:12,004:INFO:              mlflow: Not installed
2025-07-16 16:51:12,004:INFO:              gradio: Not installed
2025-07-16 16:51:12,004:INFO:             fastapi: Not installed
2025-07-16 16:51:12,004:INFO:             uvicorn: Not installed
2025-07-16 16:51:12,004:INFO:              m2cgen: Not installed
2025-07-16 16:51:12,004:INFO:           evidently: Not installed
2025-07-16 16:51:12,004:INFO:               fugue: Not installed
2025-07-16 16:51:12,004:INFO:           streamlit: Not installed
2025-07-16 16:51:12,004:INFO:             prophet: Not installed
2025-07-16 16:51:12,004:INFO:None
2025-07-16 16:51:12,004:INFO:Set up data.
2025-07-16 16:51:12,027:INFO:Set up folding strategy.
2025-07-16 16:51:12,027:INFO:Set up train/test split.
2025-07-16 16:51:12,073:INFO:Set up index.
2025-07-16 16:51:12,078:INFO:Assigning column types.
2025-07-16 16:51:12,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:51:12,123:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,220:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:51:12,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:51:12,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,371:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:51:12,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,496:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:12,499:INFO:Preparing preprocessing pipeline...
2025-07-16 16:51:12,501:INFO:Set up simple imputation.
2025-07-16 16:51:12,511:INFO:Set up encoding of categorical features.
2025-07-16 16:51:12,512:INFO:Set up imbalanced handling.
2025-07-16 16:51:12,514:INFO:Set up column name cleaning.
2025-07-16 16:51:12,982:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:51:12,992:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:51:12,992:INFO:Creating final display dataframe.
2025-07-16 16:51:13,255:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              9b59
2025-07-16 16:51:13,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:13,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:13,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:13,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:51:13,424:INFO:setup() successfully completed in 1.67s...............
2025-07-16 16:51:13,425:INFO:Initializing create_model()
2025-07-16 16:51:13,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273C6DD3A10>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:51:13,425:INFO:Checking exceptions
2025-07-16 16:51:13,426:INFO:Importing libraries
2025-07-16 16:51:13,426:INFO:Copying training dataset
2025-07-16 16:51:13,463:INFO:Defining folds
2025-07-16 16:51:13,463:INFO:Declaring metric variables
2025-07-16 16:51:13,463:INFO:Importing untrained model
2025-07-16 16:51:13,464:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:51:13,464:INFO:Starting cross validation
2025-07-16 16:51:13,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:52:56,543:INFO:Calculating mean and std
2025-07-16 16:52:56,546:INFO:Creating metrics dataframe
2025-07-16 16:52:56,556:INFO:Finalizing model
2025-07-16 16:53:07,003:INFO:Uploading results into container
2025-07-16 16:53:07,005:INFO:Uploading model into container now
2025-07-16 16:53:07,025:INFO:_master_model_container: 1
2025-07-16 16:53:07,027:INFO:_display_container: 2
2025-07-16 16:53:07,028:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:53:07,029:INFO:create_model() successfully completed......................................
2025-07-16 16:53:08,315:INFO:Initializing plot_model()
2025-07-16 16:53:08,316:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273C6DD3A10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:53:08,316:INFO:Checking exceptions
2025-07-16 16:53:08,412:INFO:Preloading libraries
2025-07-16 16:53:09,042:INFO:Copying training dataset
2025-07-16 16:53:09,043:INFO:Plot type: feature
2025-07-16 16:53:09,045:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 16:53:09,859:INFO:Saving 'Feature Importance.png'
2025-07-16 16:53:10,118:INFO:Visual Rendered Successfully
2025-07-16 16:53:10,218:INFO:plot_model() successfully completed......................................
2025-07-16 16:53:10,265:INFO:Initializing plot_model()
2025-07-16 16:53:10,265:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273C6DD3A10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:53:10,266:INFO:Checking exceptions
2025-07-16 16:53:10,313:INFO:Preloading libraries
2025-07-16 16:53:10,978:INFO:Copying training dataset
2025-07-16 16:53:10,979:INFO:Plot type: confusion_matrix
2025-07-16 16:53:11,609:INFO:Fitting Model
2025-07-16 16:53:11,611:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-07-16 16:53:11,615:INFO:Scoring test/hold-out set
2025-07-16 16:53:12,395:INFO:Saving 'Confusion Matrix.png'
2025-07-16 16:53:12,550:INFO:Visual Rendered Successfully
2025-07-16 16:53:12,679:INFO:plot_model() successfully completed......................................
2025-07-16 16:53:12,729:INFO:Initializing plot_model()
2025-07-16 16:53:12,729:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273C6DD3A10>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=tree, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:53:12,729:INFO:Checking exceptions
2025-07-16 16:53:12,817:INFO:Preloading libraries
2025-07-16 16:53:13,787:INFO:Copying training dataset
2025-07-16 16:53:13,787:INFO:Plot type: tree
2025-07-16 16:53:22,643:INFO:Plotting decision trees
2025-07-16 16:55:10,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:55:10,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:55:10,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:55:10,360:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 16:56:04,640:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 16:56:34,064:INFO:PyCaret ClassificationExperiment
2025-07-16 16:56:34,065:INFO:Logging name: clf-default-name
2025-07-16 16:56:34,065:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 16:56:34,066:INFO:version 3.3.2
2025-07-16 16:56:34,066:INFO:Initializing setup()
2025-07-16 16:56:34,067:INFO:self.USI: f5a3
2025-07-16 16:56:34,067:INFO:self._variable_keys: {'fold_generator', 'idx', 'X_train', 'memory', 'X', '_available_plots', 'y_train', 'log_plots_param', 'fix_imbalance', 'target_param', 'fold_shuffle_param', 'html_param', '_ml_usecase', 'y', 'logging_param', 'data', 'gpu_param', 'fold_groups_param', 'exp_id', 'y_test', 'USI', 'X_test', 'n_jobs_param', 'seed', 'gpu_n_jobs_param', 'is_multiclass', 'exp_name_log', 'pipeline'}
2025-07-16 16:56:34,067:INFO:Checking environment
2025-07-16 16:56:34,067:INFO:python_version: 3.11.9
2025-07-16 16:56:34,067:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 16:56:34,069:INFO:machine: AMD64
2025-07-16 16:56:34,120:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 16:56:34,126:INFO:Memory: svmem(total=16844595200, available=1787260928, percent=89.4, used=15057334272, free=1787260928)
2025-07-16 16:56:34,126:INFO:Physical Core: 4
2025-07-16 16:56:34,126:INFO:Logical Core: 8
2025-07-16 16:56:34,126:INFO:Checking libraries
2025-07-16 16:56:34,126:INFO:System:
2025-07-16 16:56:34,126:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 16:56:34,126:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 16:56:34,126:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 16:56:34,126:INFO:PyCaret required dependencies:
2025-07-16 16:56:34,195:INFO:                 pip: 25.1.1
2025-07-16 16:56:34,195:INFO:          setuptools: 65.5.0
2025-07-16 16:56:34,196:INFO:             pycaret: 3.3.2
2025-07-16 16:56:34,196:INFO:             IPython: 9.3.0
2025-07-16 16:56:34,196:INFO:          ipywidgets: 8.1.7
2025-07-16 16:56:34,196:INFO:                tqdm: 4.67.1
2025-07-16 16:56:34,196:INFO:               numpy: 1.26.4
2025-07-16 16:56:34,196:INFO:              pandas: 2.1.4
2025-07-16 16:56:34,196:INFO:              jinja2: 3.1.6
2025-07-16 16:56:34,196:INFO:               scipy: 1.11.4
2025-07-16 16:56:34,196:INFO:              joblib: 1.3.2
2025-07-16 16:56:34,196:INFO:             sklearn: 1.4.2
2025-07-16 16:56:34,197:INFO:                pyod: 2.0.5
2025-07-16 16:56:34,197:INFO:            imblearn: 0.13.0
2025-07-16 16:56:34,197:INFO:   category_encoders: 2.7.0
2025-07-16 16:56:34,197:INFO:            lightgbm: 4.6.0
2025-07-16 16:56:34,197:INFO:               numba: 0.61.2
2025-07-16 16:56:34,197:INFO:            requests: 2.32.4
2025-07-16 16:56:34,197:INFO:          matplotlib: 3.7.5
2025-07-16 16:56:34,197:INFO:          scikitplot: 0.3.7
2025-07-16 16:56:34,197:INFO:         yellowbrick: 1.5
2025-07-16 16:56:34,197:INFO:              plotly: 5.24.1
2025-07-16 16:56:34,197:INFO:    plotly-resampler: Not installed
2025-07-16 16:56:34,197:INFO:             kaleido: 1.0.0
2025-07-16 16:56:34,197:INFO:           schemdraw: 0.15
2025-07-16 16:56:34,197:INFO:         statsmodels: 0.14.4
2025-07-16 16:56:34,197:INFO:              sktime: 0.26.0
2025-07-16 16:56:34,197:INFO:               tbats: 1.1.3
2025-07-16 16:56:34,197:INFO:            pmdarima: 2.0.4
2025-07-16 16:56:34,198:INFO:              psutil: 7.0.0
2025-07-16 16:56:34,198:INFO:          markupsafe: 3.0.2
2025-07-16 16:56:34,198:INFO:             pickle5: Not installed
2025-07-16 16:56:34,198:INFO:         cloudpickle: 3.1.1
2025-07-16 16:56:34,198:INFO:         deprecation: 2.1.0
2025-07-16 16:56:34,198:INFO:              xxhash: 3.5.0
2025-07-16 16:56:34,198:INFO:           wurlitzer: Not installed
2025-07-16 16:56:34,198:INFO:PyCaret optional dependencies:
2025-07-16 16:56:34,212:INFO:                shap: 0.48.0
2025-07-16 16:56:34,213:INFO:           interpret: Not installed
2025-07-16 16:56:34,213:INFO:                umap: Not installed
2025-07-16 16:56:34,213:INFO:     ydata_profiling: Not installed
2025-07-16 16:56:34,213:INFO:  explainerdashboard: Not installed
2025-07-16 16:56:34,213:INFO:             autoviz: Not installed
2025-07-16 16:56:34,213:INFO:           fairlearn: Not installed
2025-07-16 16:56:34,213:INFO:          deepchecks: Not installed
2025-07-16 16:56:34,213:INFO:             xgboost: Not installed
2025-07-16 16:56:34,213:INFO:            catboost: Not installed
2025-07-16 16:56:34,213:INFO:              kmodes: Not installed
2025-07-16 16:56:34,213:INFO:             mlxtend: Not installed
2025-07-16 16:56:34,213:INFO:       statsforecast: Not installed
2025-07-16 16:56:34,213:INFO:        tune_sklearn: Not installed
2025-07-16 16:56:34,213:INFO:                 ray: Not installed
2025-07-16 16:56:34,213:INFO:            hyperopt: Not installed
2025-07-16 16:56:34,213:INFO:              optuna: Not installed
2025-07-16 16:56:34,213:INFO:               skopt: Not installed
2025-07-16 16:56:34,213:INFO:              mlflow: Not installed
2025-07-16 16:56:34,213:INFO:              gradio: Not installed
2025-07-16 16:56:34,213:INFO:             fastapi: Not installed
2025-07-16 16:56:34,213:INFO:             uvicorn: Not installed
2025-07-16 16:56:34,213:INFO:              m2cgen: Not installed
2025-07-16 16:56:34,213:INFO:           evidently: Not installed
2025-07-16 16:56:34,213:INFO:               fugue: Not installed
2025-07-16 16:56:34,213:INFO:           streamlit: Not installed
2025-07-16 16:56:34,213:INFO:             prophet: Not installed
2025-07-16 16:56:34,213:INFO:None
2025-07-16 16:56:34,213:INFO:Set up data.
2025-07-16 16:56:34,228:INFO:Set up folding strategy.
2025-07-16 16:56:34,228:INFO:Set up train/test split.
2025-07-16 16:56:34,295:INFO:Set up index.
2025-07-16 16:56:34,304:INFO:Assigning column types.
2025-07-16 16:56:34,332:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 16:56:34,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,543:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 16:56:34,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 16:56:34,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,671:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 16:56:34,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:34,845:INFO:Preparing preprocessing pipeline...
2025-07-16 16:56:34,850:INFO:Set up simple imputation.
2025-07-16 16:56:34,871:INFO:Set up encoding of categorical features.
2025-07-16 16:56:34,871:INFO:Set up imbalanced handling.
2025-07-16 16:56:34,877:INFO:Set up column name cleaning.
2025-07-16 16:56:35,477:INFO:Finished creating preprocessing pipeline.
2025-07-16 16:56:35,488:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 16:56:35,489:INFO:Creating final display dataframe.
2025-07-16 16:56:35,752:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f5a3
2025-07-16 16:56:35,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:35,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:35,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:35,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 16:56:35,930:INFO:setup() successfully completed in 1.96s...............
2025-07-16 16:56:35,930:INFO:Initializing create_model()
2025-07-16 16:56:35,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A1CFBCB010>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:56:35,930:INFO:Checking exceptions
2025-07-16 16:56:35,932:INFO:Importing libraries
2025-07-16 16:56:35,932:INFO:Copying training dataset
2025-07-16 16:56:35,973:INFO:Defining folds
2025-07-16 16:56:35,973:INFO:Declaring metric variables
2025-07-16 16:56:35,974:INFO:Importing untrained model
2025-07-16 16:56:35,975:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:56:35,977:INFO:Starting cross validation
2025-07-16 16:56:35,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 16:58:20,563:INFO:Calculating mean and std
2025-07-16 16:58:20,601:INFO:Creating metrics dataframe
2025-07-16 16:58:20,711:INFO:Finalizing model
2025-07-16 16:58:34,116:INFO:Uploading results into container
2025-07-16 16:58:34,118:INFO:Uploading model into container now
2025-07-16 16:58:34,142:INFO:_master_model_container: 1
2025-07-16 16:58:34,144:INFO:_display_container: 2
2025-07-16 16:58:34,146:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:58:34,147:INFO:create_model() successfully completed......................................
2025-07-16 16:58:35,387:INFO:Initializing plot_model()
2025-07-16 16:58:35,388:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A1CFBCB010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:58:35,388:INFO:Checking exceptions
2025-07-16 16:58:35,505:INFO:Preloading libraries
2025-07-16 16:58:36,318:INFO:Copying training dataset
2025-07-16 16:58:36,320:INFO:Plot type: feature
2025-07-16 16:58:36,321:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 16:58:37,344:INFO:Saving 'Feature Importance.png'
2025-07-16 16:58:37,689:INFO:Visual Rendered Successfully
2025-07-16 16:58:37,829:INFO:plot_model() successfully completed......................................
2025-07-16 16:58:37,882:INFO:Initializing plot_model()
2025-07-16 16:58:37,883:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A1CFBCB010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 16:58:37,883:INFO:Checking exceptions
2025-07-16 16:58:37,968:INFO:Preloading libraries
2025-07-16 16:58:38,761:INFO:Copying training dataset
2025-07-16 16:58:38,762:INFO:Plot type: confusion_matrix
2025-07-16 16:58:39,724:INFO:Fitting Model
2025-07-16 16:58:39,728:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2025-07-16 16:58:39,733:INFO:Scoring test/hold-out set
2025-07-16 16:58:40,696:INFO:Saving 'Confusion Matrix.png'
2025-07-16 16:58:40,855:INFO:Visual Rendered Successfully
2025-07-16 16:58:40,982:INFO:plot_model() successfully completed......................................
2025-07-16 16:58:41,022:INFO:Initializing finalize_model()
2025-07-16 16:58:41,022:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A1CFBCB010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-16 16:58:41,023:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False)
2025-07-16 16:58:41,042:INFO:Initializing create_model()
2025-07-16 16:58:41,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A1CFBCB010>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=109, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 16:58:41,042:INFO:Checking exceptions
2025-07-16 16:58:41,044:INFO:Importing libraries
2025-07-16 16:58:41,044:INFO:Copying training dataset
2025-07-16 16:58:41,048:INFO:Defining folds
2025-07-16 16:58:41,048:INFO:Declaring metric variables
2025-07-16 16:58:41,048:INFO:Importing untrained model
2025-07-16 16:58:41,049:INFO:Declaring custom model
2025-07-16 16:58:41,050:INFO:Extra Trees Classifier Imported successfully
2025-07-16 16:58:41,051:INFO:Cross validation set to False
2025-07-16 16:58:41,051:INFO:Fitting Model
2025-07-16 16:58:57,140:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-16 16:58:57,141:INFO:create_model() successfully completed......................................
2025-07-16 16:58:57,245:INFO:_master_model_container: 1
2025-07-16 16:58:57,245:INFO:_display_container: 2
2025-07-16 16:58:57,263:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-16 16:58:57,264:INFO:finalize_model() successfully completed......................................
2025-07-16 16:58:57,405:INFO:Initializing save_model()
2025-07-16 16:58:57,406:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-16 16:58:57,406:INFO:Adding model into prep_pipe
2025-07-16 16:58:57,407:WARNING:Only Model saved as it was a pipeline.
2025-07-16 16:59:21,644:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_teste_sem_var_temporal.pkl saved in current working directory
2025-07-16 16:59:21,655:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=109, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-07-16 16:59:21,655:INFO:save_model() successfully completed......................................
2025-07-16 17:06:41,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:06:41,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:06:41,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:06:41,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:07:21,288:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 17:07:47,992:INFO:PyCaret ClassificationExperiment
2025-07-16 17:07:47,992:INFO:Logging name: clf-default-name
2025-07-16 17:07:47,992:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 17:07:47,992:INFO:version 3.3.2
2025-07-16 17:07:47,992:INFO:Initializing setup()
2025-07-16 17:07:47,992:INFO:self.USI: d438
2025-07-16 17:07:47,992:INFO:self._variable_keys: {'exp_name_log', 'X_train', 'n_jobs_param', 'data', 'y_train', '_available_plots', 'log_plots_param', 'fold_groups_param', 'fold_generator', 'logging_param', 'USI', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', '_ml_usecase', 'X', 'gpu_n_jobs_param', 'y_test', 'memory', 'html_param', 'X_test', 'idx', 'seed', 'target_param', 'y', 'pipeline'}
2025-07-16 17:07:47,993:INFO:Checking environment
2025-07-16 17:07:47,993:INFO:python_version: 3.11.9
2025-07-16 17:07:47,993:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 17:07:47,993:INFO:machine: AMD64
2025-07-16 17:07:48,058:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 17:07:48,064:INFO:Memory: svmem(total=16844595200, available=1859039232, percent=89.0, used=14985555968, free=1859039232)
2025-07-16 17:07:48,064:INFO:Physical Core: 4
2025-07-16 17:07:48,064:INFO:Logical Core: 8
2025-07-16 17:07:48,064:INFO:Checking libraries
2025-07-16 17:07:48,064:INFO:System:
2025-07-16 17:07:48,065:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 17:07:48,065:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 17:07:48,065:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 17:07:48,065:INFO:PyCaret required dependencies:
2025-07-16 17:07:48,146:INFO:                 pip: 25.1.1
2025-07-16 17:07:48,146:INFO:          setuptools: 65.5.0
2025-07-16 17:07:48,146:INFO:             pycaret: 3.3.2
2025-07-16 17:07:48,146:INFO:             IPython: 9.3.0
2025-07-16 17:07:48,146:INFO:          ipywidgets: 8.1.7
2025-07-16 17:07:48,146:INFO:                tqdm: 4.67.1
2025-07-16 17:07:48,146:INFO:               numpy: 1.26.4
2025-07-16 17:07:48,146:INFO:              pandas: 2.1.4
2025-07-16 17:07:48,146:INFO:              jinja2: 3.1.6
2025-07-16 17:07:48,147:INFO:               scipy: 1.11.4
2025-07-16 17:07:48,147:INFO:              joblib: 1.3.2
2025-07-16 17:07:48,147:INFO:             sklearn: 1.4.2
2025-07-16 17:07:48,147:INFO:                pyod: 2.0.5
2025-07-16 17:07:48,147:INFO:            imblearn: 0.13.0
2025-07-16 17:07:48,147:INFO:   category_encoders: 2.7.0
2025-07-16 17:07:48,147:INFO:            lightgbm: 4.6.0
2025-07-16 17:07:48,147:INFO:               numba: 0.61.2
2025-07-16 17:07:48,147:INFO:            requests: 2.32.4
2025-07-16 17:07:48,147:INFO:          matplotlib: 3.7.5
2025-07-16 17:07:48,148:INFO:          scikitplot: 0.3.7
2025-07-16 17:07:48,148:INFO:         yellowbrick: 1.5
2025-07-16 17:07:48,148:INFO:              plotly: 5.24.1
2025-07-16 17:07:48,148:INFO:    plotly-resampler: Not installed
2025-07-16 17:07:48,148:INFO:             kaleido: 1.0.0
2025-07-16 17:07:48,148:INFO:           schemdraw: 0.15
2025-07-16 17:07:48,148:INFO:         statsmodels: 0.14.4
2025-07-16 17:07:48,148:INFO:              sktime: 0.26.0
2025-07-16 17:07:48,148:INFO:               tbats: 1.1.3
2025-07-16 17:07:48,148:INFO:            pmdarima: 2.0.4
2025-07-16 17:07:48,148:INFO:              psutil: 7.0.0
2025-07-16 17:07:48,148:INFO:          markupsafe: 3.0.2
2025-07-16 17:07:48,148:INFO:             pickle5: Not installed
2025-07-16 17:07:48,148:INFO:         cloudpickle: 3.1.1
2025-07-16 17:07:48,148:INFO:         deprecation: 2.1.0
2025-07-16 17:07:48,148:INFO:              xxhash: 3.5.0
2025-07-16 17:07:48,148:INFO:           wurlitzer: Not installed
2025-07-16 17:07:48,148:INFO:PyCaret optional dependencies:
2025-07-16 17:07:48,174:INFO:                shap: 0.48.0
2025-07-16 17:07:48,174:INFO:           interpret: Not installed
2025-07-16 17:07:48,174:INFO:                umap: Not installed
2025-07-16 17:07:48,174:INFO:     ydata_profiling: Not installed
2025-07-16 17:07:48,174:INFO:  explainerdashboard: Not installed
2025-07-16 17:07:48,174:INFO:             autoviz: Not installed
2025-07-16 17:07:48,174:INFO:           fairlearn: Not installed
2025-07-16 17:07:48,174:INFO:          deepchecks: Not installed
2025-07-16 17:07:48,174:INFO:             xgboost: Not installed
2025-07-16 17:07:48,174:INFO:            catboost: Not installed
2025-07-16 17:07:48,174:INFO:              kmodes: Not installed
2025-07-16 17:07:48,174:INFO:             mlxtend: Not installed
2025-07-16 17:07:48,174:INFO:       statsforecast: Not installed
2025-07-16 17:07:48,174:INFO:        tune_sklearn: Not installed
2025-07-16 17:07:48,176:INFO:                 ray: Not installed
2025-07-16 17:07:48,176:INFO:            hyperopt: Not installed
2025-07-16 17:07:48,176:INFO:              optuna: Not installed
2025-07-16 17:07:48,176:INFO:               skopt: Not installed
2025-07-16 17:07:48,176:INFO:              mlflow: Not installed
2025-07-16 17:07:48,176:INFO:              gradio: Not installed
2025-07-16 17:07:48,176:INFO:             fastapi: Not installed
2025-07-16 17:07:48,176:INFO:             uvicorn: Not installed
2025-07-16 17:07:48,176:INFO:              m2cgen: Not installed
2025-07-16 17:07:48,176:INFO:           evidently: Not installed
2025-07-16 17:07:48,176:INFO:               fugue: Not installed
2025-07-16 17:07:48,176:INFO:           streamlit: Not installed
2025-07-16 17:07:48,177:INFO:             prophet: Not installed
2025-07-16 17:07:48,177:INFO:None
2025-07-16 17:07:48,177:INFO:Set up data.
2025-07-16 17:07:48,197:INFO:Set up folding strategy.
2025-07-16 17:07:48,197:INFO:Set up train/test split.
2025-07-16 17:07:48,268:INFO:Set up index.
2025-07-16 17:07:48,275:INFO:Assigning column types.
2025-07-16 17:07:48,296:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 17:07:48,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,353:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,462:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,464:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,497:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 17:07:48,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,620:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:07:48,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,652:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 17:07:48,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:48,793:INFO:Preparing preprocessing pipeline...
2025-07-16 17:07:48,796:INFO:Set up simple imputation.
2025-07-16 17:07:48,808:INFO:Set up encoding of categorical features.
2025-07-16 17:07:48,809:INFO:Set up imbalanced handling.
2025-07-16 17:07:48,810:INFO:Set up column name cleaning.
2025-07-16 17:07:49,354:INFO:Finished creating preprocessing pipeline.
2025-07-16 17:07:49,371:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 17:07:49,371:INFO:Creating final display dataframe.
2025-07-16 17:07:49,700:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              d438
2025-07-16 17:07:49,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:49,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:49,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:49,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:07:49,862:INFO:setup() successfully completed in 1.98s...............
2025-07-16 17:07:49,863:INFO:Initializing create_model()
2025-07-16 17:07:49,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002611FB7FE10>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 17:07:49,863:INFO:Checking exceptions
2025-07-16 17:17:21,498:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:17:21,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:17:21,499:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:17:21,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:18:09,616:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 17:18:37,503:INFO:PyCaret ClassificationExperiment
2025-07-16 17:18:37,504:INFO:Logging name: clf-default-name
2025-07-16 17:18:37,505:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 17:18:37,506:INFO:version 3.3.2
2025-07-16 17:18:37,506:INFO:Initializing setup()
2025-07-16 17:18:37,506:INFO:self.USI: 32b3
2025-07-16 17:18:37,507:INFO:self._variable_keys: {'idx', 'fix_imbalance', 'y_train', 'n_jobs_param', 'seed', 'y', 'log_plots_param', 'exp_name_log', 'USI', 'y_test', '_ml_usecase', 'memory', 'exp_id', '_available_plots', 'html_param', 'X_test', 'data', 'is_multiclass', 'X_train', 'fold_groups_param', 'gpu_param', 'logging_param', 'X', 'gpu_n_jobs_param', 'target_param', 'fold_shuffle_param', 'pipeline', 'fold_generator'}
2025-07-16 17:18:37,507:INFO:Checking environment
2025-07-16 17:18:37,507:INFO:python_version: 3.11.9
2025-07-16 17:18:37,507:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 17:18:37,507:INFO:machine: AMD64
2025-07-16 17:18:37,659:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 17:18:37,667:INFO:Memory: svmem(total=16844595200, available=1181257728, percent=93.0, used=15663337472, free=1181257728)
2025-07-16 17:18:37,669:INFO:Physical Core: 4
2025-07-16 17:18:37,669:INFO:Logical Core: 8
2025-07-16 17:18:37,669:INFO:Checking libraries
2025-07-16 17:18:37,669:INFO:System:
2025-07-16 17:18:37,669:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 17:18:37,669:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 17:18:37,669:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 17:18:37,669:INFO:PyCaret required dependencies:
2025-07-16 17:18:37,867:INFO:                 pip: 25.1.1
2025-07-16 17:18:37,867:INFO:          setuptools: 65.5.0
2025-07-16 17:18:37,867:INFO:             pycaret: 3.3.2
2025-07-16 17:18:37,867:INFO:             IPython: 9.3.0
2025-07-16 17:18:37,867:INFO:          ipywidgets: 8.1.7
2025-07-16 17:18:37,868:INFO:                tqdm: 4.67.1
2025-07-16 17:18:37,868:INFO:               numpy: 1.26.4
2025-07-16 17:18:37,868:INFO:              pandas: 2.1.4
2025-07-16 17:18:37,868:INFO:              jinja2: 3.1.6
2025-07-16 17:18:37,868:INFO:               scipy: 1.11.4
2025-07-16 17:18:37,868:INFO:              joblib: 1.3.2
2025-07-16 17:18:37,868:INFO:             sklearn: 1.4.2
2025-07-16 17:18:37,868:INFO:                pyod: 2.0.5
2025-07-16 17:18:37,868:INFO:            imblearn: 0.13.0
2025-07-16 17:18:37,868:INFO:   category_encoders: 2.7.0
2025-07-16 17:18:37,868:INFO:            lightgbm: 4.6.0
2025-07-16 17:18:37,868:INFO:               numba: 0.61.2
2025-07-16 17:18:37,868:INFO:            requests: 2.32.4
2025-07-16 17:18:37,868:INFO:          matplotlib: 3.7.5
2025-07-16 17:18:37,868:INFO:          scikitplot: 0.3.7
2025-07-16 17:18:37,869:INFO:         yellowbrick: 1.5
2025-07-16 17:18:37,869:INFO:              plotly: 5.24.1
2025-07-16 17:18:37,869:INFO:    plotly-resampler: Not installed
2025-07-16 17:18:37,869:INFO:             kaleido: 1.0.0
2025-07-16 17:18:37,869:INFO:           schemdraw: 0.15
2025-07-16 17:18:37,869:INFO:         statsmodels: 0.14.4
2025-07-16 17:18:37,869:INFO:              sktime: 0.26.0
2025-07-16 17:18:37,869:INFO:               tbats: 1.1.3
2025-07-16 17:18:37,869:INFO:            pmdarima: 2.0.4
2025-07-16 17:18:37,869:INFO:              psutil: 7.0.0
2025-07-16 17:18:37,869:INFO:          markupsafe: 3.0.2
2025-07-16 17:18:37,869:INFO:             pickle5: Not installed
2025-07-16 17:18:37,869:INFO:         cloudpickle: 3.1.1
2025-07-16 17:18:37,869:INFO:         deprecation: 2.1.0
2025-07-16 17:18:37,869:INFO:              xxhash: 3.5.0
2025-07-16 17:18:37,869:INFO:           wurlitzer: Not installed
2025-07-16 17:18:37,870:INFO:PyCaret optional dependencies:
2025-07-16 17:18:37,905:INFO:                shap: 0.48.0
2025-07-16 17:18:37,905:INFO:           interpret: Not installed
2025-07-16 17:18:37,905:INFO:                umap: Not installed
2025-07-16 17:18:37,906:INFO:     ydata_profiling: Not installed
2025-07-16 17:18:37,906:INFO:  explainerdashboard: Not installed
2025-07-16 17:18:37,906:INFO:             autoviz: Not installed
2025-07-16 17:18:37,906:INFO:           fairlearn: Not installed
2025-07-16 17:18:37,906:INFO:          deepchecks: Not installed
2025-07-16 17:18:37,906:INFO:             xgboost: Not installed
2025-07-16 17:18:37,906:INFO:            catboost: 1.2.8
2025-07-16 17:18:37,907:INFO:              kmodes: Not installed
2025-07-16 17:18:37,907:INFO:             mlxtend: Not installed
2025-07-16 17:18:37,907:INFO:       statsforecast: Not installed
2025-07-16 17:18:37,907:INFO:        tune_sklearn: Not installed
2025-07-16 17:18:37,907:INFO:                 ray: Not installed
2025-07-16 17:18:37,907:INFO:            hyperopt: Not installed
2025-07-16 17:18:37,907:INFO:              optuna: Not installed
2025-07-16 17:18:37,907:INFO:               skopt: Not installed
2025-07-16 17:18:37,907:INFO:              mlflow: Not installed
2025-07-16 17:18:37,907:INFO:              gradio: Not installed
2025-07-16 17:18:37,907:INFO:             fastapi: Not installed
2025-07-16 17:18:37,907:INFO:             uvicorn: Not installed
2025-07-16 17:18:37,907:INFO:              m2cgen: Not installed
2025-07-16 17:18:37,909:INFO:           evidently: Not installed
2025-07-16 17:18:37,909:INFO:               fugue: Not installed
2025-07-16 17:18:37,909:INFO:           streamlit: Not installed
2025-07-16 17:18:37,909:INFO:             prophet: Not installed
2025-07-16 17:18:37,909:INFO:None
2025-07-16 17:18:37,909:INFO:Set up data.
2025-07-16 17:18:37,937:INFO:Set up folding strategy.
2025-07-16 17:18:37,937:INFO:Set up train/test split.
2025-07-16 17:18:38,190:INFO:Set up index.
2025-07-16 17:18:38,227:INFO:Assigning column types.
2025-07-16 17:18:38,293:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 17:18:38,494:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:18:38,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:18:38,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:38,635:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:38,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:18:38,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:18:38,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:38,930:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:38,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 17:18:39,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:18:39,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:39,047:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:39,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:18:39,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:39,161:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:39,162:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 17:18:39,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:39,294:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:39,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:39,405:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:39,409:INFO:Preparing preprocessing pipeline...
2025-07-16 17:18:39,414:INFO:Set up simple imputation.
2025-07-16 17:18:39,430:INFO:Set up encoding of categorical features.
2025-07-16 17:18:39,431:INFO:Set up imbalanced handling.
2025-07-16 17:18:39,434:INFO:Set up column name cleaning.
2025-07-16 17:18:40,061:INFO:Finished creating preprocessing pipeline.
2025-07-16 17:18:40,076:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 17:18:40,076:INFO:Creating final display dataframe.
2025-07-16 17:18:40,465:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              32b3
2025-07-16 17:18:40,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:40,635:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:40,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:18:40,762:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:18:40,765:INFO:setup() successfully completed in 3.46s...............
2025-07-16 17:18:40,765:INFO:Initializing create_model()
2025-07-16 17:18:40,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026FD719DA50>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 17:18:40,766:INFO:Checking exceptions
2025-07-16 17:18:42,098:INFO:Importing libraries
2025-07-16 17:18:42,098:INFO:Copying training dataset
2025-07-16 17:18:42,193:INFO:Defining folds
2025-07-16 17:18:42,194:INFO:Declaring metric variables
2025-07-16 17:18:42,194:INFO:Importing untrained model
2025-07-16 17:18:42,195:INFO:CatBoost Classifier Imported successfully
2025-07-16 17:18:42,195:INFO:Starting cross validation
2025-07-16 17:18:42,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 17:24:49,355:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
1 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-16 17:24:49,376:INFO:Calculating mean and std
2025-07-16 17:24:49,389:INFO:Creating metrics dataframe
2025-07-16 17:24:49,430:INFO:Finalizing model
2025-07-16 17:25:40,302:INFO:Uploading results into container
2025-07-16 17:25:40,304:INFO:Uploading model into container now
2025-07-16 17:25:40,345:INFO:_master_model_container: 1
2025-07-16 17:25:40,346:INFO:_display_container: 2
2025-07-16 17:25:40,346:INFO:<catboost.core.CatBoostClassifier object at 0x0000026FE4953990>
2025-07-16 17:25:40,346:INFO:create_model() successfully completed......................................
2025-07-16 17:25:41,723:INFO:Initializing plot_model()
2025-07-16 17:25:41,723:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026FD719DA50>, estimator=<catboost.core.CatBoostClassifier object at 0x0000026FE4953990>, plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 17:25:41,723:INFO:Checking exceptions
2025-07-16 17:25:41,785:INFO:Preloading libraries
2025-07-16 17:25:41,789:INFO:Copying training dataset
2025-07-16 17:25:41,789:INFO:Plot type: feature
2025-07-16 17:25:41,790:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 17:25:42,323:INFO:Saving 'Feature Importance.png'
2025-07-16 17:25:42,540:INFO:Visual Rendered Successfully
2025-07-16 17:25:42,685:INFO:plot_model() successfully completed......................................
2025-07-16 17:25:42,686:INFO:Initializing plot_model()
2025-07-16 17:25:42,686:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026FD719DA50>, estimator=<catboost.core.CatBoostClassifier object at 0x0000026FE4953990>, plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 17:25:42,686:INFO:Checking exceptions
2025-07-16 17:25:42,707:INFO:Preloading libraries
2025-07-16 17:25:42,716:INFO:Copying training dataset
2025-07-16 17:25:42,716:INFO:Plot type: confusion_matrix
2025-07-16 17:25:43,562:INFO:Fitting Model
2025-07-16 17:25:43,577:INFO:Scoring test/hold-out set
2025-07-16 17:25:43,736:INFO:Saving 'Confusion Matrix.png'
2025-07-16 17:25:43,894:INFO:Visual Rendered Successfully
2025-07-16 17:25:44,005:INFO:plot_model() successfully completed......................................
2025-07-16 17:25:44,006:INFO:Initializing finalize_model()
2025-07-16 17:25:44,006:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026FD719DA50>, estimator=<catboost.core.CatBoostClassifier object at 0x0000026FE4953990>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-16 17:25:44,006:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x0000026FE4953990>
2025-07-16 17:25:44,021:INFO:Initializing create_model()
2025-07-16 17:25:44,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026FD719DA50>, estimator=<catboost.core.CatBoostClassifier object at 0x0000026FE4953990>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 17:25:44,021:INFO:Checking exceptions
2025-07-16 17:25:44,022:INFO:Importing libraries
2025-07-16 17:25:44,022:INFO:Copying training dataset
2025-07-16 17:25:44,023:INFO:Defining folds
2025-07-16 17:25:44,024:INFO:Declaring metric variables
2025-07-16 17:25:44,024:INFO:Importing untrained model
2025-07-16 17:25:44,024:INFO:Declaring custom model
2025-07-16 17:25:44,024:INFO:CatBoost Classifier Imported successfully
2025-07-16 17:25:44,026:INFO:Cross validation set to False
2025-07-16 17:25:44,026:INFO:Fitting Model
2025-07-16 17:26:55,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000026FD8401250>)],
         verbose=False)
2025-07-16 17:26:55,995:INFO:create_model() successfully completed......................................
2025-07-16 17:26:56,113:INFO:_master_model_container: 1
2025-07-16 17:26:56,113:INFO:_display_container: 2
2025-07-16 17:26:56,127:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000026FD8401250>)],
         verbose=False)
2025-07-16 17:26:56,127:INFO:finalize_model() successfully completed......................................
2025-07-16 17:26:56,248:INFO:Initializing save_model()
2025-07-16 17:26:56,248:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000026FD8401250>)],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-16 17:26:56,255:INFO:Adding model into prep_pipe
2025-07-16 17:26:56,255:WARNING:Only Model saved as it was a pipeline.
2025-07-16 17:26:56,537:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost.pkl saved in current working directory
2025-07-16 17:26:56,559:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000026FD8401250>)],
         verbose=False)
2025-07-16 17:26:56,559:INFO:save_model() successfully completed......................................
2025-07-16 17:27:47,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:27:47,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:27:47,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:27:47,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-16 17:28:25,022:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-16 17:28:45,142:INFO:PyCaret ClassificationExperiment
2025-07-16 17:28:45,142:INFO:Logging name: clf-default-name
2025-07-16 17:28:45,142:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-16 17:28:45,142:INFO:version 3.3.2
2025-07-16 17:28:45,142:INFO:Initializing setup()
2025-07-16 17:28:45,149:INFO:self.USI: 08a2
2025-07-16 17:28:45,149:INFO:self._variable_keys: {'X', 'exp_id', 'pipeline', 'X_train', 'gpu_param', '_ml_usecase', 'fold_generator', 'y_test', 'html_param', 'target_param', 'seed', 'fold_shuffle_param', 'USI', 'X_test', '_available_plots', 'y_train', 'n_jobs_param', 'memory', 'fold_groups_param', 'y', 'data', 'gpu_n_jobs_param', 'fix_imbalance', 'is_multiclass', 'log_plots_param', 'logging_param', 'exp_name_log', 'idx'}
2025-07-16 17:28:45,150:INFO:Checking environment
2025-07-16 17:28:45,150:INFO:python_version: 3.11.9
2025-07-16 17:28:45,150:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-16 17:28:45,152:INFO:machine: AMD64
2025-07-16 17:28:45,199:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-16 17:28:45,205:INFO:Memory: svmem(total=16844595200, available=4813725696, percent=71.4, used=12030869504, free=4813725696)
2025-07-16 17:28:45,205:INFO:Physical Core: 4
2025-07-16 17:28:45,205:INFO:Logical Core: 8
2025-07-16 17:28:45,205:INFO:Checking libraries
2025-07-16 17:28:45,205:INFO:System:
2025-07-16 17:28:45,205:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-16 17:28:45,205:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-16 17:28:45,205:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-16 17:28:45,205:INFO:PyCaret required dependencies:
2025-07-16 17:28:45,292:INFO:                 pip: 25.1.1
2025-07-16 17:28:45,292:INFO:          setuptools: 65.5.0
2025-07-16 17:28:45,292:INFO:             pycaret: 3.3.2
2025-07-16 17:28:45,292:INFO:             IPython: 9.3.0
2025-07-16 17:28:45,292:INFO:          ipywidgets: 8.1.7
2025-07-16 17:28:45,292:INFO:                tqdm: 4.67.1
2025-07-16 17:28:45,292:INFO:               numpy: 1.26.4
2025-07-16 17:28:45,292:INFO:              pandas: 2.1.4
2025-07-16 17:28:45,292:INFO:              jinja2: 3.1.6
2025-07-16 17:28:45,292:INFO:               scipy: 1.11.4
2025-07-16 17:28:45,292:INFO:              joblib: 1.3.2
2025-07-16 17:28:45,292:INFO:             sklearn: 1.4.2
2025-07-16 17:28:45,292:INFO:                pyod: 2.0.5
2025-07-16 17:28:45,292:INFO:            imblearn: 0.13.0
2025-07-16 17:28:45,292:INFO:   category_encoders: 2.7.0
2025-07-16 17:28:45,292:INFO:            lightgbm: 4.6.0
2025-07-16 17:28:45,292:INFO:               numba: 0.61.2
2025-07-16 17:28:45,292:INFO:            requests: 2.32.4
2025-07-16 17:28:45,292:INFO:          matplotlib: 3.7.5
2025-07-16 17:28:45,292:INFO:          scikitplot: 0.3.7
2025-07-16 17:28:45,292:INFO:         yellowbrick: 1.5
2025-07-16 17:28:45,292:INFO:              plotly: 5.24.1
2025-07-16 17:28:45,292:INFO:    plotly-resampler: Not installed
2025-07-16 17:28:45,292:INFO:             kaleido: 1.0.0
2025-07-16 17:28:45,292:INFO:           schemdraw: 0.15
2025-07-16 17:28:45,292:INFO:         statsmodels: 0.14.4
2025-07-16 17:28:45,292:INFO:              sktime: 0.26.0
2025-07-16 17:28:45,292:INFO:               tbats: 1.1.3
2025-07-16 17:28:45,292:INFO:            pmdarima: 2.0.4
2025-07-16 17:28:45,292:INFO:              psutil: 7.0.0
2025-07-16 17:28:45,292:INFO:          markupsafe: 3.0.2
2025-07-16 17:28:45,292:INFO:             pickle5: Not installed
2025-07-16 17:28:45,292:INFO:         cloudpickle: 3.1.1
2025-07-16 17:28:45,292:INFO:         deprecation: 2.1.0
2025-07-16 17:28:45,292:INFO:              xxhash: 3.5.0
2025-07-16 17:28:45,300:INFO:           wurlitzer: Not installed
2025-07-16 17:28:45,300:INFO:PyCaret optional dependencies:
2025-07-16 17:28:45,310:INFO:                shap: 0.48.0
2025-07-16 17:28:45,312:INFO:           interpret: Not installed
2025-07-16 17:28:45,312:INFO:                umap: Not installed
2025-07-16 17:28:45,312:INFO:     ydata_profiling: Not installed
2025-07-16 17:28:45,312:INFO:  explainerdashboard: Not installed
2025-07-16 17:28:45,312:INFO:             autoviz: Not installed
2025-07-16 17:28:45,312:INFO:           fairlearn: Not installed
2025-07-16 17:28:45,312:INFO:          deepchecks: Not installed
2025-07-16 17:28:45,312:INFO:             xgboost: Not installed
2025-07-16 17:28:45,312:INFO:            catboost: 1.2.8
2025-07-16 17:28:45,312:INFO:              kmodes: Not installed
2025-07-16 17:28:45,312:INFO:             mlxtend: Not installed
2025-07-16 17:28:45,312:INFO:       statsforecast: Not installed
2025-07-16 17:28:45,312:INFO:        tune_sklearn: Not installed
2025-07-16 17:28:45,312:INFO:                 ray: Not installed
2025-07-16 17:28:45,312:INFO:            hyperopt: Not installed
2025-07-16 17:28:45,312:INFO:              optuna: Not installed
2025-07-16 17:28:45,312:INFO:               skopt: Not installed
2025-07-16 17:28:45,312:INFO:              mlflow: Not installed
2025-07-16 17:28:45,312:INFO:              gradio: Not installed
2025-07-16 17:28:45,312:INFO:             fastapi: Not installed
2025-07-16 17:28:45,312:INFO:             uvicorn: Not installed
2025-07-16 17:28:45,312:INFO:              m2cgen: Not installed
2025-07-16 17:28:45,312:INFO:           evidently: Not installed
2025-07-16 17:28:45,312:INFO:               fugue: Not installed
2025-07-16 17:28:45,312:INFO:           streamlit: Not installed
2025-07-16 17:28:45,312:INFO:             prophet: Not installed
2025-07-16 17:28:45,312:INFO:None
2025-07-16 17:28:45,312:INFO:Set up data.
2025-07-16 17:28:45,324:INFO:Set up folding strategy.
2025-07-16 17:28:45,324:INFO:Set up train/test split.
2025-07-16 17:28:45,352:INFO:Set up index.
2025-07-16 17:28:45,362:INFO:Assigning column types.
2025-07-16 17:28:45,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-16 17:28:45,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,466:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,552:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,552:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-16 17:28:45,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,627:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-16 17:28:45,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,685:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,685:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-16 17:28:45,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,752:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:45,843:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:45,846:INFO:Preparing preprocessing pipeline...
2025-07-16 17:28:45,852:INFO:Set up simple imputation.
2025-07-16 17:28:45,863:INFO:Set up encoding of categorical features.
2025-07-16 17:28:45,864:INFO:Set up imbalanced handling.
2025-07-16 17:28:45,866:INFO:Set up column name cleaning.
2025-07-16 17:28:46,801:INFO:Finished creating preprocessing pipeline.
2025-07-16 17:28:46,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-16 17:28:46,814:INFO:Creating final display dataframe.
2025-07-16 17:28:48,137:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              08a2
2025-07-16 17:28:48,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:48,284:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:48,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-16 17:28:48,414:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-16 17:28:48,421:INFO:setup() successfully completed in 3.33s...............
2025-07-16 17:28:48,421:INFO:Initializing create_model()
2025-07-16 17:28:48,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6DCF82010>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 17:28:48,421:INFO:Checking exceptions
2025-07-16 17:28:48,421:INFO:Importing libraries
2025-07-16 17:28:48,421:INFO:Copying training dataset
2025-07-16 17:28:48,495:INFO:Defining folds
2025-07-16 17:28:48,495:INFO:Declaring metric variables
2025-07-16 17:28:48,495:INFO:Importing untrained model
2025-07-16 17:28:48,495:INFO:CatBoost Classifier Imported successfully
2025-07-16 17:28:48,495:INFO:Starting cross validation
2025-07-16 17:28:48,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-16 17:32:36,400:INFO:Calculating mean and std
2025-07-16 17:32:36,403:INFO:Creating metrics dataframe
2025-07-16 17:32:36,407:INFO:Finalizing model
2025-07-16 17:33:16,184:INFO:Uploading results into container
2025-07-16 17:33:16,185:INFO:Uploading model into container now
2025-07-16 17:33:16,200:INFO:_master_model_container: 1
2025-07-16 17:33:16,202:INFO:_display_container: 2
2025-07-16 17:33:16,203:INFO:<catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>
2025-07-16 17:33:16,204:INFO:create_model() successfully completed......................................
2025-07-16 17:33:16,641:INFO:Initializing plot_model()
2025-07-16 17:33:16,641:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6DCF82010>, estimator=<catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>, plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 17:33:16,641:INFO:Checking exceptions
2025-07-16 17:33:16,673:INFO:Preloading libraries
2025-07-16 17:33:16,682:INFO:Copying training dataset
2025-07-16 17:33:16,682:INFO:Plot type: feature
2025-07-16 17:33:16,683:WARNING:No coef_ found. Trying feature_importances_
2025-07-16 17:33:17,050:INFO:Saving 'Feature Importance.png'
2025-07-16 17:33:17,165:INFO:Visual Rendered Successfully
2025-07-16 17:33:17,250:INFO:plot_model() successfully completed......................................
2025-07-16 17:33:17,250:INFO:Initializing plot_model()
2025-07-16 17:33:17,250:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6DCF82010>, estimator=<catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>, plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-16 17:33:17,257:INFO:Checking exceptions
2025-07-16 17:33:17,265:INFO:Preloading libraries
2025-07-16 17:33:17,270:INFO:Copying training dataset
2025-07-16 17:33:17,270:INFO:Plot type: confusion_matrix
2025-07-16 17:33:17,560:INFO:Fitting Model
2025-07-16 17:33:17,560:INFO:Scoring test/hold-out set
2025-07-16 17:33:17,650:INFO:Saving 'Confusion Matrix.png'
2025-07-16 17:33:17,737:INFO:Visual Rendered Successfully
2025-07-16 17:33:17,828:INFO:plot_model() successfully completed......................................
2025-07-16 17:33:17,830:INFO:Initializing finalize_model()
2025-07-16 17:33:17,830:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6DCF82010>, estimator=<catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-16 17:33:17,831:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>
2025-07-16 17:33:17,850:INFO:Initializing create_model()
2025-07-16 17:33:17,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6DCF82010>, estimator=<catboost.core.CatBoostClassifier object at 0x000002D6E9D6B510>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-16 17:33:17,850:INFO:Checking exceptions
2025-07-16 17:33:17,850:INFO:Importing libraries
2025-07-16 17:33:17,850:INFO:Copying training dataset
2025-07-16 17:33:17,855:INFO:Defining folds
2025-07-16 17:33:17,855:INFO:Declaring metric variables
2025-07-16 17:33:17,855:INFO:Importing untrained model
2025-07-16 17:33:17,855:INFO:Declaring custom model
2025-07-16 17:33:17,855:INFO:CatBoost Classifier Imported successfully
2025-07-16 17:33:17,855:INFO:Cross validation set to False
2025-07-16 17:33:17,855:INFO:Fitting Model
2025-07-16 17:34:01,043:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002D6DD520A50>)],
         verbose=False)
2025-07-16 17:34:01,043:INFO:create_model() successfully completed......................................
2025-07-16 17:34:01,168:INFO:_master_model_container: 1
2025-07-16 17:34:01,168:INFO:_display_container: 2
2025-07-16 17:34:01,183:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002D6DD520A50>)],
         verbose=False)
2025-07-16 17:34:01,184:INFO:finalize_model() successfully completed......................................
2025-07-16 17:34:01,301:INFO:Initializing save_model()
2025-07-16 17:34:01,301:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002D6DD520A50>)],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-16 17:34:01,301:INFO:Adding model into prep_pipe
2025-07-16 17:34:01,301:WARNING:Only Model saved as it was a pipeline.
2025-07-16 17:34:01,728:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost.pkl saved in current working directory
2025-07-16 17:34:01,733:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002D6DD520A50>)],
         verbose=False)
2025-07-16 17:34:01,733:INFO:save_model() successfully completed......................................
2025-07-17 08:33:00,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:33:00,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:33:00,697:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:33:00,698:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:33:49,701:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 08:34:04,813:INFO:PyCaret ClassificationExperiment
2025-07-17 08:34:04,813:INFO:Logging name: clf-default-name
2025-07-17 08:34:04,814:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 08:34:04,814:INFO:version 3.3.2
2025-07-17 08:34:04,814:INFO:Initializing setup()
2025-07-17 08:34:04,814:INFO:self.USI: f55a
2025-07-17 08:34:04,815:INFO:self._variable_keys: {'USI', 'y', 'fold_shuffle_param', 'fold_generator', 'seed', 'exp_name_log', 'idx', 'fix_imbalance', 'y_train', 'y_test', '_ml_usecase', 'fold_groups_param', 'memory', '_available_plots', 'X', 'X_test', 'pipeline', 'logging_param', 'html_param', 'X_train', 'target_param', 'data', 'gpu_param', 'gpu_n_jobs_param', 'n_jobs_param', 'exp_id', 'is_multiclass', 'log_plots_param'}
2025-07-17 08:34:04,815:INFO:Checking environment
2025-07-17 08:34:04,815:INFO:python_version: 3.11.9
2025-07-17 08:34:04,815:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 08:34:04,816:INFO:machine: AMD64
2025-07-17 08:34:04,853:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 08:34:04,863:INFO:Memory: svmem(total=16844595200, available=1245790208, percent=92.6, used=15598804992, free=1245790208)
2025-07-17 08:34:04,864:INFO:Physical Core: 4
2025-07-17 08:34:04,864:INFO:Logical Core: 8
2025-07-17 08:34:04,864:INFO:Checking libraries
2025-07-17 08:34:04,864:INFO:System:
2025-07-17 08:34:04,864:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 08:34:04,865:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 08:34:04,865:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 08:34:04,865:INFO:PyCaret required dependencies:
2025-07-17 08:34:04,994:INFO:                 pip: 25.1.1
2025-07-17 08:34:04,994:INFO:          setuptools: 65.5.0
2025-07-17 08:34:04,994:INFO:             pycaret: 3.3.2
2025-07-17 08:34:04,994:INFO:             IPython: 9.3.0
2025-07-17 08:34:04,994:INFO:          ipywidgets: 8.1.7
2025-07-17 08:34:04,994:INFO:                tqdm: 4.67.1
2025-07-17 08:34:04,994:INFO:               numpy: 1.26.4
2025-07-17 08:34:04,994:INFO:              pandas: 2.1.4
2025-07-17 08:34:04,994:INFO:              jinja2: 3.1.6
2025-07-17 08:34:04,994:INFO:               scipy: 1.11.4
2025-07-17 08:34:04,995:INFO:              joblib: 1.3.2
2025-07-17 08:34:04,995:INFO:             sklearn: 1.4.2
2025-07-17 08:34:04,995:INFO:                pyod: 2.0.5
2025-07-17 08:34:04,995:INFO:            imblearn: 0.13.0
2025-07-17 08:34:04,995:INFO:   category_encoders: 2.7.0
2025-07-17 08:34:04,995:INFO:            lightgbm: 4.6.0
2025-07-17 08:34:04,995:INFO:               numba: 0.61.2
2025-07-17 08:34:04,995:INFO:            requests: 2.32.4
2025-07-17 08:34:04,995:INFO:          matplotlib: 3.7.5
2025-07-17 08:34:04,995:INFO:          scikitplot: 0.3.7
2025-07-17 08:34:04,995:INFO:         yellowbrick: 1.5
2025-07-17 08:34:04,995:INFO:              plotly: 5.24.1
2025-07-17 08:34:04,995:INFO:    plotly-resampler: Not installed
2025-07-17 08:34:04,995:INFO:             kaleido: 1.0.0
2025-07-17 08:34:04,995:INFO:           schemdraw: 0.15
2025-07-17 08:34:04,996:INFO:         statsmodels: 0.14.4
2025-07-17 08:34:04,996:INFO:              sktime: 0.26.0
2025-07-17 08:34:04,996:INFO:               tbats: 1.1.3
2025-07-17 08:34:04,996:INFO:            pmdarima: 2.0.4
2025-07-17 08:34:04,996:INFO:              psutil: 7.0.0
2025-07-17 08:34:04,996:INFO:          markupsafe: 3.0.2
2025-07-17 08:34:04,996:INFO:             pickle5: Not installed
2025-07-17 08:34:04,996:INFO:         cloudpickle: 3.1.1
2025-07-17 08:34:04,996:INFO:         deprecation: 2.1.0
2025-07-17 08:34:04,996:INFO:              xxhash: 3.5.0
2025-07-17 08:34:04,996:INFO:           wurlitzer: Not installed
2025-07-17 08:34:04,996:INFO:PyCaret optional dependencies:
2025-07-17 08:34:05,023:INFO:                shap: 0.48.0
2025-07-17 08:34:05,023:INFO:           interpret: Not installed
2025-07-17 08:34:05,023:INFO:                umap: Not installed
2025-07-17 08:34:05,023:INFO:     ydata_profiling: Not installed
2025-07-17 08:34:05,024:INFO:  explainerdashboard: Not installed
2025-07-17 08:34:05,024:INFO:             autoviz: Not installed
2025-07-17 08:34:05,024:INFO:           fairlearn: Not installed
2025-07-17 08:34:05,024:INFO:          deepchecks: Not installed
2025-07-17 08:34:05,024:INFO:             xgboost: Not installed
2025-07-17 08:34:05,024:INFO:            catboost: 1.2.8
2025-07-17 08:34:05,024:INFO:              kmodes: Not installed
2025-07-17 08:34:05,024:INFO:             mlxtend: Not installed
2025-07-17 08:34:05,024:INFO:       statsforecast: Not installed
2025-07-17 08:34:05,024:INFO:        tune_sklearn: Not installed
2025-07-17 08:34:05,024:INFO:                 ray: Not installed
2025-07-17 08:34:05,024:INFO:            hyperopt: Not installed
2025-07-17 08:34:05,024:INFO:              optuna: Not installed
2025-07-17 08:34:05,024:INFO:               skopt: Not installed
2025-07-17 08:34:05,024:INFO:              mlflow: Not installed
2025-07-17 08:34:05,024:INFO:              gradio: Not installed
2025-07-17 08:34:05,024:INFO:             fastapi: Not installed
2025-07-17 08:34:05,024:INFO:             uvicorn: Not installed
2025-07-17 08:34:05,024:INFO:              m2cgen: Not installed
2025-07-17 08:34:05,024:INFO:           evidently: Not installed
2025-07-17 08:34:05,024:INFO:               fugue: Not installed
2025-07-17 08:34:05,024:INFO:           streamlit: Not installed
2025-07-17 08:34:05,024:INFO:             prophet: Not installed
2025-07-17 08:34:05,025:INFO:None
2025-07-17 08:34:05,025:INFO:Set up data.
2025-07-17 08:34:05,032:INFO:Set up folding strategy.
2025-07-17 08:34:05,032:INFO:Set up train/test split.
2025-07-17 08:34:05,047:INFO:Set up index.
2025-07-17 08:34:05,048:INFO:Assigning column types.
2025-07-17 08:34:05,051:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 08:34:05,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,141:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,315:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,315:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,315:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 08:34:05,358:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,383:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,421:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 08:34:05,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,446:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,446:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 08:34:05,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,509:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:05,567:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:05,570:INFO:Preparing preprocessing pipeline...
2025-07-17 08:34:05,571:INFO:Set up simple imputation.
2025-07-17 08:34:05,575:INFO:Set up encoding of categorical features.
2025-07-17 08:34:05,575:INFO:Set up imbalanced handling.
2025-07-17 08:34:05,576:INFO:Set up column name cleaning.
2025-07-17 08:34:05,717:INFO:Finished creating preprocessing pipeline.
2025-07-17 08:34:05,725:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 08:34:05,725:INFO:Creating final display dataframe.
2025-07-17 08:34:06,172:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (35035, 6)
4        Transformed data shape        (52445, 6)
5   Transformed train set shape        (41934, 6)
6    Transformed test set shape        (10511, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              f55a
2025-07-17 08:34:06,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:06,280:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:06,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 08:34:06,351:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 08:34:06,353:INFO:setup() successfully completed in 1.69s...............
2025-07-17 08:34:06,353:INFO:Initializing create_model()
2025-07-17 08:34:06,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 08:34:06,353:INFO:Checking exceptions
2025-07-17 08:34:06,356:INFO:Importing libraries
2025-07-17 08:34:06,356:INFO:Copying training dataset
2025-07-17 08:34:06,372:INFO:Defining folds
2025-07-17 08:34:06,372:INFO:Declaring metric variables
2025-07-17 08:34:06,372:INFO:Importing untrained model
2025-07-17 08:34:06,373:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 08:34:06,375:INFO:Starting cross validation
2025-07-17 08:34:06,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 08:34:26,155:INFO:Calculating mean and std
2025-07-17 08:34:26,156:INFO:Creating metrics dataframe
2025-07-17 08:34:26,160:INFO:Finalizing model
2025-07-17 08:34:26,474:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 08:34:26,475:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 08:34:26,477:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001513 seconds.
2025-07-17 08:34:26,477:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 08:34:26,481:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 08:34:26,481:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 08:34:26,482:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 08:34:26,835:INFO:Uploading results into container
2025-07-17 08:34:26,836:INFO:Uploading model into container now
2025-07-17 08:34:26,853:INFO:_master_model_container: 1
2025-07-17 08:34:26,853:INFO:_display_container: 2
2025-07-17 08:34:26,855:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 08:34:26,855:INFO:create_model() successfully completed......................................
2025-07-17 08:34:27,107:INFO:Initializing tune_model()
2025-07-17 08:34:27,107:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=100, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 08:34:27,107:INFO:Checking exceptions
2025-07-17 08:34:27,127:INFO:Copying training dataset
2025-07-17 08:34:27,140:INFO:Checking base model
2025-07-17 08:34:27,141:INFO:Base model : Light Gradient Boosting Machine
2025-07-17 08:34:27,142:INFO:Declaring metric variables
2025-07-17 08:34:27,143:INFO:Defining Hyperparameters
2025-07-17 08:34:27,247:INFO:Tuning with n_jobs=-1
2025-07-17 08:34:27,247:INFO:Initializing RandomizedSearchCV
2025-07-17 08:48:53,653:INFO:best_params: {'actual_estimator__reg_lambda': 0.05, 'actual_estimator__reg_alpha': 0.1, 'actual_estimator__num_leaves': 90, 'actual_estimator__n_estimators': 270, 'actual_estimator__min_split_gain': 0.2, 'actual_estimator__min_child_samples': 56, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__feature_fraction': 0.8, 'actual_estimator__bagging_freq': 2, 'actual_estimator__bagging_fraction': 0.8}
2025-07-17 08:48:53,653:INFO:Hyperparameter search completed
2025-07-17 08:48:53,653:INFO:SubProcess create_model() called ==================================
2025-07-17 08:48:53,661:INFO:Initializing create_model()
2025-07-17 08:48:53,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019B9B83CF50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.05, 'reg_alpha': 0.1, 'num_leaves': 90, 'n_estimators': 270, 'min_split_gain': 0.2, 'min_child_samples': 56, 'learning_rate': 0.2, 'feature_fraction': 0.8, 'bagging_freq': 2, 'bagging_fraction': 0.8})
2025-07-17 08:48:53,661:INFO:Checking exceptions
2025-07-17 08:48:53,661:INFO:Importing libraries
2025-07-17 08:48:53,661:INFO:Copying training dataset
2025-07-17 08:48:53,689:INFO:Defining folds
2025-07-17 08:48:53,689:INFO:Declaring metric variables
2025-07-17 08:48:53,690:INFO:Importing untrained model
2025-07-17 08:48:53,690:INFO:Declaring custom model
2025-07-17 08:48:53,692:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 08:48:53,692:INFO:Starting cross validation
2025-07-17 08:48:53,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 08:49:20,021:INFO:Calculating mean and std
2025-07-17 08:49:20,023:INFO:Creating metrics dataframe
2025-07-17 08:49:20,027:INFO:Finalizing model
2025-07-17 08:49:20,282:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:20,282:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:20,282:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:20,310:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 08:49:20,310:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:20,310:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:20,310:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:20,310:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 08:49:20,310:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001123 seconds.
2025-07-17 08:49:20,310:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 08:49:20,310:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 08:49:20,310:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 08:49:20,315:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 08:49:21,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:21,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:21,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,457:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-07-17 08:49:22,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,576:INFO:[LightGBM] [Warning] Stopped training because there are no more leaves that meet the split requirements
2025-07-17 08:49:22,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:22,849:INFO:Uploading results into container
2025-07-17 08:49:22,850:INFO:Uploading model into container now
2025-07-17 08:49:22,851:INFO:_master_model_container: 2
2025-07-17 08:49:22,851:INFO:_display_container: 3
2025-07-17 08:49:22,852:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 08:49:22,852:INFO:create_model() successfully completed......................................
2025-07-17 08:49:22,979:INFO:SubProcess create_model() end ==================================
2025-07-17 08:49:22,979:INFO:choose_better activated
2025-07-17 08:49:22,979:INFO:SubProcess create_model() called ==================================
2025-07-17 08:49:22,995:INFO:Initializing create_model()
2025-07-17 08:49:22,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 08:49:22,996:INFO:Checking exceptions
2025-07-17 08:49:22,998:INFO:Importing libraries
2025-07-17 08:49:22,998:INFO:Copying training dataset
2025-07-17 08:49:23,015:INFO:Defining folds
2025-07-17 08:49:23,015:INFO:Declaring metric variables
2025-07-17 08:49:23,015:INFO:Importing untrained model
2025-07-17 08:49:23,015:INFO:Declaring custom model
2025-07-17 08:49:23,017:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 08:49:23,017:INFO:Starting cross validation
2025-07-17 08:49:23,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 08:49:26,243:INFO:Calculating mean and std
2025-07-17 08:49:26,244:INFO:Creating metrics dataframe
2025-07-17 08:49:26,246:INFO:Finalizing model
2025-07-17 08:49:26,603:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 08:49:26,605:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 08:49:26,611:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.004157 seconds.
2025-07-17 08:49:26,611:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 08:49:26,611:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 08:49:26,611:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 08:49:26,612:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 08:49:27,113:INFO:Uploading results into container
2025-07-17 08:49:27,114:INFO:Uploading model into container now
2025-07-17 08:49:27,115:INFO:_master_model_container: 3
2025-07-17 08:49:27,115:INFO:_display_container: 4
2025-07-17 08:49:27,116:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 08:49:27,116:INFO:create_model() successfully completed......................................
2025-07-17 08:49:27,226:INFO:SubProcess create_model() end ==================================
2025-07-17 08:49:27,230:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5138
2025-07-17 08:49:27,233:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.613
2025-07-17 08:49:27,235:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-17 08:49:27,235:INFO:choose_better completed
2025-07-17 08:49:27,263:INFO:_master_model_container: 3
2025-07-17 08:49:27,263:INFO:_display_container: 3
2025-07-17 08:49:27,264:INFO:LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 08:49:27,265:INFO:tune_model() successfully completed......................................
2025-07-17 08:49:27,404:INFO:Initializing plot_model()
2025-07-17 08:49:27,404:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 08:49:27,404:INFO:Checking exceptions
2025-07-17 08:49:27,414:INFO:Preloading libraries
2025-07-17 08:49:27,538:INFO:Copying training dataset
2025-07-17 08:49:27,540:INFO:Plot type: feature
2025-07-17 08:49:27,542:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 08:49:28,470:INFO:Saving 'Feature Importance.png'
2025-07-17 08:49:28,737:INFO:Visual Rendered Successfully
2025-07-17 08:49:28,870:INFO:plot_model() successfully completed......................................
2025-07-17 08:49:28,875:INFO:Initializing plot_model()
2025-07-17 08:49:28,876:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 08:49:28,876:INFO:Checking exceptions
2025-07-17 08:49:28,885:INFO:Preloading libraries
2025-07-17 08:49:29,002:INFO:Copying training dataset
2025-07-17 08:49:29,002:INFO:Plot type: confusion_matrix
2025-07-17 08:49:29,549:INFO:Fitting Model
2025-07-17 08:49:29,550:INFO:Scoring test/hold-out set
2025-07-17 08:49:29,551:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:29,551:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:29,552:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:29,616:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:29,617:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:29,617:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:29,722:INFO:Saving 'Confusion Matrix.png'
2025-07-17 08:49:29,896:INFO:Visual Rendered Successfully
2025-07-17 08:49:30,025:INFO:plot_model() successfully completed......................................
2025-07-17 08:49:30,027:INFO:Initializing finalize_model()
2025-07-17 08:49:30,027:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 08:49:30,029:INFO:Finalizing LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 08:49:30,039:INFO:Initializing create_model()
2025-07-17 08:49:30,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019B9AADC050>, estimator=LGBMClassifier(bagging_fraction=0.8, bagging_freq=2, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.8,
               importance_type='split', learning_rate=0.2, max_depth=-1,
               min_child_samples=56, min_child_weight=0.001, min_split_gain=0.2,
               n_estimators=270, n_jobs=-1, num_leaves=90, objective=None,
               random_state=109, reg_alpha=0.1, reg_lambda=0.05, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 08:49:30,039:INFO:Checking exceptions
2025-07-17 08:49:30,040:INFO:Importing libraries
2025-07-17 08:49:30,040:INFO:Copying training dataset
2025-07-17 08:49:30,041:INFO:Defining folds
2025-07-17 08:49:30,041:INFO:Declaring metric variables
2025-07-17 08:49:30,041:INFO:Importing untrained model
2025-07-17 08:49:30,041:INFO:Declaring custom model
2025-07-17 08:49:30,043:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 08:49:30,044:INFO:Cross validation set to False
2025-07-17 08:49:30,045:INFO:Fitting Model
2025-07-17 08:49:30,422:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:30,422:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:30,423:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:30,460:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 08:49:30,460:INFO:[LightGBM] [Warning] feature_fraction is set=0.8, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.8
2025-07-17 08:49:30,461:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2025-07-17 08:49:30,461:INFO:[LightGBM] [Warning] bagging_freq is set=2, subsample_freq=0 will be ignored. Current value: bagging_freq=2
2025-07-17 08:49:30,461:INFO:[LightGBM] [Info] Number of positive: 29953, number of negative: 29953
2025-07-17 08:49:30,464:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002499 seconds.
2025-07-17 08:49:30,464:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 08:49:30,464:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 08:49:30,465:INFO:[LightGBM] [Info] Number of data points in the train set: 59906, number of used features: 5
2025-07-17 08:49:30,465:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 08:49:33,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 08:49:34,415:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.8,
                                importance_type='split', learning_rate=0.2,
                                max_depth=-1, min_child_samples=56,
                                min_child_weight=0.001, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                objective=None, random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 08:49:34,415:INFO:create_model() successfully completed......................................
2025-07-17 08:49:34,520:INFO:_master_model_container: 3
2025-07-17 08:49:34,520:INFO:_display_container: 3
2025-07-17 08:49:34,542:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.8,
                                importance_type='split', learning_rate=0.2,
                                max_depth=-1, min_child_samples=56,
                                min_child_weight=0.001, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                objective=None, random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 08:49:34,542:INFO:finalize_model() successfully completed......................................
2025-07-17 08:49:34,699:INFO:Initializing save_model()
2025-07-17 08:49:34,699:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.8,
                                importance_type='split', learning_rate=0.2,
                                max_depth=-1, min_child_samples=56,
                                min_child_weight=0.001, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                objective=None, random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 08:49:34,700:INFO:Adding model into prep_pipe
2025-07-17 08:49:34,700:WARNING:Only Model saved as it was a pipeline.
2025-07-17 08:49:39,080:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm.pkl saved in current working directory
2025-07-17 08:49:39,097:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.8,
                                importance_type='split', learning_rate=0.2,
                                max_depth=-1, min_child_samples=56,
                                min_child_weight=0.001, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                objective=None, random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 08:49:39,098:INFO:save_model() successfully completed......................................
2025-07-17 08:56:28,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:56:28,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:56:28,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:56:28,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 08:57:15,845:INFO:Initializing load_model()
2025-07-17 08:57:15,845:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-17 08:57:23,851:INFO:Initializing predict_model()
2025-07-17 08:57:23,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002711B23FB90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002711A779F80>)
2025-07-17 08:57:23,851:INFO:Checking exceptions
2025-07-17 08:57:23,851:INFO:Preloading libraries
2025-07-17 08:57:23,851:INFO:Set up data.
2025-07-17 08:57:23,864:INFO:Set up index.
2025-07-17 09:03:25,859:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:03:25,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:03:25,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:03:25,861:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:04:44,064:INFO:Initializing load_model()
2025-07-17 09:04:44,065:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, platform=None, authentication=None, verbose=True)
2025-07-17 09:04:59,382:INFO:Initializing predict_model()
2025-07-17 09:04:59,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FD7936FFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000001FD77C96150>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD77BA94E0>)
2025-07-17 09:04:59,389:INFO:Checking exceptions
2025-07-17 09:04:59,389:INFO:Preloading libraries
2025-07-17 09:04:59,389:INFO:Set up data.
2025-07-17 09:04:59,415:INFO:Set up index.
2025-07-17 09:33:08,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:33:08,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:33:08,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:33:08,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:34:04,792:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 09:37:07,435:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:37:07,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:37:07,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:37:07,436:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 09:37:46,554:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 09:38:21,366:INFO:PyCaret ClassificationExperiment
2025-07-17 09:38:21,366:INFO:Logging name: clf-default-name
2025-07-17 09:38:21,367:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 09:38:21,367:INFO:version 3.3.2
2025-07-17 09:38:21,367:INFO:Initializing setup()
2025-07-17 09:38:21,367:INFO:self.USI: 4b90
2025-07-17 09:38:21,368:INFO:self._variable_keys: {'fold_groups_param', 'memory', 'seed', 'target_param', 'y_train', 'exp_name_log', 'idx', 'html_param', 'fold_generator', 'fix_imbalance', 'data', '_available_plots', 'pipeline', 'gpu_param', 'exp_id', 'y_test', 'n_jobs_param', 'X', 'is_multiclass', 'fold_shuffle_param', 'log_plots_param', '_ml_usecase', 'USI', 'X_test', 'logging_param', 'y', 'X_train', 'gpu_n_jobs_param'}
2025-07-17 09:38:21,369:INFO:Checking environment
2025-07-17 09:38:21,369:INFO:python_version: 3.11.9
2025-07-17 09:38:21,369:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 09:38:21,369:INFO:machine: AMD64
2025-07-17 09:38:21,399:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 09:38:21,402:INFO:Memory: svmem(total=16844595200, available=2312105984, percent=86.3, used=14532489216, free=2312105984)
2025-07-17 09:38:21,404:INFO:Physical Core: 4
2025-07-17 09:38:21,404:INFO:Logical Core: 8
2025-07-17 09:38:21,404:INFO:Checking libraries
2025-07-17 09:38:21,404:INFO:System:
2025-07-17 09:38:21,404:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 09:38:21,404:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 09:38:21,404:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 09:38:21,404:INFO:PyCaret required dependencies:
2025-07-17 09:38:21,504:INFO:                 pip: 25.1.1
2025-07-17 09:38:21,504:INFO:          setuptools: 65.5.0
2025-07-17 09:38:21,504:INFO:             pycaret: 3.3.2
2025-07-17 09:38:21,504:INFO:             IPython: 9.3.0
2025-07-17 09:38:21,504:INFO:          ipywidgets: 8.1.7
2025-07-17 09:38:21,504:INFO:                tqdm: 4.67.1
2025-07-17 09:38:21,504:INFO:               numpy: 1.26.4
2025-07-17 09:38:21,504:INFO:              pandas: 2.1.4
2025-07-17 09:38:21,504:INFO:              jinja2: 3.1.6
2025-07-17 09:38:21,504:INFO:               scipy: 1.11.4
2025-07-17 09:38:21,504:INFO:              joblib: 1.3.2
2025-07-17 09:38:21,504:INFO:             sklearn: 1.4.2
2025-07-17 09:38:21,504:INFO:                pyod: 2.0.5
2025-07-17 09:38:21,504:INFO:            imblearn: 0.13.0
2025-07-17 09:38:21,504:INFO:   category_encoders: 2.7.0
2025-07-17 09:38:21,505:INFO:            lightgbm: 4.6.0
2025-07-17 09:38:21,505:INFO:               numba: 0.61.2
2025-07-17 09:38:21,505:INFO:            requests: 2.32.4
2025-07-17 09:38:21,505:INFO:          matplotlib: 3.7.5
2025-07-17 09:38:21,505:INFO:          scikitplot: 0.3.7
2025-07-17 09:38:21,505:INFO:         yellowbrick: 1.5
2025-07-17 09:38:21,505:INFO:              plotly: 5.24.1
2025-07-17 09:38:21,505:INFO:    plotly-resampler: Not installed
2025-07-17 09:38:21,505:INFO:             kaleido: 1.0.0
2025-07-17 09:38:21,505:INFO:           schemdraw: 0.15
2025-07-17 09:38:21,505:INFO:         statsmodels: 0.14.4
2025-07-17 09:38:21,505:INFO:              sktime: 0.26.0
2025-07-17 09:38:21,505:INFO:               tbats: 1.1.3
2025-07-17 09:38:21,505:INFO:            pmdarima: 2.0.4
2025-07-17 09:38:21,505:INFO:              psutil: 7.0.0
2025-07-17 09:38:21,505:INFO:          markupsafe: 3.0.2
2025-07-17 09:38:21,505:INFO:             pickle5: Not installed
2025-07-17 09:38:21,505:INFO:         cloudpickle: 3.1.1
2025-07-17 09:38:21,505:INFO:         deprecation: 2.1.0
2025-07-17 09:38:21,505:INFO:              xxhash: 3.5.0
2025-07-17 09:38:21,505:INFO:           wurlitzer: Not installed
2025-07-17 09:38:21,505:INFO:PyCaret optional dependencies:
2025-07-17 09:38:21,517:INFO:                shap: 0.48.0
2025-07-17 09:38:21,517:INFO:           interpret: Not installed
2025-07-17 09:38:21,517:INFO:                umap: Not installed
2025-07-17 09:38:21,517:INFO:     ydata_profiling: Not installed
2025-07-17 09:38:21,518:INFO:  explainerdashboard: Not installed
2025-07-17 09:38:21,518:INFO:             autoviz: Not installed
2025-07-17 09:38:21,518:INFO:           fairlearn: Not installed
2025-07-17 09:38:21,518:INFO:          deepchecks: Not installed
2025-07-17 09:38:21,518:INFO:             xgboost: Not installed
2025-07-17 09:38:21,518:INFO:            catboost: 1.2.8
2025-07-17 09:38:21,518:INFO:              kmodes: Not installed
2025-07-17 09:38:21,518:INFO:             mlxtend: Not installed
2025-07-17 09:38:21,518:INFO:       statsforecast: Not installed
2025-07-17 09:38:21,518:INFO:        tune_sklearn: Not installed
2025-07-17 09:38:21,518:INFO:                 ray: Not installed
2025-07-17 09:38:21,518:INFO:            hyperopt: Not installed
2025-07-17 09:38:21,518:INFO:              optuna: Not installed
2025-07-17 09:38:21,518:INFO:               skopt: Not installed
2025-07-17 09:38:21,518:INFO:              mlflow: Not installed
2025-07-17 09:38:21,518:INFO:              gradio: Not installed
2025-07-17 09:38:21,518:INFO:             fastapi: Not installed
2025-07-17 09:38:21,518:INFO:             uvicorn: Not installed
2025-07-17 09:38:21,518:INFO:              m2cgen: Not installed
2025-07-17 09:38:21,518:INFO:           evidently: Not installed
2025-07-17 09:38:21,518:INFO:               fugue: Not installed
2025-07-17 09:38:21,518:INFO:           streamlit: Not installed
2025-07-17 09:38:21,518:INFO:             prophet: Not installed
2025-07-17 09:38:21,518:INFO:None
2025-07-17 09:38:21,518:INFO:Set up data.
2025-07-17 09:38:21,532:INFO:Set up folding strategy.
2025-07-17 09:38:21,532:INFO:Set up train/test split.
2025-07-17 09:38:21,570:INFO:Set up index.
2025-07-17 09:38:21,575:INFO:Assigning column types.
2025-07-17 09:38:21,588:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 09:38:21,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,629:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:21,663:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:21,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,794:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:21,820:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:21,821:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 09:38:21,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:21,881:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:21,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 09:38:21,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:21,967:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:21,968:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 09:38:22,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:22,045:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:22,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:22,121:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:22,124:INFO:Preparing preprocessing pipeline...
2025-07-17 09:38:22,129:INFO:Set up simple imputation.
2025-07-17 09:38:22,144:INFO:Set up encoding of categorical features.
2025-07-17 09:38:22,145:INFO:Set up imbalanced handling.
2025-07-17 09:38:22,146:INFO:Set up column name cleaning.
2025-07-17 09:38:22,555:INFO:Finished creating preprocessing pipeline.
2025-07-17 09:38:22,564:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 09:38:22,564:INFO:Creating final display dataframe.
2025-07-17 09:38:22,865:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4b90
2025-07-17 09:38:22,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:22,972:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:23,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 09:38:23,056:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 09:38:23,058:INFO:setup() successfully completed in 1.8s...............
2025-07-17 09:38:23,059:INFO:Initializing create_model()
2025-07-17 09:38:23,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000183BCC82F10>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 09:38:23,059:INFO:Checking exceptions
2025-07-17 09:38:23,061:INFO:Importing libraries
2025-07-17 09:38:23,063:INFO:Copying training dataset
2025-07-17 09:38:23,121:INFO:Defining folds
2025-07-17 09:38:23,122:INFO:Declaring metric variables
2025-07-17 09:38:23,122:INFO:Importing untrained model
2025-07-17 09:38:23,123:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 09:38:23,123:INFO:Starting cross validation
2025-07-17 09:38:23,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 09:38:56,068:INFO:Calculating mean and std
2025-07-17 09:38:56,071:INFO:Creating metrics dataframe
2025-07-17 09:38:56,075:INFO:Finalizing model
2025-07-17 09:38:58,250:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 09:38:58,251:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 09:38:58,287:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.015629 seconds.
2025-07-17 09:38:58,288:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 09:38:58,288:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 09:38:58,292:INFO:[LightGBM] [Info] Total Bins 5878
2025-07-17 09:38:58,293:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 24
2025-07-17 09:38:58,295:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 09:38:59,319:INFO:Uploading results into container
2025-07-17 09:38:59,321:INFO:Uploading model into container now
2025-07-17 09:38:59,336:INFO:_master_model_container: 1
2025-07-17 09:38:59,337:INFO:_display_container: 2
2025-07-17 09:38:59,339:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 09:38:59,340:INFO:create_model() successfully completed......................................
2025-07-17 09:38:59,764:INFO:Initializing tune_model()
2025-07-17 09:38:59,765:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000183BCC82F10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=100, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 09:38:59,766:INFO:Checking exceptions
2025-07-17 09:38:59,786:INFO:Copying training dataset
2025-07-17 09:38:59,809:INFO:Checking base model
2025-07-17 09:38:59,810:INFO:Base model : Light Gradient Boosting Machine
2025-07-17 09:38:59,810:INFO:Declaring metric variables
2025-07-17 09:38:59,810:INFO:Defining Hyperparameters
2025-07-17 09:38:59,887:INFO:Tuning with n_jobs=-1
2025-07-17 09:38:59,888:INFO:Initializing RandomizedSearchCV
2025-07-17 10:42:03,234:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 10:42:03,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 10:42:03,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 10:42:03,239:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 10:43:44,655:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 10:45:04,544:INFO:PyCaret ClassificationExperiment
2025-07-17 10:45:04,544:INFO:Logging name: clf-default-name
2025-07-17 10:45:04,545:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 10:45:04,546:INFO:version 3.3.2
2025-07-17 10:45:04,546:INFO:Initializing setup()
2025-07-17 10:45:04,547:INFO:self.USI: 8c6a
2025-07-17 10:45:04,548:INFO:self._variable_keys: {'X', 'fix_imbalance', 'exp_id', 'n_jobs_param', 'y_test', 'fold_groups_param', 'data', 'memory', 'gpu_param', 'USI', 'log_plots_param', 'target_param', 'gpu_n_jobs_param', 'y', 'idx', 'logging_param', 'is_multiclass', 'seed', 'fold_generator', 'exp_name_log', 'pipeline', '_ml_usecase', '_available_plots', 'X_test', 'fold_shuffle_param', 'y_train', 'html_param', 'X_train'}
2025-07-17 10:45:04,548:INFO:Checking environment
2025-07-17 10:45:04,549:INFO:python_version: 3.11.9
2025-07-17 10:45:04,549:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 10:45:04,550:INFO:machine: AMD64
2025-07-17 10:45:04,585:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 10:45:04,590:INFO:Memory: svmem(total=16844595200, available=2444058624, percent=85.5, used=14400536576, free=2444058624)
2025-07-17 10:45:04,590:INFO:Physical Core: 4
2025-07-17 10:45:04,591:INFO:Logical Core: 8
2025-07-17 10:45:04,591:INFO:Checking libraries
2025-07-17 10:45:04,591:INFO:System:
2025-07-17 10:45:04,592:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 10:45:04,592:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 10:45:04,592:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 10:45:04,592:INFO:PyCaret required dependencies:
2025-07-17 10:45:04,745:INFO:                 pip: 25.1.1
2025-07-17 10:45:04,745:INFO:          setuptools: 65.5.0
2025-07-17 10:45:04,746:INFO:             pycaret: 3.3.2
2025-07-17 10:45:04,746:INFO:             IPython: 9.3.0
2025-07-17 10:45:04,747:INFO:          ipywidgets: 8.1.7
2025-07-17 10:45:04,747:INFO:                tqdm: 4.67.1
2025-07-17 10:45:04,747:INFO:               numpy: 1.26.4
2025-07-17 10:45:04,748:INFO:              pandas: 2.1.4
2025-07-17 10:45:04,748:INFO:              jinja2: 3.1.6
2025-07-17 10:45:04,748:INFO:               scipy: 1.11.4
2025-07-17 10:45:04,748:INFO:              joblib: 1.3.2
2025-07-17 10:45:04,748:INFO:             sklearn: 1.4.2
2025-07-17 10:45:04,749:INFO:                pyod: 2.0.5
2025-07-17 10:45:04,750:INFO:            imblearn: 0.13.0
2025-07-17 10:45:04,750:INFO:   category_encoders: 2.7.0
2025-07-17 10:45:04,750:INFO:            lightgbm: 4.6.0
2025-07-17 10:45:04,750:INFO:               numba: 0.61.2
2025-07-17 10:45:04,750:INFO:            requests: 2.32.4
2025-07-17 10:45:04,750:INFO:          matplotlib: 3.7.5
2025-07-17 10:45:04,751:INFO:          scikitplot: 0.3.7
2025-07-17 10:45:04,751:INFO:         yellowbrick: 1.5
2025-07-17 10:45:04,751:INFO:              plotly: 5.24.1
2025-07-17 10:45:04,751:INFO:    plotly-resampler: Not installed
2025-07-17 10:45:04,751:INFO:             kaleido: 1.0.0
2025-07-17 10:45:04,751:INFO:           schemdraw: 0.15
2025-07-17 10:45:04,751:INFO:         statsmodels: 0.14.4
2025-07-17 10:45:04,751:INFO:              sktime: 0.26.0
2025-07-17 10:45:04,751:INFO:               tbats: 1.1.3
2025-07-17 10:45:04,751:INFO:            pmdarima: 2.0.4
2025-07-17 10:45:04,751:INFO:              psutil: 7.0.0
2025-07-17 10:45:04,751:INFO:          markupsafe: 3.0.2
2025-07-17 10:45:04,751:INFO:             pickle5: Not installed
2025-07-17 10:45:04,751:INFO:         cloudpickle: 3.1.1
2025-07-17 10:45:04,751:INFO:         deprecation: 2.1.0
2025-07-17 10:45:04,751:INFO:              xxhash: 3.5.0
2025-07-17 10:45:04,751:INFO:           wurlitzer: Not installed
2025-07-17 10:45:04,752:INFO:PyCaret optional dependencies:
2025-07-17 10:45:04,776:INFO:                shap: 0.48.0
2025-07-17 10:45:04,776:INFO:           interpret: Not installed
2025-07-17 10:45:04,776:INFO:                umap: Not installed
2025-07-17 10:45:04,776:INFO:     ydata_profiling: Not installed
2025-07-17 10:45:04,776:INFO:  explainerdashboard: Not installed
2025-07-17 10:45:04,776:INFO:             autoviz: Not installed
2025-07-17 10:45:04,776:INFO:           fairlearn: Not installed
2025-07-17 10:45:04,777:INFO:          deepchecks: Not installed
2025-07-17 10:45:04,777:INFO:             xgboost: Not installed
2025-07-17 10:45:04,777:INFO:            catboost: 1.2.8
2025-07-17 10:45:04,777:INFO:              kmodes: Not installed
2025-07-17 10:45:04,777:INFO:             mlxtend: Not installed
2025-07-17 10:45:04,777:INFO:       statsforecast: Not installed
2025-07-17 10:45:04,777:INFO:        tune_sklearn: Not installed
2025-07-17 10:45:04,777:INFO:                 ray: Not installed
2025-07-17 10:45:04,777:INFO:            hyperopt: Not installed
2025-07-17 10:45:04,777:INFO:              optuna: Not installed
2025-07-17 10:45:04,778:INFO:               skopt: Not installed
2025-07-17 10:45:04,778:INFO:              mlflow: Not installed
2025-07-17 10:45:04,778:INFO:              gradio: Not installed
2025-07-17 10:45:04,778:INFO:             fastapi: Not installed
2025-07-17 10:45:04,778:INFO:             uvicorn: Not installed
2025-07-17 10:45:04,778:INFO:              m2cgen: Not installed
2025-07-17 10:45:04,778:INFO:           evidently: Not installed
2025-07-17 10:45:04,778:INFO:               fugue: Not installed
2025-07-17 10:45:04,778:INFO:           streamlit: Not installed
2025-07-17 10:45:04,778:INFO:             prophet: Not installed
2025-07-17 10:45:04,779:INFO:None
2025-07-17 10:45:04,779:INFO:Set up data.
2025-07-17 10:45:04,811:INFO:Set up folding strategy.
2025-07-17 10:45:04,811:INFO:Set up train/test split.
2025-07-17 10:45:04,874:INFO:Set up index.
2025-07-17 10:45:04,878:INFO:Assigning column types.
2025-07-17 10:45:04,898:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 10:45:04,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 10:45:04,964:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 10:45:05,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,013:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,200:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 10:45:05,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 10:45:05,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,244:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,245:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 10:45:05,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 10:45:05,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,384:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 10:45:05,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,513:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,515:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 10:45:05,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,668:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:05,793:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:05,796:INFO:Preparing preprocessing pipeline...
2025-07-17 10:45:05,803:INFO:Set up simple imputation.
2025-07-17 10:45:05,824:INFO:Set up encoding of categorical features.
2025-07-17 10:45:05,825:INFO:Set up imbalanced handling.
2025-07-17 10:45:05,829:INFO:Set up column name cleaning.
2025-07-17 10:45:06,551:INFO:Finished creating preprocessing pipeline.
2025-07-17 10:45:06,566:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 10:45:06,566:INFO:Creating final display dataframe.
2025-07-17 10:45:07,054:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 8)
4        Transformed data shape      (227757, 25)
5   Transformed train set shape      (181070, 25)
6    Transformed test set shape       (46687, 25)
7              Numeric features                 3
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              8c6a
2025-07-17 10:45:07,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:07,249:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:07,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 10:45:07,412:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 10:45:07,414:INFO:setup() successfully completed in 3.05s...............
2025-07-17 10:45:07,415:INFO:Initializing create_model()
2025-07-17 10:45:07,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 10:45:07,416:INFO:Checking exceptions
2025-07-17 10:45:07,420:INFO:Importing libraries
2025-07-17 10:45:07,420:INFO:Copying training dataset
2025-07-17 10:45:07,527:INFO:Defining folds
2025-07-17 10:45:07,527:INFO:Declaring metric variables
2025-07-17 10:45:07,527:INFO:Importing untrained model
2025-07-17 10:45:07,528:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 10:45:07,529:INFO:Starting cross validation
2025-07-17 10:45:07,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 10:45:42,981:INFO:Calculating mean and std
2025-07-17 10:45:42,985:INFO:Creating metrics dataframe
2025-07-17 10:45:42,990:INFO:Finalizing model
2025-07-17 10:45:45,798:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 10:45:45,800:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 10:45:45,845:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.018180 seconds.
2025-07-17 10:45:45,846:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 10:45:45,847:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 10:45:45,850:INFO:[LightGBM] [Info] Total Bins 5878
2025-07-17 10:45:45,851:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 24
2025-07-17 10:45:45,853:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 10:45:46,909:INFO:Uploading results into container
2025-07-17 10:45:46,909:INFO:Uploading model into container now
2025-07-17 10:45:46,929:INFO:_master_model_container: 1
2025-07-17 10:45:46,929:INFO:_display_container: 2
2025-07-17 10:45:46,931:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 10:45:46,931:INFO:create_model() successfully completed......................................
2025-07-17 10:45:47,507:INFO:Initializing tune_model()
2025-07-17 10:45:47,507:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 10:45:47,507:INFO:Checking exceptions
2025-07-17 10:45:47,536:INFO:Copying training dataset
2025-07-17 10:45:47,580:INFO:Checking base model
2025-07-17 10:45:47,581:INFO:Base model : Light Gradient Boosting Machine
2025-07-17 10:45:47,582:INFO:Declaring metric variables
2025-07-17 10:45:47,582:INFO:Defining Hyperparameters
2025-07-17 10:45:47,672:INFO:Tuning with n_jobs=-1
2025-07-17 10:45:47,673:INFO:Initializing RandomizedSearchCV
2025-07-17 10:54:05,340:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-17 10:54:05,342:INFO:Hyperparameter search completed
2025-07-17 10:54:05,343:INFO:SubProcess create_model() called ==================================
2025-07-17 10:54:05,346:INFO:Initializing create_model()
2025-07-17 10:54:05,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002BF0B198750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-17 10:54:05,348:INFO:Checking exceptions
2025-07-17 10:54:05,348:INFO:Importing libraries
2025-07-17 10:54:05,348:INFO:Copying training dataset
2025-07-17 10:54:05,437:INFO:Defining folds
2025-07-17 10:54:05,437:INFO:Declaring metric variables
2025-07-17 10:54:05,437:INFO:Importing untrained model
2025-07-17 10:54:05,437:INFO:Declaring custom model
2025-07-17 10:54:05,439:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 10:54:05,440:INFO:Starting cross validation
2025-07-17 10:54:05,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 10:55:38,936:INFO:Calculating mean and std
2025-07-17 10:55:38,938:INFO:Creating metrics dataframe
2025-07-17 10:55:38,941:INFO:Finalizing model
2025-07-17 10:55:41,603:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:55:41,603:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:55:41,603:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:55:41,866:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 10:55:41,867:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:55:41,867:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:55:41,867:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:55:41,868:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 10:55:41,916:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.029317 seconds.
2025-07-17 10:55:41,916:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 10:55:41,917:INFO:[LightGBM] [Info] Total Bins 5878
2025-07-17 10:55:41,921:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 24
2025-07-17 10:55:41,924:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 10:55:52,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:53,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:54,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:54,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 10:55:54,397:INFO:Uploading results into container
2025-07-17 10:55:54,398:INFO:Uploading model into container now
2025-07-17 10:55:54,398:INFO:_master_model_container: 2
2025-07-17 10:55:54,398:INFO:_display_container: 3
2025-07-17 10:55:54,400:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 10:55:54,400:INFO:create_model() successfully completed......................................
2025-07-17 10:55:54,546:INFO:SubProcess create_model() end ==================================
2025-07-17 10:55:54,546:INFO:choose_better activated
2025-07-17 10:55:54,547:INFO:SubProcess create_model() called ==================================
2025-07-17 10:55:54,548:INFO:Initializing create_model()
2025-07-17 10:55:54,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 10:55:54,548:INFO:Checking exceptions
2025-07-17 10:55:54,549:INFO:Importing libraries
2025-07-17 10:55:54,549:INFO:Copying training dataset
2025-07-17 10:55:54,613:INFO:Defining folds
2025-07-17 10:55:54,613:INFO:Declaring metric variables
2025-07-17 10:55:54,613:INFO:Importing untrained model
2025-07-17 10:55:54,614:INFO:Declaring custom model
2025-07-17 10:55:54,615:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 10:55:54,615:INFO:Starting cross validation
2025-07-17 10:55:54,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 10:56:18,945:INFO:Calculating mean and std
2025-07-17 10:56:18,947:INFO:Creating metrics dataframe
2025-07-17 10:56:18,950:INFO:Finalizing model
2025-07-17 10:56:21,145:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 10:56:21,147:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 10:56:21,197:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.021449 seconds.
2025-07-17 10:56:21,198:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 10:56:21,198:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 10:56:21,198:INFO:[LightGBM] [Info] Total Bins 5878
2025-07-17 10:56:21,199:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 24
2025-07-17 10:56:21,201:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 10:56:22,338:INFO:Uploading results into container
2025-07-17 10:56:22,339:INFO:Uploading model into container now
2025-07-17 10:56:22,340:INFO:_master_model_container: 3
2025-07-17 10:56:22,340:INFO:_display_container: 4
2025-07-17 10:56:22,341:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 10:56:22,341:INFO:create_model() successfully completed......................................
2025-07-17 10:56:22,448:INFO:SubProcess create_model() end ==================================
2025-07-17 10:56:22,450:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5693
2025-07-17 10:56:22,451:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.675
2025-07-17 10:56:22,452:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-17 10:56:22,452:INFO:choose_better completed
2025-07-17 10:56:22,465:INFO:_master_model_container: 3
2025-07-17 10:56:22,465:INFO:_display_container: 3
2025-07-17 10:56:22,466:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 10:56:22,466:INFO:tune_model() successfully completed......................................
2025-07-17 10:56:22,584:INFO:Initializing plot_model()
2025-07-17 10:56:22,584:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 10:56:22,584:INFO:Checking exceptions
2025-07-17 10:56:22,609:INFO:Preloading libraries
2025-07-17 10:56:22,887:INFO:Copying training dataset
2025-07-17 10:56:22,888:INFO:Plot type: feature
2025-07-17 10:56:22,889:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 10:56:23,483:INFO:Saving 'Feature Importance.png'
2025-07-17 10:56:23,656:INFO:Visual Rendered Successfully
2025-07-17 10:56:23,744:INFO:plot_model() successfully completed......................................
2025-07-17 10:56:23,745:INFO:Initializing plot_model()
2025-07-17 10:56:23,746:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 10:56:23,746:INFO:Checking exceptions
2025-07-17 10:56:23,759:INFO:Preloading libraries
2025-07-17 10:56:23,938:INFO:Copying training dataset
2025-07-17 10:56:23,938:INFO:Plot type: confusion_matrix
2025-07-17 10:56:24,455:INFO:Fitting Model
2025-07-17 10:56:24,459:INFO:Scoring test/hold-out set
2025-07-17 10:56:24,460:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:56:24,461:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:56:24,461:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:56:24,907:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:56:24,908:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:56:24,908:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:56:25,562:INFO:Saving 'Confusion Matrix.png'
2025-07-17 10:56:25,736:INFO:Visual Rendered Successfully
2025-07-17 10:56:25,890:INFO:plot_model() successfully completed......................................
2025-07-17 10:56:25,892:INFO:Initializing finalize_model()
2025-07-17 10:56:25,892:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 10:56:25,894:INFO:Finalizing LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 10:56:25,910:INFO:Initializing create_model()
2025-07-17 10:56:25,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002BF76C6DBD0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 10:56:25,911:INFO:Checking exceptions
2025-07-17 10:56:25,915:INFO:Importing libraries
2025-07-17 10:56:25,915:INFO:Copying training dataset
2025-07-17 10:56:25,920:INFO:Defining folds
2025-07-17 10:56:25,920:INFO:Declaring metric variables
2025-07-17 10:56:25,922:INFO:Importing untrained model
2025-07-17 10:56:25,922:INFO:Declaring custom model
2025-07-17 10:56:25,924:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 10:56:25,928:INFO:Cross validation set to False
2025-07-17 10:56:25,928:INFO:Fitting Model
2025-07-17 10:56:29,198:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:56:29,198:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:56:29,198:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:56:29,441:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 10:56:29,442:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 10:56:29,442:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 10:56:29,442:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 10:56:29,443:INFO:[LightGBM] [Info] Number of positive: 129336, number of negative: 129336
2025-07-17 10:56:29,498:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.036375 seconds.
2025-07-17 10:56:29,499:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 10:56:29,499:INFO:[LightGBM] [Info] Total Bins 5881
2025-07-17 10:56:29,501:INFO:[LightGBM] [Info] Number of data points in the train set: 258672, number of used features: 24
2025-07-17 10:56:29,506:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 10:56:42,174:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 10:56:42,174:INFO:create_model() successfully completed......................................
2025-07-17 10:56:42,273:INFO:_master_model_container: 3
2025-07-17 10:56:42,274:INFO:_display_container: 3
2025-07-17 10:56:42,287:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 10:56:42,287:INFO:finalize_model() successfully completed......................................
2025-07-17 10:56:42,408:INFO:Initializing save_model()
2025-07-17 10:56:42,408:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm_3anos_var_temporal, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 10:56:42,409:INFO:Adding model into prep_pipe
2025-07-17 10:56:42,409:WARNING:Only Model saved as it was a pipeline.
2025-07-17 10:56:45,263:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm_3anos_var_temporal.pkl saved in current working directory
2025-07-17 10:56:45,281:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 10:56:45,282:INFO:save_model() successfully completed......................................
2025-07-17 11:02:34,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:02:34,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:02:34,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:02:34,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:03:16,948:INFO:Initializing load_model()
2025-07-17 11:03:16,948:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm_3anos_var_temporal, platform=None, authentication=None, verbose=True)
2025-07-17 11:03:32,542:INFO:Initializing predict_model()
2025-07-17 11:03:32,545:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000196F7B72A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor',
                                             'Dia da Semana Emissão',
                                             'Mês de Emissão'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_enco...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.4, bagging_freq=3,
                                feature_fraction=0.9, learning_rate=0.05,
                                min_child_samples=81, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                random_state=109, reg_alpha=2,
                                reg_lambda=0.5))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019680202520>)
2025-07-17 11:03:32,545:INFO:Checking exceptions
2025-07-17 11:03:32,546:INFO:Preloading libraries
2025-07-17 11:03:32,547:INFO:Set up data.
2025-07-17 11:03:32,564:INFO:Set up index.
2025-07-17 11:32:20,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:32:20,974:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:32:20,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:32:20,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:43:14,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:43:14,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:43:14,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:43:14,306:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 11:43:58,259:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 11:44:22,340:INFO:PyCaret ClassificationExperiment
2025-07-17 11:44:22,340:INFO:Logging name: clf-default-name
2025-07-17 11:44:22,340:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 11:44:22,340:INFO:version 3.3.2
2025-07-17 11:44:22,340:INFO:Initializing setup()
2025-07-17 11:44:22,340:INFO:self.USI: c6e1
2025-07-17 11:44:22,340:INFO:self._variable_keys: {'fold_shuffle_param', 'html_param', 'y', 'y_test', 'pipeline', 'seed', 'fold_generator', 'logging_param', 'USI', 'log_plots_param', 'X_test', 'X_train', 'exp_name_log', '_ml_usecase', 'data', 'y_train', 'fix_imbalance', 'idx', 'fold_groups_param', 'gpu_n_jobs_param', 'is_multiclass', 'X', 'n_jobs_param', '_available_plots', 'memory', 'target_param', 'exp_id', 'gpu_param'}
2025-07-17 11:44:22,340:INFO:Checking environment
2025-07-17 11:44:22,340:INFO:python_version: 3.11.9
2025-07-17 11:44:22,340:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 11:44:22,341:INFO:machine: AMD64
2025-07-17 11:44:22,373:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 11:44:22,379:INFO:Memory: svmem(total=16844595200, available=2517098496, percent=85.1, used=14327496704, free=2517098496)
2025-07-17 11:44:22,379:INFO:Physical Core: 4
2025-07-17 11:44:22,379:INFO:Logical Core: 8
2025-07-17 11:44:22,379:INFO:Checking libraries
2025-07-17 11:44:22,379:INFO:System:
2025-07-17 11:44:22,380:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 11:44:22,380:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 11:44:22,380:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 11:44:22,380:INFO:PyCaret required dependencies:
2025-07-17 11:44:22,503:INFO:                 pip: 25.1.1
2025-07-17 11:44:22,503:INFO:          setuptools: 65.5.0
2025-07-17 11:44:22,503:INFO:             pycaret: 3.3.2
2025-07-17 11:44:22,503:INFO:             IPython: 9.3.0
2025-07-17 11:44:22,503:INFO:          ipywidgets: 8.1.7
2025-07-17 11:44:22,503:INFO:                tqdm: 4.67.1
2025-07-17 11:44:22,503:INFO:               numpy: 1.26.4
2025-07-17 11:44:22,503:INFO:              pandas: 2.1.4
2025-07-17 11:44:22,503:INFO:              jinja2: 3.1.6
2025-07-17 11:44:22,503:INFO:               scipy: 1.11.4
2025-07-17 11:44:22,503:INFO:              joblib: 1.3.2
2025-07-17 11:44:22,503:INFO:             sklearn: 1.4.2
2025-07-17 11:44:22,503:INFO:                pyod: 2.0.5
2025-07-17 11:44:22,503:INFO:            imblearn: 0.13.0
2025-07-17 11:44:22,503:INFO:   category_encoders: 2.7.0
2025-07-17 11:44:22,503:INFO:            lightgbm: 4.6.0
2025-07-17 11:44:22,503:INFO:               numba: 0.61.2
2025-07-17 11:44:22,503:INFO:            requests: 2.32.4
2025-07-17 11:44:22,503:INFO:          matplotlib: 3.7.5
2025-07-17 11:44:22,504:INFO:          scikitplot: 0.3.7
2025-07-17 11:44:22,504:INFO:         yellowbrick: 1.5
2025-07-17 11:44:22,504:INFO:              plotly: 5.24.1
2025-07-17 11:44:22,504:INFO:    plotly-resampler: Not installed
2025-07-17 11:44:22,504:INFO:             kaleido: 1.0.0
2025-07-17 11:44:22,504:INFO:           schemdraw: 0.15
2025-07-17 11:44:22,504:INFO:         statsmodels: 0.14.4
2025-07-17 11:44:22,504:INFO:              sktime: 0.26.0
2025-07-17 11:44:22,504:INFO:               tbats: 1.1.3
2025-07-17 11:44:22,504:INFO:            pmdarima: 2.0.4
2025-07-17 11:44:22,504:INFO:              psutil: 7.0.0
2025-07-17 11:44:22,504:INFO:          markupsafe: 3.0.2
2025-07-17 11:44:22,504:INFO:             pickle5: Not installed
2025-07-17 11:44:22,504:INFO:         cloudpickle: 3.1.1
2025-07-17 11:44:22,504:INFO:         deprecation: 2.1.0
2025-07-17 11:44:22,504:INFO:              xxhash: 3.5.0
2025-07-17 11:44:22,504:INFO:           wurlitzer: Not installed
2025-07-17 11:44:22,504:INFO:PyCaret optional dependencies:
2025-07-17 11:44:22,521:INFO:                shap: 0.48.0
2025-07-17 11:44:22,521:INFO:           interpret: Not installed
2025-07-17 11:44:22,521:INFO:                umap: Not installed
2025-07-17 11:44:22,521:INFO:     ydata_profiling: Not installed
2025-07-17 11:44:22,521:INFO:  explainerdashboard: Not installed
2025-07-17 11:44:22,521:INFO:             autoviz: Not installed
2025-07-17 11:44:22,521:INFO:           fairlearn: Not installed
2025-07-17 11:44:22,521:INFO:          deepchecks: Not installed
2025-07-17 11:44:22,521:INFO:             xgboost: Not installed
2025-07-17 11:44:22,521:INFO:            catboost: 1.2.8
2025-07-17 11:44:22,521:INFO:              kmodes: Not installed
2025-07-17 11:44:22,521:INFO:             mlxtend: Not installed
2025-07-17 11:44:22,521:INFO:       statsforecast: Not installed
2025-07-17 11:44:22,521:INFO:        tune_sklearn: Not installed
2025-07-17 11:44:22,521:INFO:                 ray: Not installed
2025-07-17 11:44:22,521:INFO:            hyperopt: Not installed
2025-07-17 11:44:22,521:INFO:              optuna: Not installed
2025-07-17 11:44:22,521:INFO:               skopt: Not installed
2025-07-17 11:44:22,521:INFO:              mlflow: Not installed
2025-07-17 11:44:22,521:INFO:              gradio: Not installed
2025-07-17 11:44:22,521:INFO:             fastapi: Not installed
2025-07-17 11:44:22,522:INFO:             uvicorn: Not installed
2025-07-17 11:44:22,522:INFO:              m2cgen: Not installed
2025-07-17 11:44:22,522:INFO:           evidently: Not installed
2025-07-17 11:44:22,522:INFO:               fugue: Not installed
2025-07-17 11:44:22,522:INFO:           streamlit: Not installed
2025-07-17 11:44:22,522:INFO:             prophet: Not installed
2025-07-17 11:44:22,522:INFO:None
2025-07-17 11:44:22,522:INFO:Set up data.
2025-07-17 11:44:22,538:INFO:Set up folding strategy.
2025-07-17 11:44:22,538:INFO:Set up train/test split.
2025-07-17 11:44:22,589:INFO:Set up index.
2025-07-17 11:44:22,601:INFO:Assigning column types.
2025-07-17 11:44:22,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 11:44:22,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 11:44:22,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 11:44:22,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:22,709:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:22,884:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 11:44:22,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 11:44:22,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:22,918:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:22,918:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 11:44:23,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 11:44:23,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:23,077:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:23,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 11:44:23,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:23,205:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:23,206:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 11:44:23,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:23,339:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:23,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:23,492:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:23,496:INFO:Preparing preprocessing pipeline...
2025-07-17 11:44:23,503:INFO:Set up simple imputation.
2025-07-17 11:44:23,525:INFO:Set up encoding of categorical features.
2025-07-17 11:44:23,526:INFO:Set up imbalanced handling.
2025-07-17 11:44:23,529:INFO:Set up column name cleaning.
2025-07-17 11:44:23,920:INFO:Finished creating preprocessing pipeline.
2025-07-17 11:44:23,930:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 11:44:23,931:INFO:Creating final display dataframe.
2025-07-17 11:44:24,741:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              c6e1
2025-07-17 11:44:24,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:24,989:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:25,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 11:44:25,146:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 11:44:25,148:INFO:setup() successfully completed in 2.92s...............
2025-07-17 11:44:25,148:INFO:Initializing create_model()
2025-07-17 11:44:25,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 11:44:25,148:INFO:Checking exceptions
2025-07-17 11:44:25,153:INFO:Importing libraries
2025-07-17 11:44:25,153:INFO:Copying training dataset
2025-07-17 11:44:25,222:INFO:Defining folds
2025-07-17 11:44:25,223:INFO:Declaring metric variables
2025-07-17 11:44:25,224:INFO:Importing untrained model
2025-07-17 11:44:25,225:INFO:CatBoost Classifier Imported successfully
2025-07-17 11:44:25,226:INFO:Starting cross validation
2025-07-17 11:44:25,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 11:48:34,315:INFO:Calculating mean and std
2025-07-17 11:48:34,318:INFO:Creating metrics dataframe
2025-07-17 11:48:34,322:INFO:Finalizing model
2025-07-17 11:49:08,349:INFO:Uploading results into container
2025-07-17 11:49:08,349:INFO:Uploading model into container now
2025-07-17 11:49:08,361:INFO:_master_model_container: 1
2025-07-17 11:49:08,361:INFO:_display_container: 2
2025-07-17 11:49:08,362:INFO:<catboost.core.CatBoostClassifier object at 0x000001D0B735BA50>
2025-07-17 11:49:08,362:INFO:create_model() successfully completed......................................
2025-07-17 11:49:08,817:INFO:Initializing tune_model()
2025-07-17 11:49:08,817:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D0B735BA50>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 11:49:08,818:INFO:Checking exceptions
2025-07-17 11:49:08,847:INFO:Copying training dataset
2025-07-17 11:49:08,874:INFO:Checking base model
2025-07-17 11:49:08,875:INFO:Base model : CatBoost Classifier
2025-07-17 11:49:08,875:INFO:Declaring metric variables
2025-07-17 11:49:08,875:INFO:Defining Hyperparameters
2025-07-17 11:49:08,988:INFO:Tuning with n_jobs=-1
2025-07-17 11:49:08,988:INFO:Initializing RandomizedSearchCV
2025-07-17 11:54:01,157:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
10 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2321, in _prepare_train_params
    _check_train_params(params)
  File "_catboost.pyx", line 6601, in _catboost._check_train_params
  File "_catboost.pyx", line 6623, in _catboost._check_train_params
_catboost.CatBoostError: catboost/private/libs/options/boosting_options.cpp:79: Learning rate should be non-zero

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-17 11:54:01,165:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_search.py:1051: UserWarning: One or more of the test scores are non-finite: [0.37364562 0.46756821        nan 0.53317624 0.49191121 0.41452695
 0.42541697 0.45567887 0.58477883 0.38905245]
  warnings.warn(

2025-07-17 11:54:01,165:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 240, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__eta': 0.1, 'actual_estimator__depth': 10}
2025-07-17 11:54:01,171:INFO:Hyperparameter search completed
2025-07-17 11:54:01,171:INFO:SubProcess create_model() called ==================================
2025-07-17 11:54:01,172:INFO:Initializing create_model()
2025-07-17 11:54:01,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D0C38B2090>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001D0C38E88D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 240, 'l2_leaf_reg': 5, 'eta': 0.1, 'depth': 10})
2025-07-17 11:54:01,172:INFO:Checking exceptions
2025-07-17 11:54:01,172:INFO:Importing libraries
2025-07-17 11:54:01,172:INFO:Copying training dataset
2025-07-17 11:54:01,261:INFO:Defining folds
2025-07-17 11:54:01,261:INFO:Declaring metric variables
2025-07-17 11:54:01,261:INFO:Importing untrained model
2025-07-17 11:54:01,261:INFO:Declaring custom model
2025-07-17 11:54:01,261:INFO:CatBoost Classifier Imported successfully
2025-07-17 11:54:01,267:INFO:Starting cross validation
2025-07-17 11:54:01,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 11:55:55,206:INFO:Calculating mean and std
2025-07-17 11:55:55,208:INFO:Creating metrics dataframe
2025-07-17 11:55:55,213:INFO:Finalizing model
2025-07-17 11:56:15,988:INFO:Uploading results into container
2025-07-17 11:56:15,989:INFO:Uploading model into container now
2025-07-17 11:56:15,990:INFO:_master_model_container: 2
2025-07-17 11:56:15,990:INFO:_display_container: 3
2025-07-17 11:56:15,990:INFO:<catboost.core.CatBoostClassifier object at 0x000001D0C395C050>
2025-07-17 11:56:15,990:INFO:create_model() successfully completed......................................
2025-07-17 11:56:16,142:INFO:SubProcess create_model() end ==================================
2025-07-17 11:56:16,142:INFO:choose_better activated
2025-07-17 11:56:16,143:INFO:SubProcess create_model() called ==================================
2025-07-17 11:56:16,143:INFO:Initializing create_model()
2025-07-17 11:56:16,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D0B735BA50>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 11:56:16,143:INFO:Checking exceptions
2025-07-17 11:56:16,144:INFO:Importing libraries
2025-07-17 11:56:16,145:INFO:Copying training dataset
2025-07-17 11:56:16,244:INFO:Defining folds
2025-07-17 11:56:16,244:INFO:Declaring metric variables
2025-07-17 11:56:16,245:INFO:Importing untrained model
2025-07-17 11:56:16,245:INFO:Declaring custom model
2025-07-17 11:56:16,246:INFO:CatBoost Classifier Imported successfully
2025-07-17 11:56:16,246:INFO:Starting cross validation
2025-07-17 11:56:16,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 11:59:51,705:INFO:Calculating mean and std
2025-07-17 11:59:51,706:INFO:Creating metrics dataframe
2025-07-17 11:59:51,709:INFO:Finalizing model
2025-07-17 12:00:31,936:INFO:Uploading results into container
2025-07-17 12:00:31,937:INFO:Uploading model into container now
2025-07-17 12:00:31,938:INFO:_master_model_container: 3
2025-07-17 12:00:31,938:INFO:_display_container: 4
2025-07-17 12:00:31,938:INFO:<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>
2025-07-17 12:00:31,938:INFO:create_model() successfully completed......................................
2025-07-17 12:00:32,072:INFO:SubProcess create_model() end ==================================
2025-07-17 12:00:32,072:INFO:<catboost.core.CatBoostClassifier object at 0x000001D09FB22090> result for MCC is 0.6015
2025-07-17 12:00:32,073:INFO:<catboost.core.CatBoostClassifier object at 0x000001D0C395C050> result for MCC is 0.5848
2025-07-17 12:00:32,073:INFO:<catboost.core.CatBoostClassifier object at 0x000001D09FB22090> is best model
2025-07-17 12:00:32,073:INFO:choose_better completed
2025-07-17 12:00:32,074:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-17 12:00:32,097:INFO:_master_model_container: 3
2025-07-17 12:00:32,097:INFO:_display_container: 3
2025-07-17 12:00:32,097:INFO:<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>
2025-07-17 12:00:32,097:INFO:tune_model() successfully completed......................................
2025-07-17 12:00:32,257:INFO:Initializing plot_model()
2025-07-17 12:00:32,258:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>, plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 12:00:32,258:INFO:Checking exceptions
2025-07-17 12:00:32,284:INFO:Preloading libraries
2025-07-17 12:00:32,290:INFO:Copying training dataset
2025-07-17 12:00:32,291:INFO:Plot type: feature
2025-07-17 12:00:32,292:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 12:00:33,132:INFO:Saving 'Feature Importance.png'
2025-07-17 12:00:33,433:INFO:Visual Rendered Successfully
2025-07-17 12:00:33,608:INFO:plot_model() successfully completed......................................
2025-07-17 12:00:33,611:INFO:Initializing plot_model()
2025-07-17 12:00:33,611:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>, plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 12:00:33,611:INFO:Checking exceptions
2025-07-17 12:00:33,636:INFO:Preloading libraries
2025-07-17 12:00:33,642:INFO:Copying training dataset
2025-07-17 12:00:33,643:INFO:Plot type: confusion_matrix
2025-07-17 12:00:34,350:INFO:Fitting Model
2025-07-17 12:00:34,355:INFO:Scoring test/hold-out set
2025-07-17 12:00:34,478:INFO:Saving 'Confusion Matrix.png'
2025-07-17 12:00:34,657:INFO:Visual Rendered Successfully
2025-07-17 12:00:34,801:INFO:plot_model() successfully completed......................................
2025-07-17 12:00:34,804:INFO:Initializing finalize_model()
2025-07-17 12:00:34,804:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 12:00:34,804:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x000001D09FB22090>
2025-07-17 12:00:34,823:INFO:Initializing create_model()
2025-07-17 12:00:34,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D0B8827A90>, estimator=<catboost.core.CatBoostClassifier object at 0x000001D09FB22090>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 12:00:34,823:INFO:Checking exceptions
2025-07-17 12:00:34,827:INFO:Importing libraries
2025-07-17 12:00:34,827:INFO:Copying training dataset
2025-07-17 12:00:34,832:INFO:Defining folds
2025-07-17 12:00:34,832:INFO:Declaring metric variables
2025-07-17 12:00:34,833:INFO:Importing untrained model
2025-07-17 12:00:34,834:INFO:Declaring custom model
2025-07-17 12:00:34,835:INFO:CatBoost Classifier Imported successfully
2025-07-17 12:00:34,840:INFO:Cross validation set to False
2025-07-17 12:00:34,840:INFO:Fitting Model
2025-07-17 12:01:26,264:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000001D0BB64E950>)],
         verbose=False)
2025-07-17 12:01:26,264:INFO:create_model() successfully completed......................................
2025-07-17 12:01:26,387:INFO:_master_model_container: 3
2025-07-17 12:01:26,387:INFO:_display_container: 3
2025-07-17 12:01:26,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000001D0BB64E950>)],
         verbose=False)
2025-07-17 12:01:26,405:INFO:finalize_model() successfully completed......................................
2025-07-17 12:01:26,571:INFO:Initializing save_model()
2025-07-17 12:01:26,571:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000001D0BB64E950>)],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 12:01:26,572:INFO:Adding model into prep_pipe
2025-07-17 12:01:26,572:WARNING:Only Model saved as it was a pipeline.
2025-07-17 12:01:29,996:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost.pkl saved in current working directory
2025-07-17 12:01:30,008:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000001D0BB64E950>)],
         verbose=False)
2025-07-17 12:01:30,008:INFO:save_model() successfully completed......................................
2025-07-17 13:05:51,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:05:51,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:05:51,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:05:51,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:06:48,808:INFO:Initializing load_model()
2025-07-17 13:06:48,809:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, platform=None, authentication=None, verbose=True)
2025-07-17 13:06:58,599:INFO:Initializing predict_model()
2025-07-17 13:06:58,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025169F9D8D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002516AD67890>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000251689994E0>)
2025-07-17 13:06:58,600:INFO:Checking exceptions
2025-07-17 13:06:58,601:INFO:Preloading libraries
2025-07-17 13:06:58,603:INFO:Set up data.
2025-07-17 13:06:58,618:INFO:Set up index.
2025-07-17 13:16:57,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:16:57,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:16:57,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:16:57,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:18:00,490:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 13:18:42,259:INFO:PyCaret ClassificationExperiment
2025-07-17 13:18:42,263:INFO:Logging name: clf-default-name
2025-07-17 13:18:42,264:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 13:18:42,266:INFO:version 3.3.2
2025-07-17 13:18:42,266:INFO:Initializing setup()
2025-07-17 13:18:42,266:INFO:self.USI: a7de
2025-07-17 13:18:42,266:INFO:self._variable_keys: {'USI', 'is_multiclass', 'data', 'n_jobs_param', 'gpu_param', 'y_train', 'exp_id', 'exp_name_log', 'fix_imbalance', 'html_param', 'X_test', 'target_param', 'y_test', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'X', 'pipeline', 'X_train', 'fold_generator', 'idx', 'y', '_available_plots', 'memory', 'gpu_n_jobs_param', 'fold_shuffle_param', 'seed', 'logging_param'}
2025-07-17 13:18:42,266:INFO:Checking environment
2025-07-17 13:18:42,267:INFO:python_version: 3.11.9
2025-07-17 13:18:42,267:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 13:18:42,267:INFO:machine: AMD64
2025-07-17 13:18:42,304:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 13:18:42,311:INFO:Memory: svmem(total=16844595200, available=2202697728, percent=86.9, used=14641897472, free=2202697728)
2025-07-17 13:18:42,313:INFO:Physical Core: 4
2025-07-17 13:18:42,313:INFO:Logical Core: 8
2025-07-17 13:18:42,313:INFO:Checking libraries
2025-07-17 13:18:42,314:INFO:System:
2025-07-17 13:18:42,314:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 13:18:42,314:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 13:18:42,315:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 13:18:42,315:INFO:PyCaret required dependencies:
2025-07-17 13:18:42,446:INFO:                 pip: 25.1.1
2025-07-17 13:18:42,447:INFO:          setuptools: 65.5.0
2025-07-17 13:18:42,447:INFO:             pycaret: 3.3.2
2025-07-17 13:18:42,447:INFO:             IPython: 9.3.0
2025-07-17 13:18:42,448:INFO:          ipywidgets: 8.1.7
2025-07-17 13:18:42,448:INFO:                tqdm: 4.67.1
2025-07-17 13:18:42,448:INFO:               numpy: 1.26.4
2025-07-17 13:18:42,448:INFO:              pandas: 2.1.4
2025-07-17 13:18:42,449:INFO:              jinja2: 3.1.6
2025-07-17 13:18:42,449:INFO:               scipy: 1.11.4
2025-07-17 13:18:42,449:INFO:              joblib: 1.3.2
2025-07-17 13:18:42,449:INFO:             sklearn: 1.4.2
2025-07-17 13:18:42,449:INFO:                pyod: 2.0.5
2025-07-17 13:18:42,450:INFO:            imblearn: 0.13.0
2025-07-17 13:18:42,450:INFO:   category_encoders: 2.7.0
2025-07-17 13:18:42,450:INFO:            lightgbm: 4.6.0
2025-07-17 13:18:42,450:INFO:               numba: 0.61.2
2025-07-17 13:18:42,451:INFO:            requests: 2.32.4
2025-07-17 13:18:42,451:INFO:          matplotlib: 3.7.5
2025-07-17 13:18:42,451:INFO:          scikitplot: 0.3.7
2025-07-17 13:18:42,451:INFO:         yellowbrick: 1.5
2025-07-17 13:18:42,452:INFO:              plotly: 5.24.1
2025-07-17 13:18:42,452:INFO:    plotly-resampler: Not installed
2025-07-17 13:18:42,452:INFO:             kaleido: 1.0.0
2025-07-17 13:18:42,452:INFO:           schemdraw: 0.15
2025-07-17 13:18:42,452:INFO:         statsmodels: 0.14.4
2025-07-17 13:18:42,452:INFO:              sktime: 0.26.0
2025-07-17 13:18:42,452:INFO:               tbats: 1.1.3
2025-07-17 13:18:42,452:INFO:            pmdarima: 2.0.4
2025-07-17 13:18:42,452:INFO:              psutil: 7.0.0
2025-07-17 13:18:42,452:INFO:          markupsafe: 3.0.2
2025-07-17 13:18:42,452:INFO:             pickle5: Not installed
2025-07-17 13:18:42,452:INFO:         cloudpickle: 3.1.1
2025-07-17 13:18:42,452:INFO:         deprecation: 2.1.0
2025-07-17 13:18:42,452:INFO:              xxhash: 3.5.0
2025-07-17 13:18:42,452:INFO:           wurlitzer: Not installed
2025-07-17 13:18:42,452:INFO:PyCaret optional dependencies:
2025-07-17 13:18:42,464:INFO:                shap: 0.48.0
2025-07-17 13:18:42,464:INFO:           interpret: Not installed
2025-07-17 13:18:42,464:INFO:                umap: Not installed
2025-07-17 13:18:42,464:INFO:     ydata_profiling: Not installed
2025-07-17 13:18:42,464:INFO:  explainerdashboard: Not installed
2025-07-17 13:18:42,464:INFO:             autoviz: Not installed
2025-07-17 13:18:42,464:INFO:           fairlearn: Not installed
2025-07-17 13:18:42,464:INFO:          deepchecks: Not installed
2025-07-17 13:18:42,464:INFO:             xgboost: Not installed
2025-07-17 13:18:42,464:INFO:            catboost: 1.2.8
2025-07-17 13:18:42,464:INFO:              kmodes: Not installed
2025-07-17 13:18:42,464:INFO:             mlxtend: Not installed
2025-07-17 13:18:42,464:INFO:       statsforecast: Not installed
2025-07-17 13:18:42,464:INFO:        tune_sklearn: Not installed
2025-07-17 13:18:42,464:INFO:                 ray: Not installed
2025-07-17 13:18:42,464:INFO:            hyperopt: Not installed
2025-07-17 13:18:42,464:INFO:              optuna: Not installed
2025-07-17 13:18:42,464:INFO:               skopt: Not installed
2025-07-17 13:18:42,464:INFO:              mlflow: Not installed
2025-07-17 13:18:42,464:INFO:              gradio: Not installed
2025-07-17 13:18:42,464:INFO:             fastapi: Not installed
2025-07-17 13:18:42,464:INFO:             uvicorn: Not installed
2025-07-17 13:18:42,464:INFO:              m2cgen: Not installed
2025-07-17 13:18:42,464:INFO:           evidently: Not installed
2025-07-17 13:18:42,464:INFO:               fugue: Not installed
2025-07-17 13:18:42,464:INFO:           streamlit: Not installed
2025-07-17 13:18:42,464:INFO:             prophet: Not installed
2025-07-17 13:18:42,464:INFO:None
2025-07-17 13:18:42,464:INFO:Set up data.
2025-07-17 13:18:42,476:INFO:Set up folding strategy.
2025-07-17 13:18:42,476:INFO:Set up train/test split.
2025-07-17 13:18:42,515:INFO:Set up index.
2025-07-17 13:18:42,519:INFO:Assigning column types.
2025-07-17 13:18:42,530:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 13:18:42,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,570:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:42,621:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:42,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,782:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:42,802:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:42,803:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 13:18:42,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:42,866:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:42,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:18:42,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:42,923:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:42,924:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 13:18:42,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:42,998:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:43,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:43,086:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:43,089:INFO:Preparing preprocessing pipeline...
2025-07-17 13:18:43,092:INFO:Set up simple imputation.
2025-07-17 13:18:43,114:INFO:Set up encoding of categorical features.
2025-07-17 13:18:43,115:INFO:Set up imbalanced handling.
2025-07-17 13:18:43,120:INFO:Set up column name cleaning.
2025-07-17 13:18:43,455:INFO:Finished creating preprocessing pipeline.
2025-07-17 13:18:43,465:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 13:18:43,465:INFO:Creating final display dataframe.
2025-07-17 13:18:43,664:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              a7de
2025-07-17 13:18:43,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:43,773:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:43,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-17 13:18:43,858:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:18:43,859:INFO:setup() successfully completed in 1.73s...............
2025-07-17 13:18:43,859:INFO:Initializing create_model()
2025-07-17 13:18:43,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025BE3352ED0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 13:18:43,859:INFO:Checking exceptions
2025-07-17 13:21:47,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:21:47,850:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:21:47,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:21:47,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:23:14,561:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 13:24:26,433:INFO:PyCaret ClassificationExperiment
2025-07-17 13:24:26,434:INFO:Logging name: clf-default-name
2025-07-17 13:24:26,445:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 13:24:26,446:INFO:version 3.3.2
2025-07-17 13:24:26,449:INFO:Initializing setup()
2025-07-17 13:24:26,450:INFO:self.USI: bd96
2025-07-17 13:24:26,451:INFO:self._variable_keys: {'memory', 'fix_imbalance', 'pipeline', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'is_multiclass', '_available_plots', 'y', 'fold_generator', '_ml_usecase', 'X_train', 'exp_name_log', 'y_test', 'USI', 'data', 'y_train', 'exp_id', 'gpu_param', 'html_param', 'fold_groups_param', 'seed', 'n_jobs_param', 'X_test', 'target_param', 'idx'}
2025-07-17 13:24:26,455:INFO:Checking environment
2025-07-17 13:24:26,455:INFO:python_version: 3.11.9
2025-07-17 13:24:26,455:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 13:24:26,455:INFO:machine: AMD64
2025-07-17 13:24:26,562:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 13:24:26,571:INFO:Memory: svmem(total=16844595200, available=990437376, percent=94.1, used=15854157824, free=990437376)
2025-07-17 13:24:26,572:INFO:Physical Core: 4
2025-07-17 13:24:26,572:INFO:Logical Core: 8
2025-07-17 13:24:26,572:INFO:Checking libraries
2025-07-17 13:24:26,572:INFO:System:
2025-07-17 13:24:26,572:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 13:24:26,573:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 13:24:26,573:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 13:24:26,573:INFO:PyCaret required dependencies:
2025-07-17 13:24:26,908:INFO:                 pip: 25.1.1
2025-07-17 13:24:26,909:INFO:          setuptools: 65.5.0
2025-07-17 13:24:26,909:INFO:             pycaret: 3.3.2
2025-07-17 13:24:26,909:INFO:             IPython: 9.3.0
2025-07-17 13:24:26,909:INFO:          ipywidgets: 8.1.7
2025-07-17 13:24:26,909:INFO:                tqdm: 4.67.1
2025-07-17 13:24:26,909:INFO:               numpy: 1.26.4
2025-07-17 13:24:26,909:INFO:              pandas: 2.1.4
2025-07-17 13:24:26,909:INFO:              jinja2: 3.1.6
2025-07-17 13:24:26,909:INFO:               scipy: 1.11.4
2025-07-17 13:24:26,909:INFO:              joblib: 1.3.2
2025-07-17 13:24:26,909:INFO:             sklearn: 1.4.2
2025-07-17 13:24:26,909:INFO:                pyod: 2.0.5
2025-07-17 13:24:26,909:INFO:            imblearn: 0.13.0
2025-07-17 13:24:26,910:INFO:   category_encoders: 2.7.0
2025-07-17 13:24:26,910:INFO:            lightgbm: 4.6.0
2025-07-17 13:24:26,910:INFO:               numba: 0.61.2
2025-07-17 13:24:26,910:INFO:            requests: 2.32.4
2025-07-17 13:24:26,910:INFO:          matplotlib: 3.7.5
2025-07-17 13:24:26,910:INFO:          scikitplot: 0.3.7
2025-07-17 13:24:26,910:INFO:         yellowbrick: 1.5
2025-07-17 13:24:26,910:INFO:              plotly: 5.24.1
2025-07-17 13:24:26,911:INFO:    plotly-resampler: Not installed
2025-07-17 13:24:26,911:INFO:             kaleido: 1.0.0
2025-07-17 13:24:26,911:INFO:           schemdraw: 0.15
2025-07-17 13:24:26,911:INFO:         statsmodels: 0.14.4
2025-07-17 13:24:26,911:INFO:              sktime: 0.26.0
2025-07-17 13:24:26,911:INFO:               tbats: 1.1.3
2025-07-17 13:24:26,911:INFO:            pmdarima: 2.0.4
2025-07-17 13:24:26,911:INFO:              psutil: 7.0.0
2025-07-17 13:24:26,911:INFO:          markupsafe: 3.0.2
2025-07-17 13:24:26,911:INFO:             pickle5: Not installed
2025-07-17 13:24:26,912:INFO:         cloudpickle: 3.1.1
2025-07-17 13:24:26,912:INFO:         deprecation: 2.1.0
2025-07-17 13:24:26,912:INFO:              xxhash: 3.5.0
2025-07-17 13:24:26,912:INFO:           wurlitzer: Not installed
2025-07-17 13:24:26,912:INFO:PyCaret optional dependencies:
2025-07-17 13:24:27,164:INFO:                shap: 0.48.0
2025-07-17 13:24:27,164:INFO:           interpret: Not installed
2025-07-17 13:24:27,164:INFO:                umap: Not installed
2025-07-17 13:24:27,164:INFO:     ydata_profiling: Not installed
2025-07-17 13:24:27,165:INFO:  explainerdashboard: Not installed
2025-07-17 13:24:27,165:INFO:             autoviz: Not installed
2025-07-17 13:24:27,165:INFO:           fairlearn: Not installed
2025-07-17 13:24:27,165:INFO:          deepchecks: Not installed
2025-07-17 13:24:27,165:INFO:             xgboost: 3.0.2
2025-07-17 13:24:27,165:INFO:            catboost: 1.2.8
2025-07-17 13:24:27,165:INFO:              kmodes: Not installed
2025-07-17 13:24:27,166:INFO:             mlxtend: Not installed
2025-07-17 13:24:27,166:INFO:       statsforecast: Not installed
2025-07-17 13:24:27,166:INFO:        tune_sklearn: Not installed
2025-07-17 13:24:27,166:INFO:                 ray: Not installed
2025-07-17 13:24:27,166:INFO:            hyperopt: Not installed
2025-07-17 13:24:27,166:INFO:              optuna: Not installed
2025-07-17 13:24:27,167:INFO:               skopt: Not installed
2025-07-17 13:24:27,167:INFO:              mlflow: Not installed
2025-07-17 13:24:27,167:INFO:              gradio: Not installed
2025-07-17 13:24:27,167:INFO:             fastapi: Not installed
2025-07-17 13:24:27,167:INFO:             uvicorn: Not installed
2025-07-17 13:24:27,167:INFO:              m2cgen: Not installed
2025-07-17 13:24:27,168:INFO:           evidently: Not installed
2025-07-17 13:24:27,168:INFO:               fugue: Not installed
2025-07-17 13:24:27,168:INFO:           streamlit: Not installed
2025-07-17 13:24:27,168:INFO:             prophet: Not installed
2025-07-17 13:24:27,168:INFO:None
2025-07-17 13:24:27,168:INFO:Set up data.
2025-07-17 13:24:27,226:INFO:Set up folding strategy.
2025-07-17 13:24:27,227:INFO:Set up train/test split.
2025-07-17 13:24:27,435:INFO:Set up index.
2025-07-17 13:24:27,465:INFO:Assigning column types.
2025-07-17 13:24:27,535:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 13:24:27,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 13:24:27,888:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:24:28,038:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:28,050:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:28,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 13:24:28,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:24:28,956:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:28,968:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:28,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 13:24:29,256:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:24:29,633:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:29,651:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:29,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 13:24:29,959:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:29,971:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:29,972:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 13:24:30,292:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:30,308:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:30,616:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:30,634:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:30,655:INFO:Preparing preprocessing pipeline...
2025-07-17 13:24:30,673:INFO:Set up simple imputation.
2025-07-17 13:24:30,739:INFO:Set up encoding of categorical features.
2025-07-17 13:24:30,740:INFO:Set up imbalanced handling.
2025-07-17 13:24:30,754:INFO:Set up column name cleaning.
2025-07-17 13:24:32,899:INFO:Finished creating preprocessing pipeline.
2025-07-17 13:24:32,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 13:24:32,944:INFO:Creating final display dataframe.
2025-07-17 13:24:33,511:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              bd96
2025-07-17 13:24:33,694:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:33,705:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:34,035:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 13:24:34,043:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 13:24:34,048:INFO:setup() successfully completed in 7.86s...............
2025-07-17 13:24:34,048:INFO:Initializing create_model()
2025-07-17 13:24:34,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 13:24:34,049:INFO:Checking exceptions
2025-07-17 13:24:34,054:INFO:Importing libraries
2025-07-17 13:24:34,054:INFO:Copying training dataset
2025-07-17 13:24:34,136:INFO:Defining folds
2025-07-17 13:24:34,136:INFO:Declaring metric variables
2025-07-17 13:24:34,137:INFO:Importing untrained model
2025-07-17 13:24:34,141:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 13:24:34,141:INFO:Starting cross validation
2025-07-17 13:24:34,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 13:25:31,246:INFO:Calculating mean and std
2025-07-17 13:25:31,249:INFO:Creating metrics dataframe
2025-07-17 13:25:31,252:INFO:Finalizing model
2025-07-17 13:25:34,294:INFO:Uploading results into container
2025-07-17 13:25:34,306:INFO:Uploading model into container now
2025-07-17 13:25:34,361:INFO:_master_model_container: 1
2025-07-17 13:25:34,366:INFO:_display_container: 2
2025-07-17 13:25:34,371:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 13:25:34,371:INFO:create_model() successfully completed......................................
2025-07-17 13:25:35,141:INFO:Initializing tune_model()
2025-07-17 13:25:35,141:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 13:25:35,142:INFO:Checking exceptions
2025-07-17 13:25:35,197:INFO:Copying training dataset
2025-07-17 13:25:35,294:INFO:Checking base model
2025-07-17 13:25:35,294:INFO:Base model : Extreme Gradient Boosting
2025-07-17 13:25:35,296:INFO:Declaring metric variables
2025-07-17 13:25:35,296:INFO:Defining Hyperparameters
2025-07-17 13:25:35,459:INFO:Tuning with n_jobs=-1
2025-07-17 13:25:35,459:INFO:Initializing RandomizedSearchCV
2025-07-17 13:30:21,895:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__scale_pos_weight': 16.400000000000002, 'actual_estimator__reg_lambda': 10, 'actual_estimator__reg_alpha': 0.001, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_child_weight': 2, 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__colsample_bytree': 1}
2025-07-17 13:30:21,896:INFO:Hyperparameter search completed
2025-07-17 13:30:21,897:INFO:SubProcess create_model() called ==================================
2025-07-17 13:30:21,899:INFO:Initializing create_model()
2025-07-17 13:30:21,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002759F471850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'scale_pos_weight': 16.400000000000002, 'reg_lambda': 10, 'reg_alpha': 0.001, 'n_estimators': 230, 'min_child_weight': 2, 'max_depth': 9, 'learning_rate': 0.2, 'colsample_bytree': 1})
2025-07-17 13:30:21,901:INFO:Checking exceptions
2025-07-17 13:30:21,901:INFO:Importing libraries
2025-07-17 13:30:21,901:INFO:Copying training dataset
2025-07-17 13:30:21,978:INFO:Defining folds
2025-07-17 13:30:21,978:INFO:Declaring metric variables
2025-07-17 13:30:21,978:INFO:Importing untrained model
2025-07-17 13:30:21,978:INFO:Declaring custom model
2025-07-17 13:30:21,985:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 13:30:21,985:INFO:Starting cross validation
2025-07-17 13:30:21,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 13:31:05,960:INFO:Calculating mean and std
2025-07-17 13:31:05,961:INFO:Creating metrics dataframe
2025-07-17 13:31:05,964:INFO:Finalizing model
2025-07-17 13:31:11,319:INFO:Uploading results into container
2025-07-17 13:31:11,320:INFO:Uploading model into container now
2025-07-17 13:31:11,321:INFO:_master_model_container: 2
2025-07-17 13:31:11,321:INFO:_display_container: 3
2025-07-17 13:31:11,323:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 13:31:11,323:INFO:create_model() successfully completed......................................
2025-07-17 13:31:11,497:INFO:SubProcess create_model() end ==================================
2025-07-17 13:31:11,497:INFO:choose_better activated
2025-07-17 13:31:11,498:INFO:SubProcess create_model() called ==================================
2025-07-17 13:31:11,500:INFO:Initializing create_model()
2025-07-17 13:31:11,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 13:31:11,500:INFO:Checking exceptions
2025-07-17 13:31:11,501:INFO:Importing libraries
2025-07-17 13:31:11,501:INFO:Copying training dataset
2025-07-17 13:31:11,576:INFO:Defining folds
2025-07-17 13:31:11,576:INFO:Declaring metric variables
2025-07-17 13:31:11,576:INFO:Importing untrained model
2025-07-17 13:31:11,576:INFO:Declaring custom model
2025-07-17 13:31:11,578:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 13:31:11,578:INFO:Starting cross validation
2025-07-17 13:31:11,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 13:31:21,768:INFO:Calculating mean and std
2025-07-17 13:31:21,769:INFO:Creating metrics dataframe
2025-07-17 13:31:21,771:INFO:Finalizing model
2025-07-17 13:31:23,782:INFO:Uploading results into container
2025-07-17 13:31:23,784:INFO:Uploading model into container now
2025-07-17 13:31:23,784:INFO:_master_model_container: 3
2025-07-17 13:31:23,784:INFO:_display_container: 4
2025-07-17 13:31:23,786:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 13:31:23,786:INFO:create_model() successfully completed......................................
2025-07-17 13:31:23,892:INFO:SubProcess create_model() end ==================================
2025-07-17 13:31:23,894:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5756
2025-07-17 13:31:23,897:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5497
2025-07-17 13:31:23,898:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-07-17 13:31:23,898:INFO:choose_better completed
2025-07-17 13:31:23,898:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-17 13:31:23,917:INFO:_master_model_container: 3
2025-07-17 13:31:23,917:INFO:_display_container: 3
2025-07-17 13:31:23,919:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 13:31:23,919:INFO:tune_model() successfully completed......................................
2025-07-17 13:31:24,078:INFO:Initializing plot_model()
2025-07-17 13:31:24,078:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 13:31:24,079:INFO:Checking exceptions
2025-07-17 13:31:24,106:INFO:Preloading libraries
2025-07-17 13:31:24,122:INFO:Copying training dataset
2025-07-17 13:31:24,122:INFO:Plot type: feature
2025-07-17 13:31:24,125:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 13:31:25,038:INFO:Saving 'Feature Importance.png'
2025-07-17 13:31:25,498:INFO:Visual Rendered Successfully
2025-07-17 13:31:25,667:INFO:plot_model() successfully completed......................................
2025-07-17 13:31:25,668:INFO:Initializing plot_model()
2025-07-17 13:31:25,668:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 13:31:25,668:INFO:Checking exceptions
2025-07-17 13:31:25,687:INFO:Preloading libraries
2025-07-17 13:31:25,695:INFO:Copying training dataset
2025-07-17 13:31:25,695:INFO:Plot type: confusion_matrix
2025-07-17 13:31:26,224:INFO:Fitting Model
2025-07-17 13:31:26,229:INFO:Scoring test/hold-out set
2025-07-17 13:31:26,360:INFO:Saving 'Confusion Matrix.png'
2025-07-17 13:31:26,524:INFO:Visual Rendered Successfully
2025-07-17 13:31:26,672:INFO:plot_model() successfully completed......................................
2025-07-17 13:31:26,675:INFO:Initializing finalize_model()
2025-07-17 13:31:26,675:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 13:31:26,677:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 13:31:26,706:INFO:Initializing create_model()
2025-07-17 13:31:26,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027592580250>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 13:31:26,708:INFO:Checking exceptions
2025-07-17 13:31:26,709:INFO:Importing libraries
2025-07-17 13:31:26,709:INFO:Copying training dataset
2025-07-17 13:31:26,710:INFO:Defining folds
2025-07-17 13:31:26,710:INFO:Declaring metric variables
2025-07-17 13:31:26,710:INFO:Importing untrained model
2025-07-17 13:31:26,711:INFO:Declaring custom model
2025-07-17 13:31:26,712:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 13:31:26,714:INFO:Cross validation set to False
2025-07-17 13:31:26,714:INFO:Fitting Model
2025-07-17 13:31:30,413:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 13:31:30,413:INFO:create_model() successfully completed......................................
2025-07-17 13:31:30,518:INFO:_master_model_container: 3
2025-07-17 13:31:30,518:INFO:_display_container: 3
2025-07-17 13:31:30,538:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 13:31:30,538:INFO:finalize_model() successfully completed......................................
2025-07-17 13:31:30,672:INFO:Initializing save_model()
2025-07-17 13:31:30,672:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 13:31:30,677:INFO:Adding model into prep_pipe
2025-07-17 13:31:30,677:WARNING:Only Model saved as it was a pipeline.
2025-07-17 13:31:31,844:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost.pkl saved in current working directory
2025-07-17 13:31:31,861:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 13:31:31,861:INFO:save_model() successfully completed......................................
2025-07-17 13:33:55,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:33:55,246:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:33:55,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:33:55,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 13:35:25,660:INFO:Initializing load_model()
2025-07-17 13:35:25,662:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost, platform=None, authentication=None, verbose=True)
2025-07-17 13:35:32,086:INFO:Initializing predict_model()
2025-07-17 13:35:32,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F27ABB1610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                               feature_types=None, feature_weights=None,
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F27A811580>)
2025-07-17 13:35:32,089:INFO:Checking exceptions
2025-07-17 13:35:32,089:INFO:Preloading libraries
2025-07-17 13:35:32,090:INFO:Set up data.
2025-07-17 13:35:32,120:INFO:Set up index.
2025-07-17 14:07:23,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:07:23,418:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:07:23,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:07:23,420:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:10:53,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:10:53,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:10:53,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:10:53,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:11:53,953:INFO:Initializing load_model()
2025-07-17 14:11:53,954:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:11:57,534:INFO:Initializing load_model()
2025-07-17 14:11:57,535:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:12:00,235:INFO:Initializing load_model()
2025-07-17 14:12:00,235:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-17 14:12:01,983:INFO:Initializing load_model()
2025-07-17 14:12:01,984:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_et, platform=None, authentication=None, verbose=True)
2025-07-17 14:23:09,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:23:09,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:23:09,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:23:09,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:24:30,995:INFO:Initializing load_model()
2025-07-17 14:24:30,996:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:24:36,321:INFO:Initializing load_model()
2025-07-17 14:24:36,321:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:24:42,021:INFO:Initializing load_model()
2025-07-17 14:24:42,021:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-17 14:31:21,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:31:21,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:31:21,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:31:21,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:32:33,826:INFO:Initializing load_model()
2025-07-17 14:32:33,828:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_xgboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:32:39,177:INFO:Initializing load_model()
2025-07-17 14:32:39,177:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_catboost, platform=None, authentication=None, verbose=True)
2025-07-17 14:32:53,317:INFO:Initializing load_model()
2025-07-17 14:32:53,318:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-17 14:37:50,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:37:50,947:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:37:50,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:37:50,948:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 14:38:37,277:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:119: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 14:39:20,896:INFO:PyCaret ClassificationExperiment
2025-07-17 14:39:20,897:INFO:Logging name: clf-default-name
2025-07-17 14:39:20,898:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 14:39:20,899:INFO:version 3.3.2
2025-07-17 14:39:20,899:INFO:Initializing setup()
2025-07-17 14:39:20,900:INFO:self.USI: cdcc
2025-07-17 14:39:20,901:INFO:self._variable_keys: {'idx', 'gpu_n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'exp_name_log', 'X_train', 'pipeline', 'USI', 'logging_param', '_available_plots', 'exp_id', 'n_jobs_param', 'target_param', 'y_train', 'fold_generator', 'data', 'X_test', 'memory', 'fold_groups_param', 'X', 'y_test', 'seed', 'html_param', 'y', 'fix_imbalance', 'is_multiclass', 'log_plots_param', '_ml_usecase'}
2025-07-17 14:39:20,901:INFO:Checking environment
2025-07-17 14:39:20,902:INFO:python_version: 3.11.9
2025-07-17 14:39:20,903:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 14:39:20,904:INFO:machine: AMD64
2025-07-17 14:39:21,267:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 14:39:21,294:INFO:Memory: svmem(total=16844595200, available=2094649344, percent=87.6, used=14749945856, free=2094649344)
2025-07-17 14:39:21,294:INFO:Physical Core: 4
2025-07-17 14:39:21,294:INFO:Logical Core: 8
2025-07-17 14:39:21,295:INFO:Checking libraries
2025-07-17 14:39:21,295:INFO:System:
2025-07-17 14:39:21,295:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 14:39:21,295:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 14:39:21,295:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 14:39:21,295:INFO:PyCaret required dependencies:
2025-07-17 14:39:22,244:INFO:                 pip: 25.1.1
2025-07-17 14:39:22,245:INFO:          setuptools: 65.5.0
2025-07-17 14:39:22,245:INFO:             pycaret: 3.3.2
2025-07-17 14:39:22,245:INFO:             IPython: 9.3.0
2025-07-17 14:39:22,245:INFO:          ipywidgets: 8.1.7
2025-07-17 14:39:22,245:INFO:                tqdm: 4.67.1
2025-07-17 14:39:22,246:INFO:               numpy: 1.26.4
2025-07-17 14:39:22,246:INFO:              pandas: 2.1.4
2025-07-17 14:39:22,246:INFO:              jinja2: 3.1.6
2025-07-17 14:39:22,246:INFO:               scipy: 1.11.4
2025-07-17 14:39:22,246:INFO:              joblib: 1.3.2
2025-07-17 14:39:22,246:INFO:             sklearn: 1.4.2
2025-07-17 14:39:22,246:INFO:                pyod: 2.0.5
2025-07-17 14:39:22,246:INFO:            imblearn: 0.13.0
2025-07-17 14:39:22,247:INFO:   category_encoders: 2.7.0
2025-07-17 14:39:22,247:INFO:            lightgbm: 4.6.0
2025-07-17 14:39:22,247:INFO:               numba: 0.61.2
2025-07-17 14:39:22,247:INFO:            requests: 2.32.4
2025-07-17 14:39:22,247:INFO:          matplotlib: 3.7.5
2025-07-17 14:39:22,247:INFO:          scikitplot: 0.3.7
2025-07-17 14:39:22,247:INFO:         yellowbrick: 1.5
2025-07-17 14:39:22,247:INFO:              plotly: 5.24.1
2025-07-17 14:39:22,248:INFO:    plotly-resampler: Not installed
2025-07-17 14:39:22,248:INFO:             kaleido: 1.0.0
2025-07-17 14:39:22,248:INFO:           schemdraw: 0.15
2025-07-17 14:39:22,248:INFO:         statsmodels: 0.14.4
2025-07-17 14:39:22,248:INFO:              sktime: 0.26.0
2025-07-17 14:39:22,248:INFO:               tbats: 1.1.3
2025-07-17 14:39:22,248:INFO:            pmdarima: 2.0.4
2025-07-17 14:39:22,248:INFO:              psutil: 7.0.0
2025-07-17 14:39:22,249:INFO:          markupsafe: 3.0.2
2025-07-17 14:39:22,249:INFO:             pickle5: Not installed
2025-07-17 14:39:22,249:INFO:         cloudpickle: 3.1.1
2025-07-17 14:39:22,249:INFO:         deprecation: 2.1.0
2025-07-17 14:39:22,249:INFO:              xxhash: 3.5.0
2025-07-17 14:39:22,249:INFO:           wurlitzer: Not installed
2025-07-17 14:39:22,249:INFO:PyCaret optional dependencies:
2025-07-17 14:39:22,590:INFO:                shap: 0.48.0
2025-07-17 14:39:22,590:INFO:           interpret: Not installed
2025-07-17 14:39:22,591:INFO:                umap: Not installed
2025-07-17 14:39:22,591:INFO:     ydata_profiling: Not installed
2025-07-17 14:39:22,591:INFO:  explainerdashboard: Not installed
2025-07-17 14:39:22,591:INFO:             autoviz: Not installed
2025-07-17 14:39:22,591:INFO:           fairlearn: Not installed
2025-07-17 14:39:22,591:INFO:          deepchecks: Not installed
2025-07-17 14:39:22,591:INFO:             xgboost: 3.0.2
2025-07-17 14:39:22,592:INFO:            catboost: 1.2.8
2025-07-17 14:39:22,592:INFO:              kmodes: Not installed
2025-07-17 14:39:22,592:INFO:             mlxtend: Not installed
2025-07-17 14:39:22,592:INFO:       statsforecast: Not installed
2025-07-17 14:39:22,595:INFO:        tune_sklearn: Not installed
2025-07-17 14:39:22,595:INFO:                 ray: Not installed
2025-07-17 14:39:22,595:INFO:            hyperopt: Not installed
2025-07-17 14:39:22,596:INFO:              optuna: Not installed
2025-07-17 14:39:22,596:INFO:               skopt: Not installed
2025-07-17 14:39:22,596:INFO:              mlflow: Not installed
2025-07-17 14:39:22,596:INFO:              gradio: Not installed
2025-07-17 14:39:22,597:INFO:             fastapi: Not installed
2025-07-17 14:39:22,597:INFO:             uvicorn: Not installed
2025-07-17 14:39:22,597:INFO:              m2cgen: Not installed
2025-07-17 14:39:22,597:INFO:           evidently: Not installed
2025-07-17 14:39:22,597:INFO:               fugue: Not installed
2025-07-17 14:39:22,597:INFO:           streamlit: Not installed
2025-07-17 14:39:22,597:INFO:             prophet: Not installed
2025-07-17 14:39:22,598:INFO:None
2025-07-17 14:39:22,598:INFO:Set up data.
2025-07-17 14:39:22,652:INFO:Set up folding strategy.
2025-07-17 14:39:22,652:INFO:Set up train/test split.
2025-07-17 14:39:22,787:INFO:Set up index.
2025-07-17 14:39:22,798:INFO:Assigning column types.
2025-07-17 14:39:22,847:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 14:39:23,027:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 14:39:23,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 14:39:23,182:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:23,189:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:23,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 14:39:23,514:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 14:39:23,602:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:23,610:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:23,612:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 14:39:23,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 14:39:23,827:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:23,834:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:23,986:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 14:39:24,074:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:24,081:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:24,082:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 14:39:24,434:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:24,449:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:24,755:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:24,765:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:24,771:INFO:Preparing preprocessing pipeline...
2025-07-17 14:39:24,781:INFO:Set up simple imputation.
2025-07-17 14:39:24,824:INFO:Set up encoding of categorical features.
2025-07-17 14:39:24,825:INFO:Set up imbalanced handling.
2025-07-17 14:39:24,838:INFO:Set up column name cleaning.
2025-07-17 14:39:25,410:INFO:Finished creating preprocessing pipeline.
2025-07-17 14:39:25,435:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 14:39:25,436:INFO:Creating final display dataframe.
2025-07-17 14:39:26,086:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape       (155621, 6)
4        Transformed data shape       (227757, 6)
5   Transformed train set shape       (181070, 6)
6    Transformed test set shape        (46687, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              cdcc
2025-07-17 14:39:26,392:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:26,403:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:26,606:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 14:39:26,613:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 14:39:26,616:INFO:setup() successfully completed in 6.14s...............
2025-07-17 14:39:26,618:INFO:Initializing create_model()
2025-07-17 14:39:26,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 14:39:26,619:INFO:Checking exceptions
2025-07-17 14:39:26,624:INFO:Importing libraries
2025-07-17 14:39:26,624:INFO:Copying training dataset
2025-07-17 14:39:26,715:INFO:Defining folds
2025-07-17 14:39:26,715:INFO:Declaring metric variables
2025-07-17 14:39:26,716:INFO:Importing untrained model
2025-07-17 14:39:26,719:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 14:39:26,719:INFO:Starting cross validation
2025-07-17 14:39:26,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:39:58,751:INFO:Calculating mean and std
2025-07-17 14:39:58,754:INFO:Creating metrics dataframe
2025-07-17 14:39:58,758:INFO:Finalizing model
2025-07-17 14:40:00,375:INFO:Uploading results into container
2025-07-17 14:40:00,376:INFO:Uploading model into container now
2025-07-17 14:40:00,391:INFO:_master_model_container: 1
2025-07-17 14:40:00,391:INFO:_display_container: 2
2025-07-17 14:40:00,392:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 14:40:00,394:INFO:create_model() successfully completed......................................
2025-07-17 14:40:00,936:INFO:Initializing create_model()
2025-07-17 14:40:00,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 14:40:00,936:INFO:Checking exceptions
2025-07-17 14:40:00,938:INFO:Importing libraries
2025-07-17 14:40:00,938:INFO:Copying training dataset
2025-07-17 14:40:01,021:INFO:Defining folds
2025-07-17 14:40:01,022:INFO:Declaring metric variables
2025-07-17 14:40:01,022:INFO:Importing untrained model
2025-07-17 14:40:01,023:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 14:40:01,024:INFO:Starting cross validation
2025-07-17 14:40:01,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:40:18,434:INFO:Calculating mean and std
2025-07-17 14:40:18,435:INFO:Creating metrics dataframe
2025-07-17 14:40:18,437:INFO:Finalizing model
2025-07-17 14:40:19,249:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 14:40:19,254:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 14:40:19,263:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002126 seconds.
2025-07-17 14:40:19,264:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 14:40:19,264:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 14:40:19,268:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 14:40:19,269:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 5
2025-07-17 14:40:19,273:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 14:40:20,324:INFO:Uploading results into container
2025-07-17 14:40:20,325:INFO:Uploading model into container now
2025-07-17 14:40:20,343:INFO:_master_model_container: 2
2025-07-17 14:40:20,343:INFO:_display_container: 3
2025-07-17 14:40:20,344:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 14:40:20,345:INFO:create_model() successfully completed......................................
2025-07-17 14:40:20,471:INFO:Initializing create_model()
2025-07-17 14:40:20,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 14:40:20,471:INFO:Checking exceptions
2025-07-17 14:40:20,473:INFO:Importing libraries
2025-07-17 14:40:20,473:INFO:Copying training dataset
2025-07-17 14:40:20,518:INFO:Defining folds
2025-07-17 14:40:20,518:INFO:Declaring metric variables
2025-07-17 14:40:20,519:INFO:Importing untrained model
2025-07-17 14:40:20,520:INFO:CatBoost Classifier Imported successfully
2025-07-17 14:40:20,520:INFO:Starting cross validation
2025-07-17 14:40:20,523:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:44:41,185:INFO:Calculating mean and std
2025-07-17 14:44:41,188:INFO:Creating metrics dataframe
2025-07-17 14:44:41,192:INFO:Finalizing model
2025-07-17 14:45:23,058:INFO:Uploading results into container
2025-07-17 14:45:23,060:INFO:Uploading model into container now
2025-07-17 14:45:23,078:INFO:_master_model_container: 3
2025-07-17 14:45:23,079:INFO:_display_container: 4
2025-07-17 14:45:23,080:INFO:<catboost.core.CatBoostClassifier object at 0x000002970EFE8090>
2025-07-17 14:45:23,081:INFO:create_model() successfully completed......................................
2025-07-17 14:45:23,221:INFO:Initializing tune_model()
2025-07-17 14:45:23,222:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 14:45:23,222:INFO:Checking exceptions
2025-07-17 14:45:23,257:INFO:Copying training dataset
2025-07-17 14:45:23,291:INFO:Checking base model
2025-07-17 14:45:23,292:INFO:Base model : Extreme Gradient Boosting
2025-07-17 14:45:23,294:INFO:Declaring metric variables
2025-07-17 14:45:23,295:INFO:Defining Hyperparameters
2025-07-17 14:45:23,409:INFO:Tuning with n_jobs=-1
2025-07-17 14:45:23,410:INFO:Initializing RandomizedSearchCV
2025-07-17 14:49:15,485:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__scale_pos_weight': 16.400000000000002, 'actual_estimator__reg_lambda': 10, 'actual_estimator__reg_alpha': 0.001, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_child_weight': 2, 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__colsample_bytree': 1}
2025-07-17 14:49:15,487:INFO:Hyperparameter search completed
2025-07-17 14:49:15,488:INFO:SubProcess create_model() called ==================================
2025-07-17 14:49:15,490:INFO:Initializing create_model()
2025-07-17 14:49:15,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002970F05BBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'scale_pos_weight': 16.400000000000002, 'reg_lambda': 10, 'reg_alpha': 0.001, 'n_estimators': 230, 'min_child_weight': 2, 'max_depth': 9, 'learning_rate': 0.2, 'colsample_bytree': 1})
2025-07-17 14:49:15,491:INFO:Checking exceptions
2025-07-17 14:49:15,491:INFO:Importing libraries
2025-07-17 14:49:15,491:INFO:Copying training dataset
2025-07-17 14:49:15,585:INFO:Defining folds
2025-07-17 14:49:15,586:INFO:Declaring metric variables
2025-07-17 14:49:15,587:INFO:Importing untrained model
2025-07-17 14:49:15,587:INFO:Declaring custom model
2025-07-17 14:49:15,591:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 14:49:15,593:INFO:Starting cross validation
2025-07-17 14:49:15,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:49:54,741:INFO:Calculating mean and std
2025-07-17 14:49:54,745:INFO:Creating metrics dataframe
2025-07-17 14:49:54,752:INFO:Finalizing model
2025-07-17 14:50:01,693:INFO:Uploading results into container
2025-07-17 14:50:01,695:INFO:Uploading model into container now
2025-07-17 14:50:01,698:INFO:_master_model_container: 4
2025-07-17 14:50:01,700:INFO:_display_container: 5
2025-07-17 14:50:01,702:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 14:50:01,703:INFO:create_model() successfully completed......................................
2025-07-17 14:50:01,941:INFO:SubProcess create_model() end ==================================
2025-07-17 14:50:01,942:INFO:choose_better activated
2025-07-17 14:50:01,944:INFO:SubProcess create_model() called ==================================
2025-07-17 14:50:01,948:INFO:Initializing create_model()
2025-07-17 14:50:01,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 14:50:01,951:INFO:Checking exceptions
2025-07-17 14:50:01,953:INFO:Importing libraries
2025-07-17 14:50:01,953:INFO:Copying training dataset
2025-07-17 14:50:02,061:INFO:Defining folds
2025-07-17 14:50:02,061:INFO:Declaring metric variables
2025-07-17 14:50:02,062:INFO:Importing untrained model
2025-07-17 14:50:02,062:INFO:Declaring custom model
2025-07-17 14:50:02,065:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 14:50:02,066:INFO:Starting cross validation
2025-07-17 14:50:02,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:50:11,361:INFO:Calculating mean and std
2025-07-17 14:50:11,362:INFO:Creating metrics dataframe
2025-07-17 14:50:11,364:INFO:Finalizing model
2025-07-17 14:50:13,446:INFO:Uploading results into container
2025-07-17 14:50:13,447:INFO:Uploading model into container now
2025-07-17 14:50:13,447:INFO:_master_model_container: 5
2025-07-17 14:50:13,447:INFO:_display_container: 6
2025-07-17 14:50:13,449:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 14:50:13,449:INFO:create_model() successfully completed......................................
2025-07-17 14:50:13,584:INFO:SubProcess create_model() end ==================================
2025-07-17 14:50:13,586:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5756
2025-07-17 14:50:13,588:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5497
2025-07-17 14:50:13,590:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-07-17 14:50:13,591:INFO:choose_better completed
2025-07-17 14:50:13,591:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-17 14:50:13,632:INFO:_master_model_container: 5
2025-07-17 14:50:13,632:INFO:_display_container: 5
2025-07-17 14:50:13,635:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 14:50:13,636:INFO:tune_model() successfully completed......................................
2025-07-17 14:50:13,816:INFO:Initializing tune_model()
2025-07-17 14:50:13,817:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 14:50:13,817:INFO:Checking exceptions
2025-07-17 14:50:13,850:INFO:Copying training dataset
2025-07-17 14:50:13,901:INFO:Checking base model
2025-07-17 14:50:13,901:INFO:Base model : Light Gradient Boosting Machine
2025-07-17 14:50:13,903:INFO:Declaring metric variables
2025-07-17 14:50:13,905:INFO:Defining Hyperparameters
2025-07-17 14:50:14,019:INFO:Tuning with n_jobs=-1
2025-07-17 14:50:14,020:INFO:Initializing RandomizedSearchCV
2025-07-17 14:55:07,022:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-17 14:55:07,025:INFO:Hyperparameter search completed
2025-07-17 14:55:07,025:INFO:SubProcess create_model() called ==================================
2025-07-17 14:55:07,027:INFO:Initializing create_model()
2025-07-17 14:55:07,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002970EFE3B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-17 14:55:07,027:INFO:Checking exceptions
2025-07-17 14:55:07,027:INFO:Importing libraries
2025-07-17 14:55:07,028:INFO:Copying training dataset
2025-07-17 14:55:07,097:INFO:Defining folds
2025-07-17 14:55:07,097:INFO:Declaring metric variables
2025-07-17 14:55:07,098:INFO:Importing untrained model
2025-07-17 14:55:07,098:INFO:Declaring custom model
2025-07-17 14:55:07,100:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 14:55:07,100:INFO:Starting cross validation
2025-07-17 14:55:07,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:55:57,749:INFO:Calculating mean and std
2025-07-17 14:55:57,757:INFO:Creating metrics dataframe
2025-07-17 14:55:57,760:INFO:Finalizing model
2025-07-17 14:55:59,134:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 14:55:59,135:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 14:55:59,135:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 14:55:59,300:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 14:55:59,301:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 14:55:59,301:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 14:55:59,301:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 14:55:59,302:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 14:55:59,329:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.024785 seconds.
2025-07-17 14:55:59,329:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 14:55:59,330:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 14:55:59,331:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 5
2025-07-17 14:55:59,337:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 14:56:07,937:INFO:Uploading results into container
2025-07-17 14:56:07,938:INFO:Uploading model into container now
2025-07-17 14:56:07,939:INFO:_master_model_container: 6
2025-07-17 14:56:07,939:INFO:_display_container: 6
2025-07-17 14:56:07,940:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 14:56:07,940:INFO:create_model() successfully completed......................................
2025-07-17 14:56:08,055:INFO:SubProcess create_model() end ==================================
2025-07-17 14:56:08,055:INFO:choose_better activated
2025-07-17 14:56:08,055:INFO:SubProcess create_model() called ==================================
2025-07-17 14:56:08,056:INFO:Initializing create_model()
2025-07-17 14:56:08,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 14:56:08,056:INFO:Checking exceptions
2025-07-17 14:56:08,058:INFO:Importing libraries
2025-07-17 14:56:08,058:INFO:Copying training dataset
2025-07-17 14:56:08,118:INFO:Defining folds
2025-07-17 14:56:08,118:INFO:Declaring metric variables
2025-07-17 14:56:08,118:INFO:Importing untrained model
2025-07-17 14:56:08,118:INFO:Declaring custom model
2025-07-17 14:56:08,121:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 14:56:08,121:INFO:Starting cross validation
2025-07-17 14:56:08,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 14:56:16,558:INFO:Calculating mean and std
2025-07-17 14:56:16,559:INFO:Creating metrics dataframe
2025-07-17 14:56:16,562:INFO:Finalizing model
2025-07-17 14:56:17,739:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 14:56:17,741:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 14:56:17,749:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002210 seconds.
2025-07-17 14:56:17,750:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 14:56:17,750:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 14:56:17,750:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 14:56:17,750:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 5
2025-07-17 14:56:17,753:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 14:56:18,859:INFO:Uploading results into container
2025-07-17 14:56:18,860:INFO:Uploading model into container now
2025-07-17 14:56:18,861:INFO:_master_model_container: 7
2025-07-17 14:56:18,861:INFO:_display_container: 7
2025-07-17 14:56:18,863:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 14:56:18,863:INFO:create_model() successfully completed......................................
2025-07-17 14:56:18,970:INFO:SubProcess create_model() end ==================================
2025-07-17 14:56:18,972:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5208
2025-07-17 14:56:18,974:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.6303
2025-07-17 14:56:18,976:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-17 14:56:18,976:INFO:choose_better completed
2025-07-17 14:56:18,997:INFO:_master_model_container: 7
2025-07-17 14:56:18,997:INFO:_display_container: 6
2025-07-17 14:56:18,999:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 14:56:18,999:INFO:tune_model() successfully completed......................................
2025-07-17 14:56:19,130:INFO:Initializing tune_model()
2025-07-17 14:56:19,130:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970EFE8090>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 14:56:19,131:INFO:Checking exceptions
2025-07-17 14:56:19,153:INFO:Copying training dataset
2025-07-17 14:56:19,202:INFO:Checking base model
2025-07-17 14:56:19,203:INFO:Base model : CatBoost Classifier
2025-07-17 14:56:19,203:INFO:Declaring metric variables
2025-07-17 14:56:19,204:INFO:Defining Hyperparameters
2025-07-17 14:56:19,304:INFO:Tuning with n_jobs=-1
2025-07-17 14:56:19,304:INFO:Initializing RandomizedSearchCV
2025-07-17 15:00:17,755:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
10 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2321, in _prepare_train_params
    _check_train_params(params)
  File "_catboost.pyx", line 6601, in _catboost._check_train_params
  File "_catboost.pyx", line 6623, in _catboost._check_train_params
_catboost.CatBoostError: catboost/private/libs/options/boosting_options.cpp:79: Learning rate should be non-zero

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-17 15:00:17,761:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_search.py:1051: UserWarning: One or more of the test scores are non-finite: [0.37364562 0.46756821        nan 0.53317624 0.49191121 0.41452695
 0.42541697 0.45567887 0.58477883 0.38905245]
  warnings.warn(

2025-07-17 15:00:17,763:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 240, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__eta': 0.1, 'actual_estimator__depth': 10}
2025-07-17 15:00:17,764:INFO:Hyperparameter search completed
2025-07-17 15:00:17,764:INFO:SubProcess create_model() called ==================================
2025-07-17 15:00:17,765:INFO:Initializing create_model()
2025-07-17 15:00:17,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970E831D10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002977F68C150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 240, 'l2_leaf_reg': 5, 'eta': 0.1, 'depth': 10})
2025-07-17 15:00:17,765:INFO:Checking exceptions
2025-07-17 15:00:17,765:INFO:Importing libraries
2025-07-17 15:00:17,765:INFO:Copying training dataset
2025-07-17 15:00:17,838:INFO:Defining folds
2025-07-17 15:00:17,838:INFO:Declaring metric variables
2025-07-17 15:00:17,839:INFO:Importing untrained model
2025-07-17 15:00:17,839:INFO:Declaring custom model
2025-07-17 15:00:17,840:INFO:CatBoost Classifier Imported successfully
2025-07-17 15:00:17,840:INFO:Starting cross validation
2025-07-17 15:00:17,842:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:01:56,791:INFO:Calculating mean and std
2025-07-17 15:01:56,792:INFO:Creating metrics dataframe
2025-07-17 15:01:56,795:INFO:Finalizing model
2025-07-17 15:02:15,899:INFO:Uploading results into container
2025-07-17 15:02:15,900:INFO:Uploading model into container now
2025-07-17 15:02:15,901:INFO:_master_model_container: 8
2025-07-17 15:02:15,901:INFO:_display_container: 7
2025-07-17 15:02:15,901:INFO:<catboost.core.CatBoostClassifier object at 0x000002970ECA9950>
2025-07-17 15:02:15,902:INFO:create_model() successfully completed......................................
2025-07-17 15:02:16,034:INFO:SubProcess create_model() end ==================================
2025-07-17 15:02:16,035:INFO:choose_better activated
2025-07-17 15:02:16,035:INFO:SubProcess create_model() called ==================================
2025-07-17 15:02:16,036:INFO:Initializing create_model()
2025-07-17 15:02:16,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970EFE8090>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:02:16,036:INFO:Checking exceptions
2025-07-17 15:02:16,038:INFO:Importing libraries
2025-07-17 15:02:16,038:INFO:Copying training dataset
2025-07-17 15:02:16,103:INFO:Defining folds
2025-07-17 15:02:16,103:INFO:Declaring metric variables
2025-07-17 15:02:16,103:INFO:Importing untrained model
2025-07-17 15:02:16,103:INFO:Declaring custom model
2025-07-17 15:02:16,103:INFO:CatBoost Classifier Imported successfully
2025-07-17 15:02:16,105:INFO:Starting cross validation
2025-07-17 15:02:16,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:05:51,755:INFO:Calculating mean and std
2025-07-17 15:05:51,757:INFO:Creating metrics dataframe
2025-07-17 15:05:51,763:INFO:Finalizing model
2025-07-17 15:06:28,778:INFO:Uploading results into container
2025-07-17 15:06:28,780:INFO:Uploading model into container now
2025-07-17 15:06:28,781:INFO:_master_model_container: 9
2025-07-17 15:06:28,781:INFO:_display_container: 8
2025-07-17 15:06:28,781:INFO:<catboost.core.CatBoostClassifier object at 0x000002970E70E810>
2025-07-17 15:06:28,781:INFO:create_model() successfully completed......................................
2025-07-17 15:06:28,926:INFO:SubProcess create_model() end ==================================
2025-07-17 15:06:28,927:INFO:<catboost.core.CatBoostClassifier object at 0x000002970E70E810> result for MCC is 0.6015
2025-07-17 15:06:28,927:INFO:<catboost.core.CatBoostClassifier object at 0x000002970ECA9950> result for MCC is 0.5848
2025-07-17 15:06:28,927:INFO:<catboost.core.CatBoostClassifier object at 0x000002970E70E810> is best model
2025-07-17 15:06:28,927:INFO:choose_better completed
2025-07-17 15:06:28,928:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-07-17 15:06:28,947:INFO:_master_model_container: 9
2025-07-17 15:06:28,947:INFO:_display_container: 7
2025-07-17 15:06:28,948:INFO:<catboost.core.CatBoostClassifier object at 0x000002970E70E810>
2025-07-17 15:06:28,948:INFO:tune_model() successfully completed......................................
2025-07-17 15:06:29,080:INFO:Initializing plot_model()
2025-07-17 15:06:29,081:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:29,081:INFO:Checking exceptions
2025-07-17 15:06:29,105:INFO:Preloading libraries
2025-07-17 15:06:29,118:INFO:Copying training dataset
2025-07-17 15:06:29,118:INFO:Plot type: feature
2025-07-17 15:06:29,119:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 15:06:29,963:INFO:Saving 'Feature Importance.png'
2025-07-17 15:06:30,197:INFO:Visual Rendered Successfully
2025-07-17 15:06:30,301:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:30,303:INFO:Initializing plot_model()
2025-07-17 15:06:30,303:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:30,304:INFO:Checking exceptions
2025-07-17 15:06:30,338:INFO:Preloading libraries
2025-07-17 15:06:30,479:INFO:Copying training dataset
2025-07-17 15:06:30,479:INFO:Plot type: feature
2025-07-17 15:06:30,480:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 15:06:30,916:INFO:Saving 'Feature Importance.png'
2025-07-17 15:06:31,076:INFO:Visual Rendered Successfully
2025-07-17 15:06:31,184:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:31,185:INFO:Initializing plot_model()
2025-07-17 15:06:31,186:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970E70E810>, plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:31,186:INFO:Checking exceptions
2025-07-17 15:06:31,227:INFO:Preloading libraries
2025-07-17 15:06:31,236:INFO:Copying training dataset
2025-07-17 15:06:31,236:INFO:Plot type: feature
2025-07-17 15:06:31,236:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 15:06:31,662:INFO:Saving 'Feature Importance.png'
2025-07-17 15:06:31,833:INFO:Visual Rendered Successfully
2025-07-17 15:06:31,948:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:31,950:INFO:Initializing plot_model()
2025-07-17 15:06:31,950:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:31,951:INFO:Checking exceptions
2025-07-17 15:06:31,966:INFO:Preloading libraries
2025-07-17 15:06:31,973:INFO:Copying training dataset
2025-07-17 15:06:31,974:INFO:Plot type: confusion_matrix
2025-07-17 15:06:32,487:INFO:Fitting Model
2025-07-17 15:06:32,494:INFO:Scoring test/hold-out set
2025-07-17 15:06:32,567:INFO:Saving 'Confusion Matrix.png'
2025-07-17 15:06:32,695:INFO:Visual Rendered Successfully
2025-07-17 15:06:32,816:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:32,817:INFO:Initializing plot_model()
2025-07-17 15:06:32,818:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:32,818:INFO:Checking exceptions
2025-07-17 15:06:32,841:INFO:Preloading libraries
2025-07-17 15:06:32,969:INFO:Copying training dataset
2025-07-17 15:06:32,969:INFO:Plot type: confusion_matrix
2025-07-17 15:06:33,540:INFO:Fitting Model
2025-07-17 15:06:33,543:INFO:Scoring test/hold-out set
2025-07-17 15:06:33,545:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:06:33,545:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:06:33,545:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:06:33,906:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:06:33,906:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:06:33,907:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:06:34,577:INFO:Saving 'Confusion Matrix.png'
2025-07-17 15:06:34,743:INFO:Visual Rendered Successfully
2025-07-17 15:06:34,900:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:34,901:INFO:Initializing plot_model()
2025-07-17 15:06:34,902:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970E70E810>, plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 15:06:34,902:INFO:Checking exceptions
2025-07-17 15:06:34,918:INFO:Preloading libraries
2025-07-17 15:06:34,923:INFO:Copying training dataset
2025-07-17 15:06:34,923:INFO:Plot type: confusion_matrix
2025-07-17 15:06:35,509:INFO:Fitting Model
2025-07-17 15:06:35,525:INFO:Scoring test/hold-out set
2025-07-17 15:06:35,618:INFO:Saving 'Confusion Matrix.png'
2025-07-17 15:06:35,760:INFO:Visual Rendered Successfully
2025-07-17 15:06:35,889:INFO:plot_model() successfully completed......................................
2025-07-17 15:06:35,891:INFO:Initializing finalize_model()
2025-07-17 15:06:35,891:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 15:06:35,892:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 15:06:35,913:INFO:Initializing create_model()
2025-07-17 15:06:35,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:06:35,913:INFO:Checking exceptions
2025-07-17 15:06:35,914:INFO:Importing libraries
2025-07-17 15:06:35,915:INFO:Copying training dataset
2025-07-17 15:06:35,919:INFO:Defining folds
2025-07-17 15:06:35,919:INFO:Declaring metric variables
2025-07-17 15:06:35,920:INFO:Importing untrained model
2025-07-17 15:06:35,920:INFO:Declaring custom model
2025-07-17 15:06:35,922:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 15:06:35,923:INFO:Cross validation set to False
2025-07-17 15:06:35,924:INFO:Fitting Model
2025-07-17 15:06:37,915:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 15:06:37,915:INFO:create_model() successfully completed......................................
2025-07-17 15:06:38,033:INFO:_master_model_container: 9
2025-07-17 15:06:38,034:INFO:_display_container: 7
2025-07-17 15:06:38,061:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 15:06:38,061:INFO:finalize_model() successfully completed......................................
2025-07-17 15:06:38,199:INFO:Initializing finalize_model()
2025-07-17 15:06:38,199:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 15:06:38,201:INFO:Finalizing LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 15:06:38,228:INFO:Initializing create_model()
2025-07-17 15:06:38,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:06:38,228:INFO:Checking exceptions
2025-07-17 15:06:38,231:INFO:Importing libraries
2025-07-17 15:06:38,231:INFO:Copying training dataset
2025-07-17 15:06:38,234:INFO:Defining folds
2025-07-17 15:06:38,234:INFO:Declaring metric variables
2025-07-17 15:06:38,235:INFO:Importing untrained model
2025-07-17 15:06:38,235:INFO:Declaring custom model
2025-07-17 15:06:38,239:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 15:06:38,242:INFO:Cross validation set to False
2025-07-17 15:06:38,242:INFO:Fitting Model
2025-07-17 15:06:39,396:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:06:39,396:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:06:39,396:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:06:39,502:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 15:06:39,502:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:06:39,503:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:06:39,503:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:06:39,503:INFO:[LightGBM] [Info] Number of positive: 129336, number of negative: 129336
2025-07-17 15:06:39,512:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.005853 seconds.
2025-07-17 15:06:39,512:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 15:06:39,512:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 15:06:39,513:INFO:[LightGBM] [Info] Number of data points in the train set: 258672, number of used features: 5
2025-07-17 15:06:39,517:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 15:06:47,255:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:06:47,256:INFO:create_model() successfully completed......................................
2025-07-17 15:06:47,386:INFO:_master_model_container: 9
2025-07-17 15:06:47,386:INFO:_display_container: 7
2025-07-17 15:06:47,409:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:06:47,410:INFO:finalize_model() successfully completed......................................
2025-07-17 15:06:47,532:INFO:Initializing finalize_model()
2025-07-17 15:06:47,532:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970E70E810>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 15:06:47,532:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x000002970E70E810>
2025-07-17 15:06:47,566:INFO:Initializing create_model()
2025-07-17 15:06:47,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=<catboost.core.CatBoostClassifier object at 0x000002970E70E810>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:06:47,566:INFO:Checking exceptions
2025-07-17 15:06:47,568:INFO:Importing libraries
2025-07-17 15:06:47,568:INFO:Copying training dataset
2025-07-17 15:06:47,570:INFO:Defining folds
2025-07-17 15:06:47,570:INFO:Declaring metric variables
2025-07-17 15:06:47,571:INFO:Importing untrained model
2025-07-17 15:06:47,571:INFO:Declaring custom model
2025-07-17 15:06:47,572:INFO:CatBoost Classifier Imported successfully
2025-07-17 15:06:47,574:INFO:Cross validation set to False
2025-07-17 15:06:47,575:INFO:Fitting Model
2025-07-17 15:07:37,261:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002970231B750>)],
         verbose=False)
2025-07-17 15:07:37,262:INFO:create_model() successfully completed......................................
2025-07-17 15:07:37,415:INFO:_master_model_container: 9
2025-07-17 15:07:37,415:INFO:_display_container: 7
2025-07-17 15:07:37,429:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002970231B750>)],
         verbose=False)
2025-07-17 15:07:37,430:INFO:finalize_model() successfully completed......................................
2025-07-17 15:07:37,615:INFO:Initializing blend_models()
2025-07-17 15:07:37,616:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator_list=[Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002970231B750>)],
         verbose=False)], fold=5, round=4, choose_better=True, optimize=AUC, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2025-07-17 15:07:37,616:INFO:Checking exceptions
2025-07-17 15:07:37,640:INFO:Importing libraries
2025-07-17 15:07:37,640:INFO:Copying training dataset
2025-07-17 15:07:37,640:INFO:Getting model names
2025-07-17 15:07:37,644:INFO:SubProcess create_model() called ==================================
2025-07-17 15:07:37,763:INFO:Initializing create_model()
2025-07-17 15:07:37,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x000002970231B750>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002970ECAA850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:07:37,763:INFO:Checking exceptions
2025-07-17 15:07:37,763:INFO:Importing libraries
2025-07-17 15:07:37,763:INFO:Copying training dataset
2025-07-17 15:07:37,833:INFO:Defining folds
2025-07-17 15:07:37,834:INFO:Declaring metric variables
2025-07-17 15:07:37,834:INFO:Importing untrained model
2025-07-17 15:07:37,834:INFO:Declaring custom model
2025-07-17 15:07:37,851:INFO:Voting Classifier Imported successfully
2025-07-17 15:07:37,852:INFO:Starting cross validation
2025-07-17 15:07:37,856:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:09:33,313:INFO:Calculating mean and std
2025-07-17 15:09:33,314:INFO:Creating metrics dataframe
2025-07-17 15:09:33,317:INFO:Finalizing model
2025-07-17 15:10:14,569:INFO:Uploading results into container
2025-07-17 15:10:14,570:INFO:Uploading model into container now
2025-07-17 15:10:14,571:INFO:_master_model_container: 10
2025-07-17 15:10:14,571:INFO:_display_container: 8
2025-07-17 15:10:14,745:INFO:VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x0000029702346C90>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2025-07-17 15:10:14,745:INFO:create_model() successfully completed......................................
2025-07-17 15:10:14,867:INFO:SubProcess create_model() end ==================================
2025-07-17 15:10:14,868:INFO:choose_better activated
2025-07-17 15:10:14,970:INFO:VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x0000029702346C90>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None) result for AUC is 0.8437
2025-07-17 15:10:14,970:INFO:SubProcess create_model() called ==================================
2025-07-17 15:10:14,986:INFO:Initializing create_model()
2025-07-17 15:10:14,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:10:14,986:INFO:Checking exceptions
2025-07-17 15:10:14,988:INFO:Importing libraries
2025-07-17 15:10:14,989:INFO:Copying training dataset
2025-07-17 15:10:15,053:INFO:Defining folds
2025-07-17 15:10:15,053:INFO:Declaring metric variables
2025-07-17 15:10:15,053:INFO:Importing untrained model
2025-07-17 15:10:15,053:INFO:Declaring custom model
2025-07-17 15:10:15,058:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 15:10:15,058:INFO:Starting cross validation
2025-07-17 15:10:15,061:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:10:18,645:INFO:Calculating mean and std
2025-07-17 15:10:18,645:INFO:Creating metrics dataframe
2025-07-17 15:10:18,649:INFO:Finalizing model
2025-07-17 15:10:20,374:INFO:Uploading results into container
2025-07-17 15:10:20,375:INFO:Uploading model into container now
2025-07-17 15:10:20,376:INFO:_master_model_container: 11
2025-07-17 15:10:20,376:INFO:_display_container: 9
2025-07-17 15:10:20,399:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 15:10:20,400:INFO:create_model() successfully completed......................................
2025-07-17 15:10:20,525:INFO:SubProcess create_model() end ==================================
2025-07-17 15:10:20,557:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False) result for AUC is 0.9081
2025-07-17 15:10:20,558:INFO:SubProcess create_model() called ==================================
2025-07-17 15:10:20,576:INFO:Initializing create_model()
2025-07-17 15:10:20,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:10:20,576:INFO:Checking exceptions
2025-07-17 15:10:20,577:INFO:Importing libraries
2025-07-17 15:10:20,577:INFO:Copying training dataset
2025-07-17 15:10:20,649:INFO:Defining folds
2025-07-17 15:10:20,650:INFO:Declaring metric variables
2025-07-17 15:10:20,650:INFO:Importing untrained model
2025-07-17 15:10:20,651:INFO:Declaring custom model
2025-07-17 15:10:20,655:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 15:10:20,656:INFO:Starting cross validation
2025-07-17 15:10:20,657:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:10:53,396:INFO:Calculating mean and std
2025-07-17 15:10:53,396:INFO:Creating metrics dataframe
2025-07-17 15:10:53,399:INFO:Finalizing model
2025-07-17 15:10:54,504:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:10:54,504:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:10:54,504:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:10:54,639:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 15:10:54,641:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:10:54,641:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:10:54,641:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:10:54,642:INFO:[LightGBM] [Info] Number of positive: 90535, number of negative: 90535
2025-07-17 15:10:54,650:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.006313 seconds.
2025-07-17 15:10:54,651:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 15:10:54,651:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 15:10:54,651:INFO:[LightGBM] [Info] Number of data points in the train set: 181070, number of used features: 5
2025-07-17 15:10:54,656:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 15:11:03,830:INFO:Uploading results into container
2025-07-17 15:11:03,832:INFO:Uploading model into container now
2025-07-17 15:11:03,832:INFO:_master_model_container: 12
2025-07-17 15:11:03,833:INFO:_display_container: 9
2025-07-17 15:11:03,861:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:11:03,861:INFO:create_model() successfully completed......................................
2025-07-17 15:11:03,980:INFO:SubProcess create_model() end ==================================
2025-07-17 15:11:04,009:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False) result for AUC is 0.9227
2025-07-17 15:11:04,009:INFO:SubProcess create_model() called ==================================
2025-07-17 15:11:04,022:INFO:Initializing create_model()
2025-07-17 15:11:04,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x000002970231B750>)],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:11:04,022:INFO:Checking exceptions
2025-07-17 15:11:04,024:INFO:Importing libraries
2025-07-17 15:11:04,024:INFO:Copying training dataset
2025-07-17 15:11:04,073:INFO:Defining folds
2025-07-17 15:11:04,074:INFO:Declaring metric variables
2025-07-17 15:11:04,074:INFO:Importing untrained model
2025-07-17 15:11:04,074:INFO:Declaring custom model
2025-07-17 15:11:04,080:INFO:CatBoost Classifier Imported successfully
2025-07-17 15:11:04,080:INFO:Starting cross validation
2025-07-17 15:11:04,083:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 15:12:58,475:INFO:Calculating mean and std
2025-07-17 15:12:58,476:INFO:Creating metrics dataframe
2025-07-17 15:12:58,480:INFO:Finalizing model
2025-07-17 15:13:38,237:INFO:Uploading results into container
2025-07-17 15:13:38,239:INFO:Uploading model into container now
2025-07-17 15:13:38,240:INFO:_master_model_container: 13
2025-07-17 15:13:38,240:INFO:_display_container: 9
2025-07-17 15:13:38,258:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000029703913910>)],
         verbose=False)
2025-07-17 15:13:38,258:INFO:create_model() successfully completed......................................
2025-07-17 15:13:38,391:INFO:SubProcess create_model() end ==================================
2025-07-17 15:13:38,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000029703913910>)],
         verbose=False) result for AUC is 0.9114
2025-07-17 15:13:38,426:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False) is best model
2025-07-17 15:13:38,427:INFO:choose_better completed
2025-07-17 15:13:38,428:INFO:Original model was better than the blended model, hence it will be returned. NOTE: The display metrics are for the blended model (not the original one).
2025-07-17 15:13:38,429:INFO:_master_model_container: 13
2025-07-17 15:13:38,429:INFO:_display_container: 8
2025-07-17 15:13:38,453:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:13:38,453:INFO:blend_models() successfully completed......................................
2025-07-17 15:13:38,586:INFO:Initializing finalize_model()
2025-07-17 15:13:38,586:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 15:13:38,605:INFO:Finalizing Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:13:38,634:INFO:Initializing create_model()
2025-07-17 15:13:38,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002977ED75810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 15:13:38,634:INFO:Checking exceptions
2025-07-17 15:13:38,636:INFO:Importing libraries
2025-07-17 15:13:38,636:INFO:Copying training dataset
2025-07-17 15:13:38,637:INFO:Defining folds
2025-07-17 15:13:38,637:INFO:Declaring metric variables
2025-07-17 15:13:38,637:INFO:Importing untrained model
2025-07-17 15:13:38,638:INFO:Declaring custom model
2025-07-17 15:13:38,642:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 15:13:38,644:INFO:Cross validation set to False
2025-07-17 15:13:38,644:INFO:Fitting Model
2025-07-17 15:13:39,925:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:13:39,925:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:13:39,925:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:13:40,082:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 15:13:40,082:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 15:13:40,082:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 15:13:40,083:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 15:13:40,089:INFO:[LightGBM] [Info] Number of positive: 129336, number of negative: 129336
2025-07-17 15:13:40,099:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002844 seconds.
2025-07-17 15:13:40,099:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-17 15:13:40,099:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-17 15:13:40,099:INFO:[LightGBM] [Info] Total Bins 1275
2025-07-17 15:13:40,100:INFO:[LightGBM] [Info] Number of data points in the train set: 258672, number of used features: 5
2025-07-17 15:13:40,105:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 15:13:50,282:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:13:50,282:INFO:create_model() successfully completed......................................
2025-07-17 15:13:50,423:INFO:_master_model_container: 13
2025-07-17 15:13:50,423:INFO:_display_container: 8
2025-07-17 15:13:50,452:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:13:50,453:INFO:finalize_model() successfully completed......................................
2025-07-17 15:13:50,621:INFO:Initializing save_model()
2025-07-17 15:13:50,622:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 15:13:50,622:INFO:Adding model into prep_pipe
2025-07-17 15:13:50,622:WARNING:Only Model saved as it was a pipeline.
2025-07-17 15:13:54,297:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend.pkl saved in current working directory
2025-07-17 15:13:54,322:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 15:13:54,322:INFO:save_model() successfully completed......................................
2025-07-17 15:49:53,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 15:49:53,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 15:49:53,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 15:49:53,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 15:50:34,618:INFO:Initializing load_model()
2025-07-17 15:50:34,622:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend, platform=None, authentication=None, verbose=True)
2025-07-17 15:50:44,791:INFO:Initializing predict_model()
2025-07-17 15:50:44,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E5D7AFDD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.4, bagging_freq=3,
                                feature_fraction=0.9, learning_rate=0.05,
                                min_child_samples=81, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                random_state=109, reg_alpha=2,
                                reg_lambda=0.5))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E5F079EE0>)
2025-07-17 15:50:44,793:INFO:Checking exceptions
2025-07-17 15:50:44,793:INFO:Preloading libraries
2025-07-17 15:50:44,793:INFO:Set up data.
2025-07-17 15:50:44,806:INFO:Set up index.
2025-07-17 17:19:14,445:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 17:19:14,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 17:19:14,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 17:19:14,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-17 17:20:00,675:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:113: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-17 17:20:13,943:INFO:PyCaret ClassificationExperiment
2025-07-17 17:20:13,944:INFO:Logging name: clf-default-name
2025-07-17 17:20:13,945:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-17 17:20:13,945:INFO:version 3.3.2
2025-07-17 17:20:13,946:INFO:Initializing setup()
2025-07-17 17:20:13,946:INFO:self.USI: 7b6a
2025-07-17 17:20:13,947:INFO:self._variable_keys: {'gpu_n_jobs_param', 'seed', 'memory', 'X_train', 'exp_name_log', 'pipeline', 'y', 'fold_shuffle_param', 'y_test', 'is_multiclass', 'USI', 'idx', '_available_plots', 'target_param', 'fold_groups_param', 'log_plots_param', 'exp_id', 'html_param', 'fix_imbalance', '_ml_usecase', 'data', 'fold_generator', 'logging_param', 'X', 'gpu_param', 'X_test', 'y_train', 'n_jobs_param'}
2025-07-17 17:20:13,947:INFO:Checking environment
2025-07-17 17:20:13,948:INFO:python_version: 3.11.9
2025-07-17 17:20:13,948:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-17 17:20:13,948:INFO:machine: AMD64
2025-07-17 17:20:13,994:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-17 17:20:14,003:INFO:Memory: svmem(total=16844595200, available=1470193664, percent=91.3, used=15374401536, free=1470193664)
2025-07-17 17:20:14,005:INFO:Physical Core: 4
2025-07-17 17:20:14,006:INFO:Logical Core: 8
2025-07-17 17:20:14,007:INFO:Checking libraries
2025-07-17 17:20:14,008:INFO:System:
2025-07-17 17:20:14,009:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-17 17:20:14,010:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-17 17:20:14,011:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-17 17:20:14,011:INFO:PyCaret required dependencies:
2025-07-17 17:20:14,141:INFO:                 pip: 25.1.1
2025-07-17 17:20:14,142:INFO:          setuptools: 65.5.0
2025-07-17 17:20:14,142:INFO:             pycaret: 3.3.2
2025-07-17 17:20:14,142:INFO:             IPython: 9.3.0
2025-07-17 17:20:14,143:INFO:          ipywidgets: 8.1.7
2025-07-17 17:20:14,143:INFO:                tqdm: 4.67.1
2025-07-17 17:20:14,143:INFO:               numpy: 1.26.4
2025-07-17 17:20:14,143:INFO:              pandas: 2.1.4
2025-07-17 17:20:14,143:INFO:              jinja2: 3.1.6
2025-07-17 17:20:14,144:INFO:               scipy: 1.11.4
2025-07-17 17:20:14,144:INFO:              joblib: 1.3.2
2025-07-17 17:20:14,144:INFO:             sklearn: 1.4.2
2025-07-17 17:20:14,144:INFO:                pyod: 2.0.5
2025-07-17 17:20:14,145:INFO:            imblearn: 0.13.0
2025-07-17 17:20:14,145:INFO:   category_encoders: 2.7.0
2025-07-17 17:20:14,145:INFO:            lightgbm: 4.6.0
2025-07-17 17:20:14,145:INFO:               numba: 0.61.2
2025-07-17 17:20:14,145:INFO:            requests: 2.32.4
2025-07-17 17:20:14,145:INFO:          matplotlib: 3.7.5
2025-07-17 17:20:14,145:INFO:          scikitplot: 0.3.7
2025-07-17 17:20:14,145:INFO:         yellowbrick: 1.5
2025-07-17 17:20:14,145:INFO:              plotly: 5.24.1
2025-07-17 17:20:14,145:INFO:    plotly-resampler: Not installed
2025-07-17 17:20:14,145:INFO:             kaleido: 1.0.0
2025-07-17 17:20:14,145:INFO:           schemdraw: 0.15
2025-07-17 17:20:14,145:INFO:         statsmodels: 0.14.4
2025-07-17 17:20:14,145:INFO:              sktime: 0.26.0
2025-07-17 17:20:14,145:INFO:               tbats: 1.1.3
2025-07-17 17:20:14,145:INFO:            pmdarima: 2.0.4
2025-07-17 17:20:14,145:INFO:              psutil: 7.0.0
2025-07-17 17:20:14,145:INFO:          markupsafe: 3.0.2
2025-07-17 17:20:14,145:INFO:             pickle5: Not installed
2025-07-17 17:20:14,145:INFO:         cloudpickle: 3.1.1
2025-07-17 17:20:14,145:INFO:         deprecation: 2.1.0
2025-07-17 17:20:14,145:INFO:              xxhash: 3.5.0
2025-07-17 17:20:14,145:INFO:           wurlitzer: Not installed
2025-07-17 17:20:14,145:INFO:PyCaret optional dependencies:
2025-07-17 17:20:14,218:INFO:                shap: 0.48.0
2025-07-17 17:20:14,218:INFO:           interpret: Not installed
2025-07-17 17:20:14,218:INFO:                umap: Not installed
2025-07-17 17:20:14,218:INFO:     ydata_profiling: Not installed
2025-07-17 17:20:14,218:INFO:  explainerdashboard: Not installed
2025-07-17 17:20:14,218:INFO:             autoviz: Not installed
2025-07-17 17:20:14,218:INFO:           fairlearn: Not installed
2025-07-17 17:20:14,218:INFO:          deepchecks: Not installed
2025-07-17 17:20:14,218:INFO:             xgboost: 3.0.2
2025-07-17 17:20:14,218:INFO:            catboost: 1.2.8
2025-07-17 17:20:14,218:INFO:              kmodes: Not installed
2025-07-17 17:20:14,218:INFO:             mlxtend: Not installed
2025-07-17 17:20:14,218:INFO:       statsforecast: Not installed
2025-07-17 17:20:14,218:INFO:        tune_sklearn: Not installed
2025-07-17 17:20:14,218:INFO:                 ray: Not installed
2025-07-17 17:20:14,219:INFO:            hyperopt: Not installed
2025-07-17 17:20:14,219:INFO:              optuna: Not installed
2025-07-17 17:20:14,219:INFO:               skopt: Not installed
2025-07-17 17:20:14,219:INFO:              mlflow: Not installed
2025-07-17 17:20:14,219:INFO:              gradio: Not installed
2025-07-17 17:20:14,219:INFO:             fastapi: Not installed
2025-07-17 17:20:14,219:INFO:             uvicorn: Not installed
2025-07-17 17:20:14,219:INFO:              m2cgen: Not installed
2025-07-17 17:20:14,219:INFO:           evidently: Not installed
2025-07-17 17:20:14,219:INFO:               fugue: Not installed
2025-07-17 17:20:14,219:INFO:           streamlit: Not installed
2025-07-17 17:20:14,219:INFO:             prophet: Not installed
2025-07-17 17:20:14,219:INFO:None
2025-07-17 17:20:14,219:INFO:Set up data.
2025-07-17 17:20:14,223:INFO:Set up folding strategy.
2025-07-17 17:20:14,224:INFO:Set up train/test split.
2025-07-17 17:20:14,233:INFO:Set up index.
2025-07-17 17:20:14,234:INFO:Assigning column types.
2025-07-17 17:20:14,237:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-17 17:20:14,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,313:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,314:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,547:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,579:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,586:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,587:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-17 17:20:14,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,643:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,646:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-17 17:20:14,705:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,707:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,708:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-17 17:20:14,771:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,773:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,876:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:14,881:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:14,890:INFO:Preparing preprocessing pipeline...
2025-07-17 17:20:14,895:INFO:Set up simple imputation.
2025-07-17 17:20:14,900:INFO:Set up encoding of categorical features.
2025-07-17 17:20:14,900:INFO:Set up imbalanced handling.
2025-07-17 17:20:14,901:INFO:Set up column name cleaning.
2025-07-17 17:20:15,053:INFO:Finished creating preprocessing pipeline.
2025-07-17 17:20:15,061:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-17 17:20:15,061:INFO:Creating final display dataframe.
2025-07-17 17:20:15,219:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (35035, 6)
4        Transformed data shape        (52445, 6)
5   Transformed train set shape        (41934, 6)
6    Transformed test set shape        (10511, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              7b6a
2025-07-17 17:20:15,338:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:15,343:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:15,450:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-17 17:20:15,453:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-17 17:20:15,454:INFO:setup() successfully completed in 1.66s...............
2025-07-17 17:20:15,455:INFO:Initializing create_model()
2025-07-17 17:20:15,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:20:15,455:INFO:Checking exceptions
2025-07-17 17:20:15,457:INFO:Importing libraries
2025-07-17 17:20:15,457:INFO:Copying training dataset
2025-07-17 17:20:15,463:INFO:Defining folds
2025-07-17 17:20:15,463:INFO:Declaring metric variables
2025-07-17 17:20:15,463:INFO:Importing untrained model
2025-07-17 17:20:15,464:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 17:20:15,464:INFO:Starting cross validation
2025-07-17 17:20:15,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:20:36,104:INFO:Calculating mean and std
2025-07-17 17:20:36,107:INFO:Creating metrics dataframe
2025-07-17 17:20:36,111:INFO:Finalizing model
2025-07-17 17:20:36,744:INFO:Uploading results into container
2025-07-17 17:20:36,745:INFO:Uploading model into container now
2025-07-17 17:20:36,762:INFO:_master_model_container: 1
2025-07-17 17:20:36,763:INFO:_display_container: 2
2025-07-17 17:20:36,764:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 17:20:36,765:INFO:create_model() successfully completed......................................
2025-07-17 17:20:36,969:INFO:Initializing create_model()
2025-07-17 17:20:36,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:20:36,972:INFO:Checking exceptions
2025-07-17 17:20:36,973:INFO:Importing libraries
2025-07-17 17:20:36,974:INFO:Copying training dataset
2025-07-17 17:20:36,982:INFO:Defining folds
2025-07-17 17:20:36,983:INFO:Declaring metric variables
2025-07-17 17:20:36,983:INFO:Importing untrained model
2025-07-17 17:20:36,983:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 17:20:36,984:INFO:Starting cross validation
2025-07-17 17:20:36,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:20:40,351:INFO:Calculating mean and std
2025-07-17 17:20:40,351:INFO:Creating metrics dataframe
2025-07-17 17:20:40,354:INFO:Finalizing model
2025-07-17 17:20:40,575:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 17:20:40,576:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 17:20:40,578:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001466 seconds.
2025-07-17 17:20:40,578:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 17:20:40,581:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 17:20:40,581:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 17:20:40,582:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 17:20:40,865:INFO:Uploading results into container
2025-07-17 17:20:40,866:INFO:Uploading model into container now
2025-07-17 17:20:40,867:INFO:_master_model_container: 2
2025-07-17 17:20:40,867:INFO:_display_container: 3
2025-07-17 17:20:40,868:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 17:20:40,868:INFO:create_model() successfully completed......................................
2025-07-17 17:20:40,960:INFO:Initializing create_model()
2025-07-17 17:20:40,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:20:40,960:INFO:Checking exceptions
2025-07-17 17:20:40,962:INFO:Importing libraries
2025-07-17 17:20:40,962:INFO:Copying training dataset
2025-07-17 17:20:40,976:INFO:Defining folds
2025-07-17 17:20:40,976:INFO:Declaring metric variables
2025-07-17 17:20:40,976:INFO:Importing untrained model
2025-07-17 17:20:40,977:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:20:40,977:INFO:Starting cross validation
2025-07-17 17:20:40,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:22:25,393:INFO:Calculating mean and std
2025-07-17 17:22:25,396:INFO:Creating metrics dataframe
2025-07-17 17:22:25,400:INFO:Finalizing model
2025-07-17 17:22:45,480:INFO:Uploading results into container
2025-07-17 17:22:45,481:INFO:Uploading model into container now
2025-07-17 17:22:45,495:INFO:_master_model_container: 3
2025-07-17 17:22:45,495:INFO:_display_container: 4
2025-07-17 17:22:45,495:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F2A25E490>
2025-07-17 17:22:45,495:INFO:create_model() successfully completed......................................
2025-07-17 17:22:45,633:INFO:Initializing tune_model()
2025-07-17 17:22:45,633:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, n_iter=5, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 17:22:45,633:INFO:Checking exceptions
2025-07-17 17:22:45,652:INFO:Copying training dataset
2025-07-17 17:22:45,665:INFO:Checking base model
2025-07-17 17:22:45,666:INFO:Base model : Extreme Gradient Boosting
2025-07-17 17:22:45,667:INFO:Declaring metric variables
2025-07-17 17:22:45,668:INFO:Defining Hyperparameters
2025-07-17 17:22:45,769:INFO:Tuning with n_jobs=-1
2025-07-17 17:22:45,769:INFO:Initializing RandomizedSearchCV
2025-07-17 17:23:20,385:INFO:best_params: {'actual_estimator__subsample': 0.7, 'actual_estimator__scale_pos_weight': 16.400000000000002, 'actual_estimator__reg_lambda': 10, 'actual_estimator__reg_alpha': 0.001, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_child_weight': 2, 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__colsample_bytree': 1}
2025-07-17 17:23:20,386:INFO:Hyperparameter search completed
2025-07-17 17:23:20,386:INFO:SubProcess create_model() called ==================================
2025-07-17 17:23:20,388:INFO:Initializing create_model()
2025-07-17 17:23:20,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F2A24E1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.7, 'scale_pos_weight': 16.400000000000002, 'reg_lambda': 10, 'reg_alpha': 0.001, 'n_estimators': 230, 'min_child_weight': 2, 'max_depth': 9, 'learning_rate': 0.2, 'colsample_bytree': 1})
2025-07-17 17:23:20,389:INFO:Checking exceptions
2025-07-17 17:23:20,389:INFO:Importing libraries
2025-07-17 17:23:20,389:INFO:Copying training dataset
2025-07-17 17:23:20,403:INFO:Defining folds
2025-07-17 17:23:20,403:INFO:Declaring metric variables
2025-07-17 17:23:20,403:INFO:Importing untrained model
2025-07-17 17:23:20,403:INFO:Declaring custom model
2025-07-17 17:23:20,407:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 17:23:20,407:INFO:Starting cross validation
2025-07-17 17:23:20,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:23:33,139:INFO:Calculating mean and std
2025-07-17 17:23:33,141:INFO:Creating metrics dataframe
2025-07-17 17:23:33,144:INFO:Finalizing model
2025-07-17 17:23:34,930:INFO:Uploading results into container
2025-07-17 17:23:34,931:INFO:Uploading model into container now
2025-07-17 17:23:34,932:INFO:_master_model_container: 4
2025-07-17 17:23:34,933:INFO:_display_container: 5
2025-07-17 17:23:34,934:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 17:23:34,936:INFO:create_model() successfully completed......................................
2025-07-17 17:23:35,059:INFO:SubProcess create_model() end ==================================
2025-07-17 17:23:35,059:INFO:choose_better activated
2025-07-17 17:23:35,060:INFO:SubProcess create_model() called ==================================
2025-07-17 17:23:35,062:INFO:Initializing create_model()
2025-07-17 17:23:35,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:23:35,063:INFO:Checking exceptions
2025-07-17 17:23:35,064:INFO:Importing libraries
2025-07-17 17:23:35,064:INFO:Copying training dataset
2025-07-17 17:23:35,078:INFO:Defining folds
2025-07-17 17:23:35,079:INFO:Declaring metric variables
2025-07-17 17:23:35,080:INFO:Importing untrained model
2025-07-17 17:23:35,081:INFO:Declaring custom model
2025-07-17 17:23:35,084:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 17:23:35,085:INFO:Starting cross validation
2025-07-17 17:23:35,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:23:37,345:INFO:Calculating mean and std
2025-07-17 17:23:37,346:INFO:Creating metrics dataframe
2025-07-17 17:23:37,349:INFO:Finalizing model
2025-07-17 17:23:37,797:INFO:Uploading results into container
2025-07-17 17:23:37,799:INFO:Uploading model into container now
2025-07-17 17:23:37,800:INFO:_master_model_container: 5
2025-07-17 17:23:37,800:INFO:_display_container: 6
2025-07-17 17:23:37,803:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 17:23:37,803:INFO:create_model() successfully completed......................................
2025-07-17 17:23:37,911:INFO:SubProcess create_model() end ==================================
2025-07-17 17:23:37,912:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5546
2025-07-17 17:23:37,913:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...) result for MCC is 0.5596
2025-07-17 17:23:37,914:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...) is best model
2025-07-17 17:23:37,914:INFO:choose_better completed
2025-07-17 17:23:37,926:INFO:_master_model_container: 5
2025-07-17 17:23:37,926:INFO:_display_container: 5
2025-07-17 17:23:37,927:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 17:23:37,927:INFO:tune_model() successfully completed......................................
2025-07-17 17:23:38,040:INFO:Initializing tune_model()
2025-07-17 17:23:38,040:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=5, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=False, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 17:23:38,040:INFO:Checking exceptions
2025-07-17 17:23:38,048:INFO:Copying training dataset
2025-07-17 17:23:38,053:INFO:Checking base model
2025-07-17 17:23:38,053:INFO:Base model : Light Gradient Boosting Machine
2025-07-17 17:23:38,054:INFO:Declaring metric variables
2025-07-17 17:23:38,054:INFO:Defining Hyperparameters
2025-07-17 17:23:38,141:INFO:Tuning with n_jobs=-1
2025-07-17 17:23:38,141:INFO:Initializing RandomizedSearchCV
2025-07-17 17:25:06,862:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-17 17:25:06,862:INFO:Hyperparameter search completed
2025-07-17 17:25:06,862:INFO:SubProcess create_model() called ==================================
2025-07-17 17:25:06,864:INFO:Initializing create_model()
2025-07-17 17:25:06,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F291C2D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-17 17:25:06,865:INFO:Checking exceptions
2025-07-17 17:25:06,865:INFO:Importing libraries
2025-07-17 17:25:06,865:INFO:Copying training dataset
2025-07-17 17:25:06,884:INFO:Defining folds
2025-07-17 17:25:06,884:INFO:Declaring metric variables
2025-07-17 17:25:06,884:INFO:Importing untrained model
2025-07-17 17:25:06,884:INFO:Declaring custom model
2025-07-17 17:25:06,886:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 17:25:06,886:INFO:Starting cross validation
2025-07-17 17:25:06,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:25:28,026:INFO:Calculating mean and std
2025-07-17 17:25:28,026:INFO:Creating metrics dataframe
2025-07-17 17:25:28,029:INFO:Finalizing model
2025-07-17 17:25:28,258:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:25:28,258:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:25:28,259:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:25:28,290:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 17:25:28,291:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:25:28,291:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:25:28,292:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:25:28,292:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 17:25:28,294:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001867 seconds.
2025-07-17 17:25:28,294:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 17:25:28,294:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 17:25:28,295:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 17:25:28,298:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 17:25:28,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:28,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:29,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:25:30,844:INFO:Uploading results into container
2025-07-17 17:25:30,845:INFO:Uploading model into container now
2025-07-17 17:25:30,846:INFO:_master_model_container: 6
2025-07-17 17:25:30,846:INFO:_display_container: 6
2025-07-17 17:25:30,847:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 17:25:30,847:INFO:create_model() successfully completed......................................
2025-07-17 17:25:30,958:INFO:SubProcess create_model() end ==================================
2025-07-17 17:25:30,959:INFO:choose_better activated
2025-07-17 17:25:30,959:INFO:SubProcess create_model() called ==================================
2025-07-17 17:25:30,960:INFO:Initializing create_model()
2025-07-17 17:25:30,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:25:30,961:INFO:Checking exceptions
2025-07-17 17:25:30,962:INFO:Importing libraries
2025-07-17 17:25:30,962:INFO:Copying training dataset
2025-07-17 17:25:30,978:INFO:Defining folds
2025-07-17 17:25:30,978:INFO:Declaring metric variables
2025-07-17 17:25:30,978:INFO:Importing untrained model
2025-07-17 17:25:30,979:INFO:Declaring custom model
2025-07-17 17:25:30,980:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 17:25:30,981:INFO:Starting cross validation
2025-07-17 17:25:30,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:25:35,920:INFO:Calculating mean and std
2025-07-17 17:25:35,921:INFO:Creating metrics dataframe
2025-07-17 17:25:35,925:INFO:Finalizing model
2025-07-17 17:25:36,204:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 17:25:36,204:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 17:25:36,206:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001169 seconds.
2025-07-17 17:25:36,206:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 17:25:36,206:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 17:25:36,206:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 17:25:36,207:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 17:25:36,681:INFO:Uploading results into container
2025-07-17 17:25:36,682:INFO:Uploading model into container now
2025-07-17 17:25:36,682:INFO:_master_model_container: 7
2025-07-17 17:25:36,682:INFO:_display_container: 7
2025-07-17 17:25:36,683:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 17:25:36,684:INFO:create_model() successfully completed......................................
2025-07-17 17:25:36,780:INFO:SubProcess create_model() end ==================================
2025-07-17 17:25:36,782:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5138
2025-07-17 17:25:36,783:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5438
2025-07-17 17:25:36,785:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-17 17:25:36,785:INFO:choose_better completed
2025-07-17 17:25:36,785:INFO:_master_model_container: 7
2025-07-17 17:25:36,785:INFO:_display_container: 6
2025-07-17 17:25:36,787:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 17:25:36,787:INFO:tune_model() successfully completed......................................
2025-07-17 17:25:36,888:INFO:Initializing tune_model()
2025-07-17 17:25:36,888:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F2A25E490>, fold=None, round=4, n_iter=5, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-17 17:25:36,889:INFO:Checking exceptions
2025-07-17 17:25:36,897:INFO:Copying training dataset
2025-07-17 17:25:36,913:INFO:Checking base model
2025-07-17 17:25:36,913:INFO:Base model : CatBoost Classifier
2025-07-17 17:25:36,914:INFO:Declaring metric variables
2025-07-17 17:25:36,914:INFO:Defining Hyperparameters
2025-07-17 17:25:37,080:INFO:Tuning with n_jobs=-1
2025-07-17 17:25:37,081:INFO:Initializing RandomizedSearchCV
2025-07-17 17:26:52,616:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
10 fits failed out of a total of 50.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2395, in _fit
    train_params = self._prepare_train_params(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\catboost\core.py", line 2321, in _prepare_train_params
    _check_train_params(params)
  File "_catboost.pyx", line 6601, in _catboost._check_train_params
  File "_catboost.pyx", line 6623, in _catboost._check_train_params
_catboost.CatBoostError: catboost/private/libs/options/boosting_options.cpp:79: Learning rate should be non-zero

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-07-17 17:26:52,622:WARNING:C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Lib\site-packages\sklearn\model_selection\_search.py:1051: UserWarning: One or more of the test scores are non-finite: [0.39960379 0.463479          nan 0.46762657 0.56492423]
  warnings.warn(

2025-07-17 17:26:52,623:INFO:best_params: {'actual_estimator__random_strength': 0.2, 'actual_estimator__n_estimators': 240, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__eta': 0.1, 'actual_estimator__depth': 10}
2025-07-17 17:26:52,623:INFO:Hyperparameter search completed
2025-07-17 17:26:52,623:INFO:SubProcess create_model() called ==================================
2025-07-17 17:26:52,624:INFO:Initializing create_model()
2025-07-17 17:26:52,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F31603890>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F315AA210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.2, 'n_estimators': 240, 'l2_leaf_reg': 5, 'eta': 0.1, 'depth': 10})
2025-07-17 17:26:52,624:INFO:Checking exceptions
2025-07-17 17:26:52,624:INFO:Importing libraries
2025-07-17 17:26:52,624:INFO:Copying training dataset
2025-07-17 17:26:52,639:INFO:Defining folds
2025-07-17 17:26:52,639:INFO:Declaring metric variables
2025-07-17 17:26:52,639:INFO:Importing untrained model
2025-07-17 17:26:52,639:INFO:Declaring custom model
2025-07-17 17:26:52,640:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:26:52,641:INFO:Starting cross validation
2025-07-17 17:26:52,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:27:57,835:INFO:Calculating mean and std
2025-07-17 17:27:57,836:INFO:Creating metrics dataframe
2025-07-17 17:27:57,839:INFO:Finalizing model
2025-07-17 17:28:10,132:INFO:Uploading results into container
2025-07-17 17:28:10,133:INFO:Uploading model into container now
2025-07-17 17:28:10,133:INFO:_master_model_container: 8
2025-07-17 17:28:10,134:INFO:_display_container: 7
2025-07-17 17:28:10,134:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F31693610>
2025-07-17 17:28:10,134:INFO:create_model() successfully completed......................................
2025-07-17 17:28:10,265:INFO:SubProcess create_model() end ==================================
2025-07-17 17:28:10,265:INFO:choose_better activated
2025-07-17 17:28:10,266:INFO:SubProcess create_model() called ==================================
2025-07-17 17:28:10,266:INFO:Initializing create_model()
2025-07-17 17:28:10,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F2A25E490>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:28:10,266:INFO:Checking exceptions
2025-07-17 17:28:10,268:INFO:Importing libraries
2025-07-17 17:28:10,268:INFO:Copying training dataset
2025-07-17 17:28:10,283:INFO:Defining folds
2025-07-17 17:28:10,283:INFO:Declaring metric variables
2025-07-17 17:28:10,283:INFO:Importing untrained model
2025-07-17 17:28:10,283:INFO:Declaring custom model
2025-07-17 17:28:10,284:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:28:10,284:INFO:Starting cross validation
2025-07-17 17:28:10,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:29:42,822:INFO:Calculating mean and std
2025-07-17 17:29:42,823:INFO:Creating metrics dataframe
2025-07-17 17:29:42,826:INFO:Finalizing model
2025-07-17 17:30:00,797:INFO:Uploading results into container
2025-07-17 17:30:00,798:INFO:Uploading model into container now
2025-07-17 17:30:00,799:INFO:_master_model_container: 9
2025-07-17 17:30:00,799:INFO:_display_container: 8
2025-07-17 17:30:00,799:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F2A22C650>
2025-07-17 17:30:00,799:INFO:create_model() successfully completed......................................
2025-07-17 17:30:00,910:INFO:SubProcess create_model() end ==================================
2025-07-17 17:30:00,911:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F2A22C650> result for MCC is 0.548
2025-07-17 17:30:00,911:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F31693610> result for MCC is 0.5649
2025-07-17 17:30:00,911:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F31693610> is best model
2025-07-17 17:30:00,911:INFO:choose_better completed
2025-07-17 17:30:00,929:INFO:_master_model_container: 9
2025-07-17 17:30:00,929:INFO:_display_container: 7
2025-07-17 17:30:00,929:INFO:<catboost.core.CatBoostClassifier object at 0x0000023F31693610>
2025-07-17 17:30:00,929:INFO:tune_model() successfully completed......................................
2025-07-17 17:30:01,072:INFO:Initializing plot_model()
2025-07-17 17:30:01,072:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:01,072:INFO:Checking exceptions
2025-07-17 17:30:01,089:INFO:Preloading libraries
2025-07-17 17:30:01,153:INFO:Copying training dataset
2025-07-17 17:30:01,154:INFO:Plot type: feature
2025-07-17 17:30:01,156:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 17:30:01,994:INFO:Saving 'Feature Importance.png'
2025-07-17 17:30:02,351:INFO:Visual Rendered Successfully
2025-07-17 17:30:02,476:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:02,479:INFO:Initializing plot_model()
2025-07-17 17:30:02,479:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:02,479:INFO:Checking exceptions
2025-07-17 17:30:02,486:INFO:Preloading libraries
2025-07-17 17:30:02,627:INFO:Copying training dataset
2025-07-17 17:30:02,627:INFO:Plot type: feature
2025-07-17 17:30:02,628:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 17:30:03,082:INFO:Saving 'Feature Importance.png'
2025-07-17 17:30:03,311:INFO:Visual Rendered Successfully
2025-07-17 17:30:03,546:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:03,547:INFO:Initializing plot_model()
2025-07-17 17:30:03,547:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F31693610>, plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:03,547:INFO:Checking exceptions
2025-07-17 17:30:03,554:INFO:Preloading libraries
2025-07-17 17:30:03,564:INFO:Copying training dataset
2025-07-17 17:30:03,565:INFO:Plot type: feature
2025-07-17 17:30:03,565:WARNING:No coef_ found. Trying feature_importances_
2025-07-17 17:30:03,897:INFO:Saving 'Feature Importance.png'
2025-07-17 17:30:04,025:INFO:Visual Rendered Successfully
2025-07-17 17:30:04,110:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:04,112:INFO:Initializing plot_model()
2025-07-17 17:30:04,112:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:04,112:INFO:Checking exceptions
2025-07-17 17:30:04,117:INFO:Preloading libraries
2025-07-17 17:30:04,148:INFO:Copying training dataset
2025-07-17 17:30:04,148:INFO:Plot type: confusion_matrix
2025-07-17 17:30:04,566:INFO:Fitting Model
2025-07-17 17:30:04,568:INFO:Scoring test/hold-out set
2025-07-17 17:30:04,652:INFO:Saving 'Confusion Matrix.png'
2025-07-17 17:30:04,771:INFO:Visual Rendered Successfully
2025-07-17 17:30:04,884:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:04,886:INFO:Initializing plot_model()
2025-07-17 17:30:04,886:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:04,886:INFO:Checking exceptions
2025-07-17 17:30:04,892:INFO:Preloading libraries
2025-07-17 17:30:04,974:INFO:Copying training dataset
2025-07-17 17:30:04,974:INFO:Plot type: confusion_matrix
2025-07-17 17:30:05,421:INFO:Fitting Model
2025-07-17 17:30:05,422:INFO:Scoring test/hold-out set
2025-07-17 17:30:05,423:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:30:05,424:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:30:05,424:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:30:05,517:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:30:05,517:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:30:05,517:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:30:05,635:INFO:Saving 'Confusion Matrix.png'
2025-07-17 17:30:05,747:INFO:Visual Rendered Successfully
2025-07-17 17:30:05,866:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:05,868:INFO:Initializing plot_model()
2025-07-17 17:30:05,868:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F31693610>, plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-17 17:30:05,868:INFO:Checking exceptions
2025-07-17 17:30:05,874:INFO:Preloading libraries
2025-07-17 17:30:05,881:INFO:Copying training dataset
2025-07-17 17:30:05,882:INFO:Plot type: confusion_matrix
2025-07-17 17:30:06,225:INFO:Fitting Model
2025-07-17 17:30:06,236:INFO:Scoring test/hold-out set
2025-07-17 17:30:06,279:INFO:Saving 'Confusion Matrix.png'
2025-07-17 17:30:06,380:INFO:Visual Rendered Successfully
2025-07-17 17:30:06,477:INFO:plot_model() successfully completed......................................
2025-07-17 17:30:06,479:INFO:Initializing finalize_model()
2025-07-17 17:30:06,479:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 17:30:06,480:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-07-17 17:30:06,487:INFO:Initializing create_model()
2025-07-17 17:30:06,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None, colsample_bytree=1,
              device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=0.2, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=9,
              max_leaves=None, min_child_weight=2, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=230,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:30:06,487:INFO:Checking exceptions
2025-07-17 17:30:06,488:INFO:Importing libraries
2025-07-17 17:30:06,488:INFO:Copying training dataset
2025-07-17 17:30:06,489:INFO:Defining folds
2025-07-17 17:30:06,489:INFO:Declaring metric variables
2025-07-17 17:30:06,489:INFO:Importing untrained model
2025-07-17 17:30:06,489:INFO:Declaring custom model
2025-07-17 17:30:06,493:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 17:30:06,496:INFO:Cross validation set to False
2025-07-17 17:30:06,496:INFO:Fitting Model
2025-07-17 17:30:08,960:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 17:30:08,961:INFO:create_model() successfully completed......................................
2025-07-17 17:30:09,058:INFO:_master_model_container: 9
2025-07-17 17:30:09,058:INFO:_display_container: 7
2025-07-17 17:30:09,070:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 17:30:09,070:INFO:finalize_model() successfully completed......................................
2025-07-17 17:30:09,147:INFO:Initializing finalize_model()
2025-07-17 17:30:09,148:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 17:30:09,149:INFO:Finalizing LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-17 17:30:09,155:INFO:Initializing create_model()
2025-07-17 17:30:09,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:30:09,155:INFO:Checking exceptions
2025-07-17 17:30:09,156:INFO:Importing libraries
2025-07-17 17:30:09,157:INFO:Copying training dataset
2025-07-17 17:30:09,157:INFO:Defining folds
2025-07-17 17:30:09,157:INFO:Declaring metric variables
2025-07-17 17:30:09,158:INFO:Importing untrained model
2025-07-17 17:30:09,158:INFO:Declaring custom model
2025-07-17 17:30:09,160:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 17:30:09,162:INFO:Cross validation set to False
2025-07-17 17:30:09,162:INFO:Fitting Model
2025-07-17 17:30:09,383:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:30:09,383:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:30:09,384:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:30:09,411:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 17:30:09,411:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:30:09,411:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:30:09,412:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:30:09,412:INFO:[LightGBM] [Info] Number of positive: 29953, number of negative: 29953
2025-07-17 17:30:09,414:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001723 seconds.
2025-07-17 17:30:09,414:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 17:30:09,414:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 17:30:09,415:INFO:[LightGBM] [Info] Number of data points in the train set: 59906, number of used features: 5
2025-07-17 17:30:09,415:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 17:30:09,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:09,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,511:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:10,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:11,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:12,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:30:12,152:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 17:30:12,153:INFO:create_model() successfully completed......................................
2025-07-17 17:30:12,246:INFO:_master_model_container: 9
2025-07-17 17:30:12,246:INFO:_display_container: 7
2025-07-17 17:30:12,260:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 17:30:12,260:INFO:finalize_model() successfully completed......................................
2025-07-17 17:30:12,334:INFO:Initializing finalize_model()
2025-07-17 17:30:12,335:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F31693610>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 17:30:12,335:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x0000023F31693610>
2025-07-17 17:30:12,340:INFO:Initializing create_model()
2025-07-17 17:30:12,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=<catboost.core.CatBoostClassifier object at 0x0000023F31693610>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:30:12,340:INFO:Checking exceptions
2025-07-17 17:30:12,341:INFO:Importing libraries
2025-07-17 17:30:12,341:INFO:Copying training dataset
2025-07-17 17:30:12,342:INFO:Defining folds
2025-07-17 17:30:12,342:INFO:Declaring metric variables
2025-07-17 17:30:12,342:INFO:Importing untrained model
2025-07-17 17:30:12,342:INFO:Declaring custom model
2025-07-17 17:30:12,342:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:30:12,343:INFO:Cross validation set to False
2025-07-17 17:30:12,343:INFO:Fitting Model
2025-07-17 17:30:23,863:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3086CE90>)],
         verbose=False)
2025-07-17 17:30:23,863:INFO:create_model() successfully completed......................................
2025-07-17 17:30:23,944:INFO:_master_model_container: 9
2025-07-17 17:30:23,944:INFO:_display_container: 7
2025-07-17 17:30:23,957:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3086CE90>)],
         verbose=False)
2025-07-17 17:30:23,957:INFO:finalize_model() successfully completed......................................
2025-07-17 17:30:24,065:INFO:Initializing blend_models()
2025-07-17 17:30:24,066:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator_list=[Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3086CE90>)],
         verbose=False)], fold=5, round=4, choose_better=True, optimize=MCC, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=False, return_train_score=False)
2025-07-17 17:30:24,066:INFO:Checking exceptions
2025-07-17 17:30:24,076:INFO:Importing libraries
2025-07-17 17:30:24,076:INFO:Copying training dataset
2025-07-17 17:30:24,077:INFO:Getting model names
2025-07-17 17:30:24,080:INFO:SubProcess create_model() called ==================================
2025-07-17 17:30:24,172:INFO:Initializing create_model()
2025-07-17 17:30:24,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x0000023F3086CE90>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023F3199B890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:30:24,173:INFO:Checking exceptions
2025-07-17 17:30:24,173:INFO:Importing libraries
2025-07-17 17:30:24,173:INFO:Copying training dataset
2025-07-17 17:30:24,180:INFO:Defining folds
2025-07-17 17:30:24,180:INFO:Declaring metric variables
2025-07-17 17:30:24,180:INFO:Importing untrained model
2025-07-17 17:30:24,181:INFO:Declaring custom model
2025-07-17 17:30:24,189:INFO:Voting Classifier Imported successfully
2025-07-17 17:30:24,189:INFO:Starting cross validation
2025-07-17 17:30:24,190:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:31:18,733:INFO:Calculating mean and std
2025-07-17 17:31:18,734:INFO:Creating metrics dataframe
2025-07-17 17:31:18,737:INFO:Finalizing model
2025-07-17 17:31:33,367:INFO:Uploading results into container
2025-07-17 17:31:33,368:INFO:Uploading model into container now
2025-07-17 17:31:33,368:INFO:_master_model_container: 10
2025-07-17 17:31:33,368:INFO:_display_container: 8
2025-07-17 17:31:33,450:INFO:VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x0000023F3159CC90>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2025-07-17 17:31:33,450:INFO:create_model() successfully completed......................................
2025-07-17 17:31:33,526:INFO:SubProcess create_model() end ==================================
2025-07-17 17:31:33,526:INFO:choose_better activated
2025-07-17 17:31:33,596:INFO:VotingClassifier(estimators=[('Extreme Gradient Boosting',
                              Pipeline(memory=Memory(location=None),
                                       steps=[('numerical_imputer',
                                               TransformerWrapper(exclude=None,
                                                                  include=['NetOrderValue',
                                                                           'Dias '
                                                                           'Para '
                                                                           'Entrega',
                                                                           'carga_fornecedor'],
                                                                  transformer=SimpleImputer(add_indicator=False,
                                                                                            copy=True,
                                                                                            fill_value=None,
                                                                                            keep_empty_features=False,
                                                                                            missing_values=nan,
                                                                                            strategy='me...
                                                                                                            random_state=109,
                                                                                                            sampling_strategy='auto')))),
                                              ('clean_column_names',
                                               TransformerWrapper(exclude=None,
                                                                  include=None,
                                                                  transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                                              ('actual_estimator',
                                               <catboost.core.CatBoostClassifier object at 0x0000023F3159CC90>)],
                                       verbose=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None) result for MCC is 0.2583
2025-07-17 17:31:33,596:INFO:SubProcess create_model() called ==================================
2025-07-17 17:31:33,609:INFO:Initializing create_model()
2025-07-17 17:31:33,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:31:33,609:INFO:Checking exceptions
2025-07-17 17:31:33,610:INFO:Importing libraries
2025-07-17 17:31:33,610:INFO:Copying training dataset
2025-07-17 17:31:33,622:INFO:Defining folds
2025-07-17 17:31:33,622:INFO:Declaring metric variables
2025-07-17 17:31:33,622:INFO:Importing untrained model
2025-07-17 17:31:33,622:INFO:Declaring custom model
2025-07-17 17:31:33,627:INFO:Extreme Gradient Boosting Imported successfully
2025-07-17 17:31:33,627:INFO:Starting cross validation
2025-07-17 17:31:33,629:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:31:38,705:INFO:Calculating mean and std
2025-07-17 17:31:38,706:INFO:Creating metrics dataframe
2025-07-17 17:31:38,708:INFO:Finalizing model
2025-07-17 17:31:41,138:INFO:Uploading results into container
2025-07-17 17:31:41,139:INFO:Uploading model into container now
2025-07-17 17:31:41,140:INFO:_master_model_container: 11
2025-07-17 17:31:41,140:INFO:_display_container: 9
2025-07-17 17:31:41,160:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-07-17 17:31:41,161:INFO:create_model() successfully completed......................................
2025-07-17 17:31:41,261:INFO:SubProcess create_model() end ==================================
2025-07-17 17:31:41,281:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=0.2,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=9, max_leaves=None, min_child_weight=2,
                               missing=nan, monotone_constraints=None,
                               multi_strategy=None, n_estimators=230, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False) result for MCC is 0.5459
2025-07-17 17:31:41,281:INFO:SubProcess create_model() called ==================================
2025-07-17 17:31:41,297:INFO:Initializing create_model()
2025-07-17 17:31:41,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:31:41,297:INFO:Checking exceptions
2025-07-17 17:31:41,299:INFO:Importing libraries
2025-07-17 17:31:41,299:INFO:Copying training dataset
2025-07-17 17:31:41,310:INFO:Defining folds
2025-07-17 17:31:41,310:INFO:Declaring metric variables
2025-07-17 17:31:41,310:INFO:Importing untrained model
2025-07-17 17:31:41,310:INFO:Declaring custom model
2025-07-17 17:31:41,314:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-17 17:31:41,314:INFO:Starting cross validation
2025-07-17 17:31:41,316:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:31:56,646:INFO:Calculating mean and std
2025-07-17 17:31:56,647:INFO:Creating metrics dataframe
2025-07-17 17:31:56,651:INFO:Finalizing model
2025-07-17 17:31:56,918:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:31:56,918:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:31:56,918:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:31:56,943:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-17 17:31:56,943:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-17 17:31:56,943:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-17 17:31:56,943:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-17 17:31:56,943:INFO:[LightGBM] [Info] Number of positive: 20967, number of negative: 20967
2025-07-17 17:31:56,945:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001235 seconds.
2025-07-17 17:31:56,945:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-17 17:31:56,945:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-17 17:31:56,946:INFO:[LightGBM] [Info] Number of data points in the train set: 41934, number of used features: 5
2025-07-17 17:31:56,946:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-17 17:31:56,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:56,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:57,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,569:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:58,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-17 17:31:59,908:INFO:Uploading results into container
2025-07-17 17:31:59,909:INFO:Uploading model into container now
2025-07-17 17:31:59,909:INFO:_master_model_container: 12
2025-07-17 17:31:59,909:INFO:_display_container: 9
2025-07-17 17:31:59,926:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-17 17:31:59,926:INFO:create_model() successfully completed......................................
2025-07-17 17:32:00,035:INFO:SubProcess create_model() end ==================================
2025-07-17 17:32:00,057:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False) result for MCC is 0.5336
2025-07-17 17:32:00,057:INFO:SubProcess create_model() called ==================================
2025-07-17 17:32:00,072:INFO:Initializing create_model()
2025-07-17 17:32:00,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3086CE90>)],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:32:00,072:INFO:Checking exceptions
2025-07-17 17:32:00,073:INFO:Importing libraries
2025-07-17 17:32:00,073:INFO:Copying training dataset
2025-07-17 17:32:00,090:INFO:Defining folds
2025-07-17 17:32:00,090:INFO:Declaring metric variables
2025-07-17 17:32:00,090:INFO:Importing untrained model
2025-07-17 17:32:00,092:INFO:Declaring custom model
2025-07-17 17:32:00,097:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:32:00,097:INFO:Starting cross validation
2025-07-17 17:32:00,099:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-17 17:32:30,902:INFO:Calculating mean and std
2025-07-17 17:32:30,903:INFO:Creating metrics dataframe
2025-07-17 17:32:30,904:INFO:Finalizing model
2025-07-17 17:32:40,890:INFO:Uploading results into container
2025-07-17 17:32:40,891:INFO:Uploading model into container now
2025-07-17 17:32:40,891:INFO:_master_model_container: 13
2025-07-17 17:32:40,891:INFO:_display_container: 9
2025-07-17 17:32:40,900:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False)
2025-07-17 17:32:40,900:INFO:create_model() successfully completed......................................
2025-07-17 17:32:40,970:INFO:SubProcess create_model() end ==================================
2025-07-17 17:32:40,981:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False) result for MCC is 0.5659
2025-07-17 17:32:40,988:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False) is best model
2025-07-17 17:32:40,988:INFO:choose_better completed
2025-07-17 17:32:40,988:INFO:Original model was better than the blended model, hence it will be returned. NOTE: The display metrics are for the blended model (not the original one).
2025-07-17 17:32:40,989:INFO:_master_model_container: 13
2025-07-17 17:32:40,989:INFO:_display_container: 8
2025-07-17 17:32:40,996:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False)
2025-07-17 17:32:40,996:INFO:blend_models() successfully completed......................................
2025-07-17 17:32:41,067:INFO:Initializing finalize_model()
2025-07-17 17:32:41,067:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-17 17:32:41,076:INFO:Finalizing Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False)
2025-07-17 17:32:41,090:INFO:Initializing create_model()
2025-07-17 17:32:41,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023F2F3B4D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F3159CA10>)],
         verbose=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-17 17:32:41,090:INFO:Checking exceptions
2025-07-17 17:32:41,091:INFO:Importing libraries
2025-07-17 17:32:41,091:INFO:Copying training dataset
2025-07-17 17:32:41,091:INFO:Defining folds
2025-07-17 17:32:41,091:INFO:Declaring metric variables
2025-07-17 17:32:41,092:INFO:Importing untrained model
2025-07-17 17:32:41,092:INFO:Declaring custom model
2025-07-17 17:32:41,094:INFO:CatBoost Classifier Imported successfully
2025-07-17 17:32:41,094:INFO:Cross validation set to False
2025-07-17 17:32:41,094:INFO:Fitting Model
2025-07-17 17:32:51,833:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F31998910>)],
         verbose=False)
2025-07-17 17:32:51,834:INFO:create_model() successfully completed......................................
2025-07-17 17:32:51,904:INFO:_master_model_container: 13
2025-07-17 17:32:51,904:INFO:_display_container: 8
2025-07-17 17:32:51,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F31998910>)],
         verbose=False)
2025-07-17 17:32:51,919:INFO:finalize_model() successfully completed......................................
2025-07-17 17:32:52,028:INFO:Initializing save_model()
2025-07-17 17:32:52,029:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F31998910>)],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend_ytd, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-17 17:32:52,029:INFO:Adding model into prep_pipe
2025-07-17 17:32:52,029:WARNING:Only Model saved as it was a pipeline.
2025-07-17 17:32:55,277:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend_ytd.pkl saved in current working directory
2025-07-17 17:32:55,289:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000023F31998910>)],
         verbose=False)
2025-07-17 17:32:55,290:INFO:save_model() successfully completed......................................
2025-07-18 08:01:53,089:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:01:53,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:01:53,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:01:53,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:02:26,227:INFO:Initializing load_model()
2025-07-18 08:02:26,228:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_blend_ytd, platform=None, authentication=None, verbose=True)
2025-07-18 08:02:28,148:INFO:Initializing predict_model()
2025-07-18 08:02:28,148:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000261813DFFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=TargetEncoder(cols=['MATKL',
                                                                    'Vendor'],
                                                              handle_missing='return_nan'))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x00000261FFC10C90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026188357EC0>)
2025-07-18 08:02:28,150:INFO:Checking exceptions
2025-07-18 08:02:28,150:INFO:Preloading libraries
2025-07-18 08:02:28,150:INFO:Set up data.
2025-07-18 08:02:28,173:INFO:Set up index.
2025-07-18 08:10:39,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:10:39,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:10:39,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:10:39,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:15:04,598:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:15:04,601:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:15:04,602:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:15:04,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-18 08:16:26,152:INFO:Initializing load_model()
2025-07-18 08:16:26,153:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-18 08:16:28,449:INFO:Initializing predict_model()
2025-07-18 08:16:28,450:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024081A7E710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000240830A9F80>)
2025-07-18 08:16:28,450:INFO:Checking exceptions
2025-07-18 08:16:28,450:INFO:Preloading libraries
2025-07-18 08:16:28,451:INFO:Set up data.
2025-07-18 08:16:28,459:INFO:Set up index.
2025-07-21 10:21:10,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-21 10:21:10,359:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-21 10:21:10,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-21 10:21:10,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-21 10:22:31,000:INFO:Initializing load_model()
2025-07-21 10:22:31,001:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-21 10:22:32,265:INFO:Initializing predict_model()
2025-07-21 10:22:32,270:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021C78636390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021C79EE22A0>)
2025-07-21 10:22:32,270:INFO:Checking exceptions
2025-07-21 10:22:32,272:INFO:Preloading libraries
2025-07-21 10:22:32,273:INFO:Set up data.
2025-07-21 10:22:32,304:INFO:Set up index.
2025-07-22 09:37:55,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:37:55,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:37:55,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:37:55,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:38:53,020:INFO:Initializing load_model()
2025-07-22 09:38:53,021:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 09:38:53,922:INFO:Initializing predict_model()
2025-07-22 09:38:53,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CBCE17F790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CBCFA3E340>)
2025-07-22 09:38:53,922:INFO:Checking exceptions
2025-07-22 09:38:53,922:INFO:Preloading libraries
2025-07-22 09:38:53,922:INFO:Set up data.
2025-07-22 09:38:53,931:INFO:Set up index.
2025-07-22 09:40:24,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:40:24,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:40:24,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:40:24,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:41:11,167:INFO:Initializing load_model()
2025-07-22 09:41:11,167:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 09:41:12,200:INFO:Initializing predict_model()
2025-07-22 09:41:12,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001656F52A310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001656BF82340>)
2025-07-22 09:41:12,205:INFO:Checking exceptions
2025-07-22 09:41:12,205:INFO:Preloading libraries
2025-07-22 09:41:12,206:INFO:Set up data.
2025-07-22 09:41:12,219:INFO:Set up index.
2025-07-22 09:43:05,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:43:05,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:43:05,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:43:05,973:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 09:44:17,461:INFO:Initializing load_model()
2025-07-22 09:44:17,461:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 09:44:18,419:INFO:Initializing predict_model()
2025-07-22 09:44:18,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027C35B7DF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027C3762E340>)
2025-07-22 09:44:18,420:INFO:Checking exceptions
2025-07-22 09:44:18,421:INFO:Preloading libraries
2025-07-22 09:44:18,422:INFO:Set up data.
2025-07-22 09:44:18,448:INFO:Set up index.
2025-07-22 10:31:19,000:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:31:19,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:31:19,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:31:19,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:32:28,491:INFO:Initializing load_model()
2025-07-22 10:32:28,491:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 10:32:29,856:INFO:Initializing predict_model()
2025-07-22 10:32:29,857:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B769354110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B76AC0A340>)
2025-07-22 10:32:29,857:INFO:Checking exceptions
2025-07-22 10:32:29,858:INFO:Preloading libraries
2025-07-22 10:32:29,859:INFO:Set up data.
2025-07-22 10:32:29,897:INFO:Set up index.
2025-07-22 10:43:38,071:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:43:38,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:43:38,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:43:38,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:44:37,679:INFO:Initializing load_model()
2025-07-22 10:44:37,679:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 10:44:38,952:INFO:Initializing predict_model()
2025-07-22 10:44:38,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201FEF95B10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000201FEF72340>)
2025-07-22 10:44:38,954:INFO:Checking exceptions
2025-07-22 10:44:38,954:INFO:Preloading libraries
2025-07-22 10:44:38,954:INFO:Set up data.
2025-07-22 10:44:38,979:INFO:Set up index.
2025-07-22 10:54:14,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:54:14,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:54:14,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:54:14,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 10:55:15,634:INFO:Initializing load_model()
2025-07-22 10:55:15,635:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 10:55:16,655:INFO:Initializing predict_model()
2025-07-22 10:55:16,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000197E448FB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001978ED62340>)
2025-07-22 10:55:16,656:INFO:Checking exceptions
2025-07-22 10:55:16,656:INFO:Preloading libraries
2025-07-22 10:55:16,657:INFO:Set up data.
2025-07-22 10:55:16,682:INFO:Set up index.
2025-07-22 13:24:14,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:24:14,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:24:14,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:24:14,280:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:25:15,695:INFO:Initializing load_model()
2025-07-22 13:25:15,695:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 13:25:16,513:INFO:Initializing predict_model()
2025-07-22 13:25:16,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E3775679D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E37398A2A0>)
2025-07-22 13:25:16,514:INFO:Checking exceptions
2025-07-22 13:25:16,514:INFO:Preloading libraries
2025-07-22 13:25:16,516:INFO:Set up data.
2025-07-22 13:25:16,539:INFO:Set up index.
2025-07-22 13:31:50,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:31:50,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:31:50,379:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:31:50,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:33:21,350:INFO:Initializing load_model()
2025-07-22 13:33:21,375:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 13:33:23,239:INFO:Initializing predict_model()
2025-07-22 13:33:23,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019722623350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000197226922A0>)
2025-07-22 13:33:23,248:INFO:Checking exceptions
2025-07-22 13:33:23,249:INFO:Preloading libraries
2025-07-22 13:33:23,251:INFO:Set up data.
2025-07-22 13:33:23,289:INFO:Set up index.
2025-07-22 13:34:47,468:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:34:47,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:34:47,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:34:47,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-22 13:36:26,359:INFO:Initializing load_model()
2025-07-22 13:36:26,360:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-22 13:36:28,992:INFO:Initializing predict_model()
2025-07-22 13:36:28,993:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000126F9132A10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000126F82262A0>)
2025-07-22 13:36:28,997:INFO:Checking exceptions
2025-07-22 13:36:28,997:INFO:Preloading libraries
2025-07-22 13:36:28,999:INFO:Set up data.
2025-07-22 13:36:29,085:INFO:Set up index.
2025-07-28 09:11:46,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:11:46,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:11:46,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:11:46,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:12:18,412:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:113: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-28 09:12:24,133:INFO:PyCaret ClassificationExperiment
2025-07-28 09:12:24,135:INFO:Logging name: clf-default-name
2025-07-28 09:12:24,135:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 09:12:24,135:INFO:version 3.3.2
2025-07-28 09:12:24,135:INFO:Initializing setup()
2025-07-28 09:12:24,136:INFO:self.USI: 6041
2025-07-28 09:12:24,136:INFO:self._variable_keys: {'fix_imbalance', 'gpu_n_jobs_param', 'fold_groups_param', 'y', 'is_multiclass', 'memory', 'n_jobs_param', 'pipeline', 'exp_id', 'X_test', 'idx', 'logging_param', 'X_train', '_available_plots', 'data', 'gpu_param', 'exp_name_log', 'y_test', 'html_param', 'fold_generator', 'USI', 'target_param', 'seed', 'y_train', '_ml_usecase', 'log_plots_param', 'X', 'fold_shuffle_param'}
2025-07-28 09:12:24,136:INFO:Checking environment
2025-07-28 09:12:24,136:INFO:python_version: 3.11.9
2025-07-28 09:12:24,138:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-28 09:12:24,138:INFO:machine: AMD64
2025-07-28 09:12:24,186:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 09:12:24,193:INFO:Memory: svmem(total=16844595200, available=2298343424, percent=86.4, used=14546251776, free=2298343424)
2025-07-28 09:12:24,193:INFO:Physical Core: 4
2025-07-28 09:12:24,194:INFO:Logical Core: 8
2025-07-28 09:12:24,195:INFO:Checking libraries
2025-07-28 09:12:24,195:INFO:System:
2025-07-28 09:12:24,196:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-28 09:12:24,196:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-28 09:12:24,197:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 09:12:24,197:INFO:PyCaret required dependencies:
2025-07-28 09:12:24,371:INFO:                 pip: 25.1.1
2025-07-28 09:12:24,372:INFO:          setuptools: 65.5.0
2025-07-28 09:12:24,373:INFO:             pycaret: 3.3.2
2025-07-28 09:12:24,373:INFO:             IPython: 9.3.0
2025-07-28 09:12:24,373:INFO:          ipywidgets: 8.1.7
2025-07-28 09:12:24,374:INFO:                tqdm: 4.67.1
2025-07-28 09:12:24,374:INFO:               numpy: 1.26.4
2025-07-28 09:12:24,375:INFO:              pandas: 2.1.4
2025-07-28 09:12:24,375:INFO:              jinja2: 3.1.6
2025-07-28 09:12:24,375:INFO:               scipy: 1.11.4
2025-07-28 09:12:24,375:INFO:              joblib: 1.3.2
2025-07-28 09:12:24,376:INFO:             sklearn: 1.4.2
2025-07-28 09:12:24,376:INFO:                pyod: 2.0.5
2025-07-28 09:12:24,376:INFO:            imblearn: 0.13.0
2025-07-28 09:12:24,376:INFO:   category_encoders: 2.7.0
2025-07-28 09:12:24,377:INFO:            lightgbm: 4.6.0
2025-07-28 09:12:24,377:INFO:               numba: 0.61.2
2025-07-28 09:12:24,377:INFO:            requests: 2.32.4
2025-07-28 09:12:24,377:INFO:          matplotlib: 3.7.5
2025-07-28 09:12:24,377:INFO:          scikitplot: 0.3.7
2025-07-28 09:12:24,377:INFO:         yellowbrick: 1.5
2025-07-28 09:12:24,377:INFO:              plotly: 5.24.1
2025-07-28 09:12:24,377:INFO:    plotly-resampler: Not installed
2025-07-28 09:12:24,377:INFO:             kaleido: 1.0.0
2025-07-28 09:12:24,377:INFO:           schemdraw: 0.15
2025-07-28 09:12:24,378:INFO:         statsmodels: 0.14.4
2025-07-28 09:12:24,378:INFO:              sktime: 0.26.0
2025-07-28 09:12:24,378:INFO:               tbats: 1.1.3
2025-07-28 09:12:24,378:INFO:            pmdarima: 2.0.4
2025-07-28 09:12:24,378:INFO:              psutil: 7.0.0
2025-07-28 09:12:24,378:INFO:          markupsafe: 3.0.2
2025-07-28 09:12:24,378:INFO:             pickle5: Not installed
2025-07-28 09:12:24,378:INFO:         cloudpickle: 3.1.1
2025-07-28 09:12:24,378:INFO:         deprecation: 2.1.0
2025-07-28 09:12:24,378:INFO:              xxhash: 3.5.0
2025-07-28 09:12:24,378:INFO:           wurlitzer: Not installed
2025-07-28 09:12:24,378:INFO:PyCaret optional dependencies:
2025-07-28 09:12:24,503:INFO:                shap: 0.48.0
2025-07-28 09:12:24,503:INFO:           interpret: Not installed
2025-07-28 09:12:24,503:INFO:                umap: Not installed
2025-07-28 09:12:24,503:INFO:     ydata_profiling: Not installed
2025-07-28 09:12:24,503:INFO:  explainerdashboard: Not installed
2025-07-28 09:12:24,503:INFO:             autoviz: Not installed
2025-07-28 09:12:24,503:INFO:           fairlearn: Not installed
2025-07-28 09:12:24,503:INFO:          deepchecks: Not installed
2025-07-28 09:12:24,503:INFO:             xgboost: 3.0.2
2025-07-28 09:12:24,504:INFO:            catboost: 1.2.8
2025-07-28 09:12:24,504:INFO:              kmodes: Not installed
2025-07-28 09:12:24,504:INFO:             mlxtend: Not installed
2025-07-28 09:12:24,504:INFO:       statsforecast: Not installed
2025-07-28 09:12:24,504:INFO:        tune_sklearn: Not installed
2025-07-28 09:12:24,504:INFO:                 ray: Not installed
2025-07-28 09:12:24,504:INFO:            hyperopt: Not installed
2025-07-28 09:12:24,504:INFO:              optuna: Not installed
2025-07-28 09:12:24,504:INFO:               skopt: Not installed
2025-07-28 09:12:24,504:INFO:              mlflow: Not installed
2025-07-28 09:12:24,504:INFO:              gradio: Not installed
2025-07-28 09:12:24,504:INFO:             fastapi: Not installed
2025-07-28 09:12:24,504:INFO:             uvicorn: Not installed
2025-07-28 09:12:24,504:INFO:              m2cgen: Not installed
2025-07-28 09:12:24,504:INFO:           evidently: Not installed
2025-07-28 09:12:24,504:INFO:               fugue: Not installed
2025-07-28 09:12:24,505:INFO:           streamlit: Not installed
2025-07-28 09:12:24,505:INFO:             prophet: Not installed
2025-07-28 09:12:24,505:INFO:None
2025-07-28 09:12:24,505:INFO:Set up data.
2025-07-28 09:12:24,513:INFO:Set up folding strategy.
2025-07-28 09:12:24,514:INFO:Set up train/test split.
2025-07-28 09:12:24,534:INFO:Set up index.
2025-07-28 09:12:24,535:INFO:Assigning column types.
2025-07-28 09:12:24,541:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 09:12:24,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 09:12:24,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:12:24,693:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:24,698:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:24,976:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 09:12:24,979:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:12:25,026:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:25,033:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:25,034:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 09:12:25,125:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:12:25,184:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:25,189:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:25,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:12:25,337:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:25,343:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:25,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 09:12:25,505:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:25,512:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:25,728:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:25,736:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:25,741:INFO:Preparing preprocessing pipeline...
2025-07-28 09:12:25,744:INFO:Set up simple imputation.
2025-07-28 09:12:25,755:INFO:Set up encoding of categorical features.
2025-07-28 09:12:25,755:INFO:Set up imbalanced handling.
2025-07-28 09:12:25,756:INFO:Set up column name cleaning.
2025-07-28 09:12:26,181:INFO:Finished creating preprocessing pipeline.
2025-07-28 09:12:26,197:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-28 09:12:26,198:INFO:Creating final display dataframe.
2025-07-28 09:12:27,088:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (34489, 6)
4        Transformed data shape        (51663, 6)
5   Transformed train set shape        (41316, 6)
6    Transformed test set shape        (10347, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              6041
2025-07-28 09:12:27,312:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:27,325:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:27,504:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:12:27,510:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:12:27,512:INFO:setup() successfully completed in 3.47s...............
2025-07-28 09:12:27,518:INFO:Initializing create_model()
2025-07-28 09:12:27,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 09:12:27,518:INFO:Checking exceptions
2025-07-28 09:12:27,520:INFO:Importing libraries
2025-07-28 09:12:27,520:INFO:Copying training dataset
2025-07-28 09:12:27,541:INFO:Defining folds
2025-07-28 09:12:27,541:INFO:Declaring metric variables
2025-07-28 09:12:27,541:INFO:Importing untrained model
2025-07-28 09:12:27,543:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:12:27,543:INFO:Starting cross validation
2025-07-28 09:12:27,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:13:10,016:INFO:Calculating mean and std
2025-07-28 09:13:10,018:INFO:Creating metrics dataframe
2025-07-28 09:13:10,021:INFO:Finalizing model
2025-07-28 09:13:10,290:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:13:10,291:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:13:10,294:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001273 seconds.
2025-07-28 09:13:10,295:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:13:10,298:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:13:10,298:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:13:10,299:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:13:10,724:INFO:Uploading results into container
2025-07-28 09:13:10,725:INFO:Uploading model into container now
2025-07-28 09:13:10,727:INFO:_master_model_container: 1
2025-07-28 09:13:10,727:INFO:_display_container: 2
2025-07-28 09:13:10,729:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:13:10,731:INFO:create_model() successfully completed......................................
2025-07-28 09:13:10,914:INFO:Initializing tune_model()
2025-07-28 09:13:10,915:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=False, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-28 09:13:10,915:INFO:Checking exceptions
2025-07-28 09:13:10,930:INFO:Copying training dataset
2025-07-28 09:13:10,940:INFO:Checking base model
2025-07-28 09:13:10,940:INFO:Base model : Light Gradient Boosting Machine
2025-07-28 09:13:10,942:INFO:Declaring metric variables
2025-07-28 09:13:10,943:INFO:Defining Hyperparameters
2025-07-28 09:13:11,052:INFO:Tuning with n_jobs=-1
2025-07-28 09:13:11,053:INFO:Initializing RandomizedSearchCV
2025-07-28 09:15:05,826:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-28 09:15:05,828:INFO:Hyperparameter search completed
2025-07-28 09:15:05,828:INFO:SubProcess create_model() called ==================================
2025-07-28 09:15:05,830:INFO:Initializing create_model()
2025-07-28 09:15:05,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E0A2639790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-28 09:15:05,831:INFO:Checking exceptions
2025-07-28 09:15:05,832:INFO:Importing libraries
2025-07-28 09:15:05,832:INFO:Copying training dataset
2025-07-28 09:15:05,851:INFO:Defining folds
2025-07-28 09:15:05,852:INFO:Declaring metric variables
2025-07-28 09:15:05,854:INFO:Importing untrained model
2025-07-28 09:15:05,854:INFO:Declaring custom model
2025-07-28 09:15:05,857:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:15:05,858:INFO:Starting cross validation
2025-07-28 09:15:05,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:15:26,456:INFO:Calculating mean and std
2025-07-28 09:15:26,458:INFO:Creating metrics dataframe
2025-07-28 09:15:26,461:INFO:Finalizing model
2025-07-28 09:15:26,695:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:15:26,696:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:15:26,697:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:15:26,727:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:15:26,727:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:15:26,727:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:15:26,728:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:15:26,728:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:15:26,729:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000924 seconds.
2025-07-28 09:15:26,729:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:15:26,729:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:15:26,730:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:15:26,730:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:15:26,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:26,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:27,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:28,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:29,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:30,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:31,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:32,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:33,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:34,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:35,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:15:36,306:INFO:Uploading results into container
2025-07-28 09:15:36,307:INFO:Uploading model into container now
2025-07-28 09:15:36,308:INFO:_master_model_container: 2
2025-07-28 09:15:36,308:INFO:_display_container: 3
2025-07-28 09:15:36,309:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:15:36,309:INFO:create_model() successfully completed......................................
2025-07-28 09:15:36,423:INFO:SubProcess create_model() end ==================================
2025-07-28 09:15:36,423:INFO:choose_better activated
2025-07-28 09:15:36,423:INFO:SubProcess create_model() called ==================================
2025-07-28 09:15:36,425:INFO:Initializing create_model()
2025-07-28 09:15:36,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 09:15:36,426:INFO:Checking exceptions
2025-07-28 09:15:36,427:INFO:Importing libraries
2025-07-28 09:15:36,427:INFO:Copying training dataset
2025-07-28 09:15:36,445:INFO:Defining folds
2025-07-28 09:15:36,446:INFO:Declaring metric variables
2025-07-28 09:15:36,446:INFO:Importing untrained model
2025-07-28 09:15:36,446:INFO:Declaring custom model
2025-07-28 09:15:36,449:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:15:36,450:INFO:Starting cross validation
2025-07-28 09:15:36,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:15:40,725:INFO:Calculating mean and std
2025-07-28 09:15:40,727:INFO:Creating metrics dataframe
2025-07-28 09:15:40,730:INFO:Finalizing model
2025-07-28 09:15:41,099:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:15:41,101:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:15:41,104:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001371 seconds.
2025-07-28 09:15:41,105:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:15:41,106:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:15:41,106:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:15:41,107:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:15:41,669:INFO:Uploading results into container
2025-07-28 09:15:41,670:INFO:Uploading model into container now
2025-07-28 09:15:41,672:INFO:_master_model_container: 3
2025-07-28 09:15:41,672:INFO:_display_container: 4
2025-07-28 09:15:41,674:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:15:41,675:INFO:create_model() successfully completed......................................
2025-07-28 09:15:41,806:INFO:SubProcess create_model() end ==================================
2025-07-28 09:15:41,809:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8831
2025-07-28 09:15:41,812:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8937
2025-07-28 09:15:41,814:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-28 09:15:41,814:INFO:choose_better completed
2025-07-28 09:15:41,816:INFO:_master_model_container: 3
2025-07-28 09:15:41,816:INFO:_display_container: 3
2025-07-28 09:15:41,819:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:15:41,819:INFO:tune_model() successfully completed......................................
2025-07-28 09:15:41,923:INFO:Initializing plot_model()
2025-07-28 09:15:41,923:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 09:15:41,923:INFO:Checking exceptions
2025-07-28 09:15:41,930:INFO:Preloading libraries
2025-07-28 09:15:42,047:INFO:Copying training dataset
2025-07-28 09:15:42,047:INFO:Plot type: feature
2025-07-28 09:15:42,048:WARNING:No coef_ found. Trying feature_importances_
2025-07-28 09:15:42,694:INFO:Saving 'Feature Importance.png'
2025-07-28 09:15:42,870:INFO:Visual Rendered Successfully
2025-07-28 09:15:42,964:INFO:plot_model() successfully completed......................................
2025-07-28 09:15:42,966:INFO:Initializing plot_model()
2025-07-28 09:15:42,966:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E09FEEF890>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 09:15:42,966:INFO:Checking exceptions
2025-07-28 09:15:42,973:INFO:Preloading libraries
2025-07-28 09:15:43,069:INFO:Copying training dataset
2025-07-28 09:15:43,070:INFO:Plot type: confusion_matrix
2025-07-28 09:15:43,523:INFO:Fitting Model
2025-07-28 09:15:43,525:INFO:Scoring test/hold-out set
2025-07-28 09:15:43,527:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:15:43,527:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:15:43,527:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:15:43,581:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:15:43,583:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:15:43,583:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:15:43,668:INFO:Saving 'Confusion Matrix.png'
2025-07-28 09:15:43,807:INFO:Visual Rendered Successfully
2025-07-28 09:15:43,934:INFO:plot_model() successfully completed......................................
2025-07-28 09:20:42,614:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:20:42,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:20:42,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:20:42,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:21:40,311:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:113: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-28 09:21:46,702:INFO:PyCaret ClassificationExperiment
2025-07-28 09:21:46,703:INFO:Logging name: clf-default-name
2025-07-28 09:21:46,704:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 09:21:46,705:INFO:version 3.3.2
2025-07-28 09:21:46,706:INFO:Initializing setup()
2025-07-28 09:21:46,706:INFO:self.USI: da92
2025-07-28 09:21:46,707:INFO:self._variable_keys: {'X_test', 'n_jobs_param', 'pipeline', 'X', 'exp_id', 'fold_groups_param', 'gpu_param', 'logging_param', 'fold_generator', 'is_multiclass', 'target_param', 'data', 'seed', 'log_plots_param', 'USI', 'y', 'memory', 'exp_name_log', 'y_test', 'X_train', '_available_plots', 'html_param', 'gpu_n_jobs_param', '_ml_usecase', 'fold_shuffle_param', 'y_train', 'fix_imbalance', 'idx'}
2025-07-28 09:21:46,707:INFO:Checking environment
2025-07-28 09:21:46,708:INFO:python_version: 3.11.9
2025-07-28 09:21:46,708:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-28 09:21:46,709:INFO:machine: AMD64
2025-07-28 09:21:46,758:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 09:21:46,764:INFO:Memory: svmem(total=16844595200, available=1069486080, percent=93.7, used=15775109120, free=1069486080)
2025-07-28 09:21:46,765:INFO:Physical Core: 4
2025-07-28 09:21:46,765:INFO:Logical Core: 8
2025-07-28 09:21:46,767:INFO:Checking libraries
2025-07-28 09:21:46,767:INFO:System:
2025-07-28 09:21:46,767:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-28 09:21:46,769:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-28 09:21:46,769:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 09:21:46,769:INFO:PyCaret required dependencies:
2025-07-28 09:21:46,891:INFO:                 pip: 25.1.1
2025-07-28 09:21:46,891:INFO:          setuptools: 65.5.0
2025-07-28 09:21:46,891:INFO:             pycaret: 3.3.2
2025-07-28 09:21:46,891:INFO:             IPython: 9.3.0
2025-07-28 09:21:46,891:INFO:          ipywidgets: 8.1.7
2025-07-28 09:21:46,891:INFO:                tqdm: 4.67.1
2025-07-28 09:21:46,891:INFO:               numpy: 1.26.4
2025-07-28 09:21:46,891:INFO:              pandas: 2.1.4
2025-07-28 09:21:46,891:INFO:              jinja2: 3.1.6
2025-07-28 09:21:46,892:INFO:               scipy: 1.11.4
2025-07-28 09:21:46,892:INFO:              joblib: 1.3.2
2025-07-28 09:21:46,892:INFO:             sklearn: 1.4.2
2025-07-28 09:21:46,892:INFO:                pyod: 2.0.5
2025-07-28 09:21:46,892:INFO:            imblearn: 0.13.0
2025-07-28 09:21:46,892:INFO:   category_encoders: 2.7.0
2025-07-28 09:21:46,892:INFO:            lightgbm: 4.6.0
2025-07-28 09:21:46,892:INFO:               numba: 0.61.2
2025-07-28 09:21:46,892:INFO:            requests: 2.32.4
2025-07-28 09:21:46,892:INFO:          matplotlib: 3.7.5
2025-07-28 09:21:46,892:INFO:          scikitplot: 0.3.7
2025-07-28 09:21:46,893:INFO:         yellowbrick: 1.5
2025-07-28 09:21:46,893:INFO:              plotly: 5.24.1
2025-07-28 09:21:46,893:INFO:    plotly-resampler: Not installed
2025-07-28 09:21:46,893:INFO:             kaleido: 1.0.0
2025-07-28 09:21:46,893:INFO:           schemdraw: 0.15
2025-07-28 09:21:46,893:INFO:         statsmodels: 0.14.4
2025-07-28 09:21:46,893:INFO:              sktime: 0.26.0
2025-07-28 09:21:46,893:INFO:               tbats: 1.1.3
2025-07-28 09:21:46,894:INFO:            pmdarima: 2.0.4
2025-07-28 09:21:46,894:INFO:              psutil: 7.0.0
2025-07-28 09:21:46,894:INFO:          markupsafe: 3.0.2
2025-07-28 09:21:46,894:INFO:             pickle5: Not installed
2025-07-28 09:21:46,894:INFO:         cloudpickle: 3.1.1
2025-07-28 09:21:46,894:INFO:         deprecation: 2.1.0
2025-07-28 09:21:46,894:INFO:              xxhash: 3.5.0
2025-07-28 09:21:46,894:INFO:           wurlitzer: Not installed
2025-07-28 09:21:46,895:INFO:PyCaret optional dependencies:
2025-07-28 09:21:47,006:INFO:                shap: 0.48.0
2025-07-28 09:21:47,007:INFO:           interpret: Not installed
2025-07-28 09:21:47,007:INFO:                umap: Not installed
2025-07-28 09:21:47,007:INFO:     ydata_profiling: Not installed
2025-07-28 09:21:47,007:INFO:  explainerdashboard: Not installed
2025-07-28 09:21:47,007:INFO:             autoviz: Not installed
2025-07-28 09:21:47,007:INFO:           fairlearn: Not installed
2025-07-28 09:21:47,007:INFO:          deepchecks: Not installed
2025-07-28 09:21:47,007:INFO:             xgboost: 3.0.2
2025-07-28 09:21:47,007:INFO:            catboost: 1.2.8
2025-07-28 09:21:47,008:INFO:              kmodes: Not installed
2025-07-28 09:21:47,008:INFO:             mlxtend: Not installed
2025-07-28 09:21:47,008:INFO:       statsforecast: Not installed
2025-07-28 09:21:47,008:INFO:        tune_sklearn: Not installed
2025-07-28 09:21:47,008:INFO:                 ray: Not installed
2025-07-28 09:21:47,008:INFO:            hyperopt: Not installed
2025-07-28 09:21:47,008:INFO:              optuna: Not installed
2025-07-28 09:21:47,008:INFO:               skopt: Not installed
2025-07-28 09:21:47,008:INFO:              mlflow: Not installed
2025-07-28 09:21:47,008:INFO:              gradio: Not installed
2025-07-28 09:21:47,008:INFO:             fastapi: Not installed
2025-07-28 09:21:47,008:INFO:             uvicorn: Not installed
2025-07-28 09:21:47,009:INFO:              m2cgen: Not installed
2025-07-28 09:21:47,009:INFO:           evidently: Not installed
2025-07-28 09:21:47,009:INFO:               fugue: Not installed
2025-07-28 09:21:47,009:INFO:           streamlit: Not installed
2025-07-28 09:21:47,009:INFO:             prophet: Not installed
2025-07-28 09:21:47,009:INFO:None
2025-07-28 09:21:47,009:INFO:Set up data.
2025-07-28 09:21:47,021:INFO:Set up folding strategy.
2025-07-28 09:21:47,021:INFO:Set up train/test split.
2025-07-28 09:21:47,046:INFO:Set up index.
2025-07-28 09:21:47,047:INFO:Assigning column types.
2025-07-28 09:21:47,058:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 09:21:47,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 09:21:47,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:21:47,235:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:47,241:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:47,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 09:21:47,548:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:21:47,615:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:47,622:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:47,622:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 09:21:47,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:21:47,856:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:47,865:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:48,019:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 09:21:48,099:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:48,108:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:48,108:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 09:21:48,317:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:48,324:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:48,541:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:48,549:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:48,558:INFO:Preparing preprocessing pipeline...
2025-07-28 09:21:48,562:INFO:Set up simple imputation.
2025-07-28 09:21:48,573:INFO:Set up encoding of categorical features.
2025-07-28 09:21:48,573:INFO:Set up imbalanced handling.
2025-07-28 09:21:48,576:INFO:Set up column name cleaning.
2025-07-28 09:21:48,904:INFO:Finished creating preprocessing pipeline.
2025-07-28 09:21:48,921:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-28 09:21:48,921:INFO:Creating final display dataframe.
2025-07-28 09:21:49,618:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (34489, 6)
4        Transformed data shape        (51663, 6)
5   Transformed train set shape        (41316, 6)
6    Transformed test set shape        (10347, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              da92
2025-07-28 09:21:49,831:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:49,837:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:50,065:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 09:21:50,071:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 09:21:50,074:INFO:setup() successfully completed in 3.43s...............
2025-07-28 09:21:50,078:INFO:Initializing create_model()
2025-07-28 09:21:50,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 09:21:50,079:INFO:Checking exceptions
2025-07-28 09:21:50,084:INFO:Importing libraries
2025-07-28 09:21:50,084:INFO:Copying training dataset
2025-07-28 09:21:50,105:INFO:Defining folds
2025-07-28 09:21:50,106:INFO:Declaring metric variables
2025-07-28 09:21:50,106:INFO:Importing untrained model
2025-07-28 09:21:50,107:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:21:50,107:INFO:Starting cross validation
2025-07-28 09:21:50,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:22:15,692:INFO:Calculating mean and std
2025-07-28 09:22:15,696:INFO:Creating metrics dataframe
2025-07-28 09:22:15,700:INFO:Finalizing model
2025-07-28 09:22:15,963:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:22:15,964:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:22:15,969:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002977 seconds.
2025-07-28 09:22:15,970:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:22:15,974:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:22:15,975:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:22:15,975:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:22:16,375:INFO:Uploading results into container
2025-07-28 09:22:16,376:INFO:Uploading model into container now
2025-07-28 09:22:16,394:INFO:_master_model_container: 1
2025-07-28 09:22:16,394:INFO:_display_container: 2
2025-07-28 09:22:16,395:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:22:16,395:INFO:create_model() successfully completed......................................
2025-07-28 09:22:16,603:INFO:Initializing tune_model()
2025-07-28 09:22:16,603:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-28 09:22:16,603:INFO:Checking exceptions
2025-07-28 09:22:16,618:INFO:Copying training dataset
2025-07-28 09:22:16,628:INFO:Checking base model
2025-07-28 09:22:16,628:INFO:Base model : Light Gradient Boosting Machine
2025-07-28 09:22:16,629:INFO:Declaring metric variables
2025-07-28 09:22:16,629:INFO:Defining Hyperparameters
2025-07-28 09:22:16,737:INFO:Tuning with n_jobs=-1
2025-07-28 09:22:16,737:INFO:Initializing RandomizedSearchCV
2025-07-28 09:25:15,456:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-28 09:25:15,459:INFO:Hyperparameter search completed
2025-07-28 09:25:15,459:INFO:SubProcess create_model() called ==================================
2025-07-28 09:25:15,462:INFO:Initializing create_model()
2025-07-28 09:25:15,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000162A8117E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-28 09:25:15,463:INFO:Checking exceptions
2025-07-28 09:25:15,463:INFO:Importing libraries
2025-07-28 09:25:15,463:INFO:Copying training dataset
2025-07-28 09:25:15,480:INFO:Defining folds
2025-07-28 09:25:15,480:INFO:Declaring metric variables
2025-07-28 09:25:15,480:INFO:Importing untrained model
2025-07-28 09:25:15,480:INFO:Declaring custom model
2025-07-28 09:25:15,483:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:25:15,484:INFO:Starting cross validation
2025-07-28 09:25:15,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:25:43,844:INFO:Calculating mean and std
2025-07-28 09:25:43,847:INFO:Creating metrics dataframe
2025-07-28 09:25:43,850:INFO:Finalizing model
2025-07-28 09:25:44,192:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:25:44,193:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:25:44,193:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:25:44,231:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:25:44,231:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:25:44,232:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:25:44,232:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:25:44,232:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:25:44,234:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001249 seconds.
2025-07-28 09:25:44,234:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:25:44,234:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:25:44,235:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:25:44,235:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:25:44,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:44,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:45,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:46,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:47,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,537:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,579:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:48,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,577:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:25:49,903:INFO:Uploading results into container
2025-07-28 09:25:49,904:INFO:Uploading model into container now
2025-07-28 09:25:49,905:INFO:_master_model_container: 2
2025-07-28 09:25:49,905:INFO:_display_container: 3
2025-07-28 09:25:49,906:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:25:49,906:INFO:create_model() successfully completed......................................
2025-07-28 09:25:50,022:INFO:SubProcess create_model() end ==================================
2025-07-28 09:25:50,022:INFO:choose_better activated
2025-07-28 09:25:50,022:INFO:SubProcess create_model() called ==================================
2025-07-28 09:25:50,023:INFO:Initializing create_model()
2025-07-28 09:25:50,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 09:25:50,023:INFO:Checking exceptions
2025-07-28 09:25:50,024:INFO:Importing libraries
2025-07-28 09:25:50,024:INFO:Copying training dataset
2025-07-28 09:25:50,035:INFO:Defining folds
2025-07-28 09:25:50,036:INFO:Declaring metric variables
2025-07-28 09:25:50,036:INFO:Importing untrained model
2025-07-28 09:25:50,037:INFO:Declaring custom model
2025-07-28 09:25:50,038:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:25:50,038:INFO:Starting cross validation
2025-07-28 09:25:50,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 09:26:03,391:INFO:Calculating mean and std
2025-07-28 09:26:03,392:INFO:Creating metrics dataframe
2025-07-28 09:26:03,395:INFO:Finalizing model
2025-07-28 09:26:03,806:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:26:03,807:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 09:26:03,809:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002055 seconds.
2025-07-28 09:26:03,809:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 09:26:03,809:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:26:03,809:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 09:26:03,809:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:26:04,596:INFO:Uploading results into container
2025-07-28 09:26:04,598:INFO:Uploading model into container now
2025-07-28 09:26:04,599:INFO:_master_model_container: 3
2025-07-28 09:26:04,599:INFO:_display_container: 4
2025-07-28 09:26:04,600:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:26:04,600:INFO:create_model() successfully completed......................................
2025-07-28 09:26:04,710:INFO:SubProcess create_model() end ==================================
2025-07-28 09:26:04,711:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8831
2025-07-28 09:26:04,712:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.8937
2025-07-28 09:26:04,713:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-28 09:26:04,713:INFO:choose_better completed
2025-07-28 09:26:04,733:INFO:_master_model_container: 3
2025-07-28 09:26:04,735:INFO:_display_container: 3
2025-07-28 09:26:04,736:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:26:04,736:INFO:tune_model() successfully completed......................................
2025-07-28 09:26:04,854:INFO:Initializing plot_model()
2025-07-28 09:26:04,855:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 09:26:04,855:INFO:Checking exceptions
2025-07-28 09:26:04,863:INFO:Preloading libraries
2025-07-28 09:26:04,976:INFO:Copying training dataset
2025-07-28 09:26:04,977:INFO:Plot type: feature
2025-07-28 09:26:04,977:WARNING:No coef_ found. Trying feature_importances_
2025-07-28 09:26:05,673:INFO:Saving 'Feature Importance.png'
2025-07-28 09:26:05,954:INFO:Visual Rendered Successfully
2025-07-28 09:26:06,086:INFO:plot_model() successfully completed......................................
2025-07-28 09:26:06,088:INFO:Initializing plot_model()
2025-07-28 09:26:06,088:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 09:26:06,088:INFO:Checking exceptions
2025-07-28 09:26:06,095:INFO:Preloading libraries
2025-07-28 09:26:06,219:INFO:Copying training dataset
2025-07-28 09:26:06,219:INFO:Plot type: confusion_matrix
2025-07-28 09:26:06,762:INFO:Fitting Model
2025-07-28 09:26:06,764:INFO:Scoring test/hold-out set
2025-07-28 09:26:06,767:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:26:06,768:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:26:06,768:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:26:06,921:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:26:06,921:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:26:06,921:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:26:07,117:INFO:Saving 'Confusion Matrix.png'
2025-07-28 09:26:07,441:INFO:Visual Rendered Successfully
2025-07-28 09:26:07,653:INFO:plot_model() successfully completed......................................
2025-07-28 09:26:07,656:INFO:Initializing finalize_model()
2025-07-28 09:26:07,656:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-28 09:26:07,659:INFO:Finalizing LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 09:26:07,676:INFO:Initializing create_model()
2025-07-28 09:26:07,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000162A47D32D0>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 09:26:07,677:INFO:Checking exceptions
2025-07-28 09:26:07,681:INFO:Importing libraries
2025-07-28 09:26:07,682:INFO:Copying training dataset
2025-07-28 09:26:07,683:INFO:Defining folds
2025-07-28 09:26:07,683:INFO:Declaring metric variables
2025-07-28 09:26:07,683:INFO:Importing untrained model
2025-07-28 09:26:07,683:INFO:Declaring custom model
2025-07-28 09:26:07,686:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 09:26:07,689:INFO:Cross validation set to False
2025-07-28 09:26:07,689:INFO:Fitting Model
2025-07-28 09:26:08,207:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:26:08,208:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:26:08,208:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:26:08,315:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 09:26:08,316:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 09:26:08,316:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 09:26:08,316:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 09:26:08,317:INFO:[LightGBM] [Info] Number of positive: 29512, number of negative: 29512
2025-07-28 09:26:08,319:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000945 seconds.
2025-07-28 09:26:08,320:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-07-28 09:26:08,320:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-07-28 09:26:08,320:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 09:26:08,321:INFO:[LightGBM] [Info] Number of data points in the train set: 59024, number of used features: 5
2025-07-28 09:26:08,324:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 09:26:08,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:08,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,542:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:09,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:10,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:11,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 09:26:12,824:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 09:26:12,824:INFO:create_model() successfully completed......................................
2025-07-28 09:26:12,946:INFO:_master_model_container: 3
2025-07-28 09:26:12,947:INFO:_display_container: 3
2025-07-28 09:26:12,970:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 09:26:12,970:INFO:finalize_model() successfully completed......................................
2025-07-28 09:26:13,117:INFO:Initializing save_model()
2025-07-28 09:26:13,117:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lgbm, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-28 09:26:13,117:INFO:Adding model into prep_pipe
2025-07-28 09:26:13,117:WARNING:Only Model saved as it was a pipeline.
2025-07-28 09:26:13,380:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\modelo_treinado_lgbm.pkl saved in current working directory
2025-07-28 09:26:13,404:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 09:26:13,404:INFO:save_model() successfully completed......................................
2025-07-28 09:31:08,469:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:31:08,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:31:08,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:31:08,471:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 09:32:30,067:INFO:Initializing load_model()
2025-07-28 09:32:30,068:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\Modelos\modelo_treinado_lgbm, platform=None, authentication=None, verbose=True)
2025-07-28 09:32:31,070:INFO:Initializing predict_model()
2025-07-28 09:32:31,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000280BF7BF010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.4, bagging_freq=3,
                                feature_fraction=0.9, learning_rate=0.05,
                                min_child_samples=81, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                random_state=109, reg_alpha=2,
                                reg_lambda=0.5))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000280BF872840>)
2025-07-28 09:32:31,073:INFO:Checking exceptions
2025-07-28 09:32:31,074:INFO:Preloading libraries
2025-07-28 09:32:31,075:INFO:Set up data.
2025-07-28 09:32:31,109:INFO:Set up index.
2025-07-28 10:12:19,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:12:19,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:12:19,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:12:19,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:13:25,964:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:113: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-28 10:13:31,740:INFO:PyCaret ClassificationExperiment
2025-07-28 10:13:31,740:INFO:Logging name: clf-default-name
2025-07-28 10:13:31,740:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 10:13:31,740:INFO:version 3.3.2
2025-07-28 10:13:31,740:INFO:Initializing setup()
2025-07-28 10:13:31,742:INFO:self.USI: a691
2025-07-28 10:13:31,742:INFO:self._variable_keys: {'data', '_available_plots', 'X_train', '_ml_usecase', 'target_param', 'X_test', 'fold_shuffle_param', 'X', 'gpu_param', 'html_param', 'exp_id', 'n_jobs_param', 'idx', 'memory', 'USI', 'y_train', 'fold_groups_param', 'y_test', 'y', 'log_plots_param', 'fix_imbalance', 'is_multiclass', 'exp_name_log', 'fold_generator', 'pipeline', 'logging_param', 'seed', 'gpu_n_jobs_param'}
2025-07-28 10:13:31,742:INFO:Checking environment
2025-07-28 10:13:31,742:INFO:python_version: 3.11.9
2025-07-28 10:13:31,742:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-28 10:13:31,742:INFO:machine: AMD64
2025-07-28 10:13:31,777:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 10:13:31,783:INFO:Memory: svmem(total=16844595200, available=1901445120, percent=88.7, used=14943150080, free=1901445120)
2025-07-28 10:13:31,784:INFO:Physical Core: 4
2025-07-28 10:13:31,784:INFO:Logical Core: 8
2025-07-28 10:13:31,784:INFO:Checking libraries
2025-07-28 10:13:31,785:INFO:System:
2025-07-28 10:13:31,785:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-28 10:13:31,785:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-28 10:13:31,785:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 10:13:31,785:INFO:PyCaret required dependencies:
2025-07-28 10:13:31,914:INFO:                 pip: 25.1.1
2025-07-28 10:13:31,914:INFO:          setuptools: 65.5.0
2025-07-28 10:13:31,915:INFO:             pycaret: 3.3.2
2025-07-28 10:13:31,915:INFO:             IPython: 9.3.0
2025-07-28 10:13:31,915:INFO:          ipywidgets: 8.1.7
2025-07-28 10:13:31,916:INFO:                tqdm: 4.67.1
2025-07-28 10:13:31,916:INFO:               numpy: 1.26.4
2025-07-28 10:13:31,917:INFO:              pandas: 2.1.4
2025-07-28 10:13:31,917:INFO:              jinja2: 3.1.6
2025-07-28 10:13:31,917:INFO:               scipy: 1.11.4
2025-07-28 10:13:31,917:INFO:              joblib: 1.3.2
2025-07-28 10:13:31,917:INFO:             sklearn: 1.4.2
2025-07-28 10:13:31,917:INFO:                pyod: 2.0.5
2025-07-28 10:13:31,917:INFO:            imblearn: 0.13.0
2025-07-28 10:13:31,917:INFO:   category_encoders: 2.7.0
2025-07-28 10:13:31,917:INFO:            lightgbm: 4.6.0
2025-07-28 10:13:31,917:INFO:               numba: 0.61.2
2025-07-28 10:13:31,917:INFO:            requests: 2.32.4
2025-07-28 10:13:31,917:INFO:          matplotlib: 3.7.5
2025-07-28 10:13:31,917:INFO:          scikitplot: 0.3.7
2025-07-28 10:13:31,917:INFO:         yellowbrick: 1.5
2025-07-28 10:13:31,918:INFO:              plotly: 5.24.1
2025-07-28 10:13:31,918:INFO:    plotly-resampler: Not installed
2025-07-28 10:13:31,918:INFO:             kaleido: 1.0.0
2025-07-28 10:13:31,918:INFO:           schemdraw: 0.15
2025-07-28 10:13:31,918:INFO:         statsmodels: 0.14.4
2025-07-28 10:13:31,918:INFO:              sktime: 0.26.0
2025-07-28 10:13:31,918:INFO:               tbats: 1.1.3
2025-07-28 10:13:31,918:INFO:            pmdarima: 2.0.4
2025-07-28 10:13:31,918:INFO:              psutil: 7.0.0
2025-07-28 10:13:31,918:INFO:          markupsafe: 3.0.2
2025-07-28 10:13:31,919:INFO:             pickle5: Not installed
2025-07-28 10:13:31,919:INFO:         cloudpickle: 3.1.1
2025-07-28 10:13:31,919:INFO:         deprecation: 2.1.0
2025-07-28 10:13:31,919:INFO:              xxhash: 3.5.0
2025-07-28 10:13:31,919:INFO:           wurlitzer: Not installed
2025-07-28 10:13:31,919:INFO:PyCaret optional dependencies:
2025-07-28 10:13:32,027:INFO:                shap: 0.48.0
2025-07-28 10:13:32,027:INFO:           interpret: Not installed
2025-07-28 10:13:32,027:INFO:                umap: Not installed
2025-07-28 10:13:32,027:INFO:     ydata_profiling: Not installed
2025-07-28 10:13:32,027:INFO:  explainerdashboard: Not installed
2025-07-28 10:13:32,027:INFO:             autoviz: Not installed
2025-07-28 10:13:32,027:INFO:           fairlearn: Not installed
2025-07-28 10:13:32,027:INFO:          deepchecks: Not installed
2025-07-28 10:13:32,027:INFO:             xgboost: 3.0.2
2025-07-28 10:13:32,027:INFO:            catboost: 1.2.8
2025-07-28 10:13:32,027:INFO:              kmodes: Not installed
2025-07-28 10:13:32,027:INFO:             mlxtend: Not installed
2025-07-28 10:13:32,027:INFO:       statsforecast: Not installed
2025-07-28 10:13:32,027:INFO:        tune_sklearn: Not installed
2025-07-28 10:13:32,027:INFO:                 ray: Not installed
2025-07-28 10:13:32,027:INFO:            hyperopt: Not installed
2025-07-28 10:13:32,028:INFO:              optuna: Not installed
2025-07-28 10:13:32,028:INFO:               skopt: Not installed
2025-07-28 10:13:32,028:INFO:              mlflow: Not installed
2025-07-28 10:13:32,028:INFO:              gradio: Not installed
2025-07-28 10:13:32,028:INFO:             fastapi: Not installed
2025-07-28 10:13:32,028:INFO:             uvicorn: Not installed
2025-07-28 10:13:32,028:INFO:              m2cgen: Not installed
2025-07-28 10:13:32,028:INFO:           evidently: Not installed
2025-07-28 10:13:32,028:INFO:               fugue: Not installed
2025-07-28 10:13:32,028:INFO:           streamlit: Not installed
2025-07-28 10:13:32,028:INFO:             prophet: Not installed
2025-07-28 10:13:32,028:INFO:None
2025-07-28 10:13:32,028:INFO:Set up data.
2025-07-28 10:13:32,032:INFO:Set up folding strategy.
2025-07-28 10:13:32,032:INFO:Set up train/test split.
2025-07-28 10:13:32,049:INFO:Set up index.
2025-07-28 10:13:32,050:INFO:Assigning column types.
2025-07-28 10:13:32,055:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 10:13:32,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,150:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,154:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,388:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,396:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,397:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 10:13:32,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,501:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,504:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:13:32,619:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,622:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,623:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 10:13:32,731:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,735:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,844:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:32,848:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:32,852:INFO:Preparing preprocessing pipeline...
2025-07-28 10:13:32,853:INFO:Set up simple imputation.
2025-07-28 10:13:32,860:INFO:Set up encoding of categorical features.
2025-07-28 10:13:32,860:INFO:Set up imbalanced handling.
2025-07-28 10:13:32,861:INFO:Set up column name cleaning.
2025-07-28 10:13:33,071:INFO:Finished creating preprocessing pipeline.
2025-07-28 10:13:33,085:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-28 10:13:33,085:INFO:Creating final display dataframe.
2025-07-28 10:13:33,224:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (34489, 6)
4        Transformed data shape        (51663, 6)
5   Transformed train set shape        (41316, 6)
6    Transformed test set shape        (10347, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              a691
2025-07-28 10:13:33,383:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:33,392:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:33,614:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:13:33,623:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:13:33,628:INFO:setup() successfully completed in 1.98s...............
2025-07-28 10:13:33,629:INFO:Initializing create_model()
2025-07-28 10:13:33,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025EA7F0D7D0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=-1, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 10:13:33,630:INFO:Checking exceptions
2025-07-28 10:14:46,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:14:46,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:14:46,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:14:46,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:15:47,804:WARNING:c:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\modelo_irf.py:113: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
  df_events.groupby('Vendor')['start'].cumsum() - df_events.groupby('Vendor')['end'].cumsum()

2025-07-28 10:15:56,240:INFO:PyCaret ClassificationExperiment
2025-07-28 10:15:56,240:INFO:Logging name: clf-default-name
2025-07-28 10:15:56,241:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-28 10:15:56,241:INFO:version 3.3.2
2025-07-28 10:15:56,242:INFO:Initializing setup()
2025-07-28 10:15:56,242:INFO:self.USI: 6c60
2025-07-28 10:15:56,243:INFO:self._variable_keys: {'idx', 'exp_id', 'html_param', 'log_plots_param', 'fold_shuffle_param', 'y', 'gpu_param', 'X_train', 'exp_name_log', 'X', 'is_multiclass', 'USI', 'logging_param', 'y_test', 'target_param', 'memory', '_ml_usecase', 'fix_imbalance', 'data', 'pipeline', 'y_train', '_available_plots', 'fold_generator', 'seed', 'fold_groups_param', 'n_jobs_param', 'X_test', 'gpu_n_jobs_param'}
2025-07-28 10:15:56,243:INFO:Checking environment
2025-07-28 10:15:56,243:INFO:python_version: 3.11.9
2025-07-28 10:15:56,244:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-07-28 10:15:56,244:INFO:machine: AMD64
2025-07-28 10:15:56,307:INFO:platform: Windows-10-10.0.22631-SP0
2025-07-28 10:15:56,316:INFO:Memory: svmem(total=16844595200, available=854446080, percent=94.9, used=15990149120, free=854446080)
2025-07-28 10:15:56,317:INFO:Physical Core: 4
2025-07-28 10:15:56,317:INFO:Logical Core: 8
2025-07-28 10:15:56,317:INFO:Checking libraries
2025-07-28 10:15:56,317:INFO:System:
2025-07-28 10:15:56,317:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-07-28 10:15:56,317:INFO:executable: C:\Users\CSUGAB01\OneDrive - ANDRITZ AG\Documents\Python\IRF - Teste Base OTP\.venv\Scripts\python.exe
2025-07-28 10:15:56,318:INFO:   machine: Windows-10-10.0.22631-SP0
2025-07-28 10:15:56,318:INFO:PyCaret required dependencies:
2025-07-28 10:15:56,486:INFO:                 pip: 25.1.1
2025-07-28 10:15:56,487:INFO:          setuptools: 65.5.0
2025-07-28 10:15:56,487:INFO:             pycaret: 3.3.2
2025-07-28 10:15:56,487:INFO:             IPython: 9.3.0
2025-07-28 10:15:56,487:INFO:          ipywidgets: 8.1.7
2025-07-28 10:15:56,487:INFO:                tqdm: 4.67.1
2025-07-28 10:15:56,487:INFO:               numpy: 1.26.4
2025-07-28 10:15:56,487:INFO:              pandas: 2.1.4
2025-07-28 10:15:56,487:INFO:              jinja2: 3.1.6
2025-07-28 10:15:56,487:INFO:               scipy: 1.11.4
2025-07-28 10:15:56,487:INFO:              joblib: 1.3.2
2025-07-28 10:15:56,487:INFO:             sklearn: 1.4.2
2025-07-28 10:15:56,487:INFO:                pyod: 2.0.5
2025-07-28 10:15:56,487:INFO:            imblearn: 0.13.0
2025-07-28 10:15:56,488:INFO:   category_encoders: 2.7.0
2025-07-28 10:15:56,488:INFO:            lightgbm: 4.6.0
2025-07-28 10:15:56,488:INFO:               numba: 0.61.2
2025-07-28 10:15:56,488:INFO:            requests: 2.32.4
2025-07-28 10:15:56,488:INFO:          matplotlib: 3.7.5
2025-07-28 10:15:56,488:INFO:          scikitplot: 0.3.7
2025-07-28 10:15:56,488:INFO:         yellowbrick: 1.5
2025-07-28 10:15:56,488:INFO:              plotly: 5.24.1
2025-07-28 10:15:56,488:INFO:    plotly-resampler: Not installed
2025-07-28 10:15:56,488:INFO:             kaleido: 1.0.0
2025-07-28 10:15:56,489:INFO:           schemdraw: 0.15
2025-07-28 10:15:56,489:INFO:         statsmodels: 0.14.4
2025-07-28 10:15:56,489:INFO:              sktime: 0.26.0
2025-07-28 10:15:56,489:INFO:               tbats: 1.1.3
2025-07-28 10:15:56,489:INFO:            pmdarima: 2.0.4
2025-07-28 10:15:56,489:INFO:              psutil: 7.0.0
2025-07-28 10:15:56,489:INFO:          markupsafe: 3.0.2
2025-07-28 10:15:56,489:INFO:             pickle5: Not installed
2025-07-28 10:15:56,489:INFO:         cloudpickle: 3.1.1
2025-07-28 10:15:56,489:INFO:         deprecation: 2.1.0
2025-07-28 10:15:56,489:INFO:              xxhash: 3.5.0
2025-07-28 10:15:56,489:INFO:           wurlitzer: Not installed
2025-07-28 10:15:56,490:INFO:PyCaret optional dependencies:
2025-07-28 10:15:56,611:INFO:                shap: 0.48.0
2025-07-28 10:15:56,611:INFO:           interpret: Not installed
2025-07-28 10:15:56,611:INFO:                umap: Not installed
2025-07-28 10:15:56,611:INFO:     ydata_profiling: Not installed
2025-07-28 10:15:56,611:INFO:  explainerdashboard: Not installed
2025-07-28 10:15:56,611:INFO:             autoviz: Not installed
2025-07-28 10:15:56,611:INFO:           fairlearn: Not installed
2025-07-28 10:15:56,611:INFO:          deepchecks: Not installed
2025-07-28 10:15:56,612:INFO:             xgboost: 3.0.2
2025-07-28 10:15:56,612:INFO:            catboost: 1.2.8
2025-07-28 10:15:56,612:INFO:              kmodes: Not installed
2025-07-28 10:15:56,612:INFO:             mlxtend: Not installed
2025-07-28 10:15:56,612:INFO:       statsforecast: Not installed
2025-07-28 10:15:56,612:INFO:        tune_sklearn: Not installed
2025-07-28 10:15:56,612:INFO:                 ray: Not installed
2025-07-28 10:15:56,612:INFO:            hyperopt: Not installed
2025-07-28 10:15:56,612:INFO:              optuna: Not installed
2025-07-28 10:15:56,612:INFO:               skopt: Not installed
2025-07-28 10:15:56,612:INFO:              mlflow: Not installed
2025-07-28 10:15:56,612:INFO:              gradio: Not installed
2025-07-28 10:15:56,612:INFO:             fastapi: Not installed
2025-07-28 10:15:56,612:INFO:             uvicorn: Not installed
2025-07-28 10:15:56,613:INFO:              m2cgen: Not installed
2025-07-28 10:15:56,613:INFO:           evidently: Not installed
2025-07-28 10:15:56,613:INFO:               fugue: Not installed
2025-07-28 10:15:56,613:INFO:           streamlit: Not installed
2025-07-28 10:15:56,613:INFO:             prophet: Not installed
2025-07-28 10:15:56,613:INFO:None
2025-07-28 10:15:56,613:INFO:Set up data.
2025-07-28 10:15:56,625:INFO:Set up folding strategy.
2025-07-28 10:15:56,625:INFO:Set up train/test split.
2025-07-28 10:15:56,653:INFO:Set up index.
2025-07-28 10:15:56,654:INFO:Assigning column types.
2025-07-28 10:15:56,661:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-28 10:15:56,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:15:56,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:15:56,885:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:56,890:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:57,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-28 10:15:57,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:15:57,275:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:57,284:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:57,284:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-28 10:15:57,413:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:15:57,499:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:57,507:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:57,688:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-28 10:15:57,789:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:57,797:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:57,799:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-28 10:15:58,039:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:58,044:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:58,276:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:58,283:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:58,289:INFO:Preparing preprocessing pipeline...
2025-07-28 10:15:58,293:INFO:Set up simple imputation.
2025-07-28 10:15:58,302:INFO:Set up encoding of categorical features.
2025-07-28 10:15:58,303:INFO:Set up imbalanced handling.
2025-07-28 10:15:58,305:INFO:Set up column name cleaning.
2025-07-28 10:15:58,595:INFO:Finished creating preprocessing pipeline.
2025-07-28 10:15:58,615:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-07-28 10:15:58,615:INFO:Creating final display dataframe.
2025-07-28 10:15:58,799:INFO:Setup _display_container:                     Description             Value
0                    Session id               109
1                        Target           On Time
2                   Target type            Binary
3           Original data shape        (34489, 6)
4        Transformed data shape        (51663, 6)
5   Transformed train set shape        (41316, 6)
6    Transformed test set shape        (10347, 6)
7              Numeric features                 3
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                Fix imbalance              True
16         Fix imbalance method             SMOTE
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              6c60
2025-07-28 10:15:59,049:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:59,059:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:59,319:INFO:Soft dependency imported: xgboost: 3.0.2
2025-07-28 10:15:59,327:INFO:Soft dependency imported: catboost: 1.2.8
2025-07-28 10:15:59,331:INFO:setup() successfully completed in 3.14s...............
2025-07-28 10:15:59,334:INFO:Initializing create_model()
2025-07-28 10:15:59,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 10:15:59,334:INFO:Checking exceptions
2025-07-28 10:15:59,335:INFO:Importing libraries
2025-07-28 10:15:59,336:INFO:Copying training dataset
2025-07-28 10:15:59,361:INFO:Defining folds
2025-07-28 10:15:59,362:INFO:Declaring metric variables
2025-07-28 10:15:59,362:INFO:Importing untrained model
2025-07-28 10:15:59,365:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 10:15:59,365:INFO:Starting cross validation
2025-07-28 10:15:59,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 10:16:26,161:INFO:Calculating mean and std
2025-07-28 10:16:26,163:INFO:Creating metrics dataframe
2025-07-28 10:16:26,166:INFO:Finalizing model
2025-07-28 10:16:26,453:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 10:16:26,454:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 10:16:26,457:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001594 seconds.
2025-07-28 10:16:26,458:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 10:16:26,461:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 10:16:26,461:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 10:16:26,462:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 10:16:26,790:INFO:Uploading results into container
2025-07-28 10:16:26,792:INFO:Uploading model into container now
2025-07-28 10:16:26,792:INFO:_master_model_container: 1
2025-07-28 10:16:26,793:INFO:_display_container: 2
2025-07-28 10:16:26,794:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 10:16:26,794:INFO:create_model() successfully completed......................................
2025-07-28 10:16:26,989:INFO:Initializing tune_model()
2025-07-28 10:16:26,989:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=5, custom_grid=None, optimize=MCC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=False, tuner_verbose=True, return_train_score=False, kwargs={})
2025-07-28 10:16:26,989:INFO:Checking exceptions
2025-07-28 10:16:27,009:INFO:Copying training dataset
2025-07-28 10:16:27,023:INFO:Checking base model
2025-07-28 10:16:27,024:INFO:Base model : Light Gradient Boosting Machine
2025-07-28 10:16:27,026:INFO:Declaring metric variables
2025-07-28 10:16:27,026:INFO:Defining Hyperparameters
2025-07-28 10:16:27,145:INFO:Tuning with n_jobs=-1
2025-07-28 10:16:27,145:INFO:Initializing RandomizedSearchCV
2025-07-28 10:18:46,571:INFO:best_params: {'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 150, 'actual_estimator__n_estimators': 290, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 81, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.4}
2025-07-28 10:18:46,572:INFO:Hyperparameter search completed
2025-07-28 10:18:46,573:INFO:SubProcess create_model() called ==================================
2025-07-28 10:18:46,574:INFO:Initializing create_model()
2025-07-28 10:18:46,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FAF1ED9210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 0.5, 'reg_alpha': 2, 'num_leaves': 150, 'n_estimators': 290, 'min_split_gain': 0.6, 'min_child_samples': 81, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 3, 'bagging_fraction': 0.4})
2025-07-28 10:18:46,577:INFO:Checking exceptions
2025-07-28 10:18:46,577:INFO:Importing libraries
2025-07-28 10:18:46,577:INFO:Copying training dataset
2025-07-28 10:18:46,605:INFO:Defining folds
2025-07-28 10:18:46,605:INFO:Declaring metric variables
2025-07-28 10:18:46,606:INFO:Importing untrained model
2025-07-28 10:18:46,606:INFO:Declaring custom model
2025-07-28 10:18:46,609:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 10:18:46,609:INFO:Starting cross validation
2025-07-28 10:18:46,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 10:19:24,460:INFO:Calculating mean and std
2025-07-28 10:19:24,462:INFO:Creating metrics dataframe
2025-07-28 10:19:24,466:INFO:Finalizing model
2025-07-28 10:19:24,733:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:24,734:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:24,734:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:24,769:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 10:19:24,769:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:24,769:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:24,769:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:24,771:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 10:19:24,791:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.019204 seconds.
2025-07-28 10:19:24,791:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 10:19:24,791:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 10:19:24,793:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 10:19:24,797:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 10:19:25,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:25,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:26,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:27,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:28,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:29,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:30,165:INFO:Uploading results into container
2025-07-28 10:19:30,166:INFO:Uploading model into container now
2025-07-28 10:19:30,166:INFO:_master_model_container: 2
2025-07-28 10:19:30,166:INFO:_display_container: 3
2025-07-28 10:19:30,168:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 10:19:30,168:INFO:create_model() successfully completed......................................
2025-07-28 10:19:30,298:INFO:SubProcess create_model() end ==================================
2025-07-28 10:19:30,298:INFO:choose_better activated
2025-07-28 10:19:30,299:INFO:SubProcess create_model() called ==================================
2025-07-28 10:19:30,300:INFO:Initializing create_model()
2025-07-28 10:19:30,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 10:19:30,300:INFO:Checking exceptions
2025-07-28 10:19:30,301:INFO:Importing libraries
2025-07-28 10:19:30,301:INFO:Copying training dataset
2025-07-28 10:19:30,320:INFO:Defining folds
2025-07-28 10:19:30,320:INFO:Declaring metric variables
2025-07-28 10:19:30,321:INFO:Importing untrained model
2025-07-28 10:19:30,321:INFO:Declaring custom model
2025-07-28 10:19:30,323:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 10:19:30,323:INFO:Starting cross validation
2025-07-28 10:19:30,326:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-07-28 10:19:35,535:INFO:Calculating mean and std
2025-07-28 10:19:35,536:INFO:Creating metrics dataframe
2025-07-28 10:19:35,539:INFO:Finalizing model
2025-07-28 10:19:35,865:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 10:19:35,868:INFO:[LightGBM] [Info] Number of positive: 20658, number of negative: 20658
2025-07-28 10:19:35,871:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002724 seconds.
2025-07-28 10:19:35,871:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 10:19:35,871:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 10:19:35,871:INFO:[LightGBM] [Info] Number of data points in the train set: 41316, number of used features: 5
2025-07-28 10:19:35,871:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 10:19:36,342:INFO:Uploading results into container
2025-07-28 10:19:36,343:INFO:Uploading model into container now
2025-07-28 10:19:36,343:INFO:_master_model_container: 3
2025-07-28 10:19:36,343:INFO:_display_container: 4
2025-07-28 10:19:36,345:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 10:19:36,346:INFO:create_model() successfully completed......................................
2025-07-28 10:19:36,464:INFO:SubProcess create_model() end ==================================
2025-07-28 10:19:36,465:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=109, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.4945
2025-07-28 10:19:36,467:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for MCC is 0.5215
2025-07-28 10:19:36,468:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2025-07-28 10:19:36,469:INFO:choose_better completed
2025-07-28 10:19:36,469:INFO:_master_model_container: 3
2025-07-28 10:19:36,469:INFO:_display_container: 3
2025-07-28 10:19:36,471:INFO:LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 10:19:36,472:INFO:tune_model() successfully completed......................................
2025-07-28 10:19:36,579:INFO:Initializing plot_model()
2025-07-28 10:19:36,580:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 10:19:36,580:INFO:Checking exceptions
2025-07-28 10:19:36,587:INFO:Preloading libraries
2025-07-28 10:19:36,733:INFO:Copying training dataset
2025-07-28 10:19:36,735:INFO:Plot type: feature
2025-07-28 10:19:36,736:WARNING:No coef_ found. Trying feature_importances_
2025-07-28 10:19:37,477:INFO:Saving 'Feature Importance.png'
2025-07-28 10:19:37,759:INFO:Visual Rendered Successfully
2025-07-28 10:19:37,877:INFO:plot_model() successfully completed......................................
2025-07-28 10:19:37,878:INFO:Initializing plot_model()
2025-07-28 10:19:37,879:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-07-28 10:19:37,879:INFO:Checking exceptions
2025-07-28 10:19:37,887:INFO:Preloading libraries
2025-07-28 10:19:38,048:INFO:Copying training dataset
2025-07-28 10:19:38,049:INFO:Plot type: confusion_matrix
2025-07-28 10:19:38,451:INFO:Fitting Model
2025-07-28 10:19:38,452:INFO:Scoring test/hold-out set
2025-07-28 10:19:38,453:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:38,454:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:38,454:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:38,586:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:38,586:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:38,586:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:38,776:INFO:Saving 'Confusion Matrix.png'
2025-07-28 10:19:38,994:INFO:Visual Rendered Successfully
2025-07-28 10:19:39,135:INFO:plot_model() successfully completed......................................
2025-07-28 10:19:39,138:INFO:Initializing finalize_model()
2025-07-28 10:19:39,138:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-28 10:19:39,140:INFO:Finalizing LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-28 10:19:39,152:INFO:Initializing create_model()
2025-07-28 10:19:39,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FA9B044F90>, estimator=LGBMClassifier(bagging_fraction=0.4, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=81, min_child_weight=0.001, min_split_gain=0.6,
               n_estimators=290, n_jobs=-1, num_leaves=150, objective=None,
               random_state=109, reg_alpha=2, reg_lambda=0.5, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-28 10:19:39,154:INFO:Checking exceptions
2025-07-28 10:19:39,157:INFO:Importing libraries
2025-07-28 10:19:39,157:INFO:Copying training dataset
2025-07-28 10:19:39,158:INFO:Defining folds
2025-07-28 10:19:39,159:INFO:Declaring metric variables
2025-07-28 10:19:39,159:INFO:Importing untrained model
2025-07-28 10:19:39,160:INFO:Declaring custom model
2025-07-28 10:19:39,163:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-28 10:19:39,165:INFO:Cross validation set to False
2025-07-28 10:19:39,166:INFO:Fitting Model
2025-07-28 10:19:39,515:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:39,515:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:39,515:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:39,561:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-07-28 10:19:39,561:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2025-07-28 10:19:39,561:INFO:[LightGBM] [Warning] bagging_fraction is set=0.4, subsample=1.0 will be ignored. Current value: bagging_fraction=0.4
2025-07-28 10:19:39,562:INFO:[LightGBM] [Warning] bagging_freq is set=3, subsample_freq=0 will be ignored. Current value: bagging_freq=3
2025-07-28 10:19:39,562:INFO:[LightGBM] [Info] Number of positive: 29512, number of negative: 29512
2025-07-28 10:19:39,565:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002312 seconds.
2025-07-28 10:19:39,566:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-07-28 10:19:39,566:INFO:[LightGBM] [Info] Total Bins 1274
2025-07-28 10:19:39,567:INFO:[LightGBM] [Info] Number of data points in the train set: 59024, number of used features: 5
2025-07-28 10:19:39,568:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2025-07-28 10:19:39,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,622:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:39,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:40,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,537:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:41,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:42,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:43,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-07-28 10:19:44,035:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 10:19:44,035:INFO:create_model() successfully completed......................................
2025-07-28 10:19:44,132:INFO:_master_model_container: 3
2025-07-28 10:19:44,132:INFO:_display_container: 3
2025-07-28 10:19:44,148:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 10:19:44,148:INFO:finalize_model() successfully completed......................................
2025-07-28 10:19:44,285:INFO:Initializing save_model()
2025-07-28 10:19:44,285:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\Modelos\modelo_treinado_lgbm, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\CSUGAB01\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categori...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              random_state=109,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-28 10:19:44,285:INFO:Adding model into prep_pipe
2025-07-28 10:19:44,285:WARNING:Only Model saved as it was a pipeline.
2025-07-28 10:19:44,493:INFO:S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\Modelos\modelo_treinado_lgbm.pkl saved in current working directory
2025-07-28 10:19:44,512:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=Non...
                                boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=81,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                objective=None, random_state=109, reg_alpha=2,
                                reg_lambda=0.5, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-07-28 10:19:44,512:INFO:save_model() successfully completed......................................
2025-07-28 10:20:11,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:20:11,654:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:20:11,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:20:11,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:21:17,360:INFO:Initializing load_model()
2025-07-28 10:21:17,361:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\Modelos\modelo_treinado_lgbm, platform=None, authentication=None, verbose=True)
2025-07-28 10:21:18,314:INFO:Initializing predict_model()
2025-07-28 10:21:18,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028AC8757F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.4, bagging_freq=3,
                                feature_fraction=0.9, learning_rate=0.05,
                                min_child_samples=81, min_split_gain=0.6,
                                n_estimators=290, n_jobs=-1, num_leaves=150,
                                random_state=109, reg_alpha=2,
                                reg_lambda=0.5))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028AC499A840>)
2025-07-28 10:21:18,317:INFO:Checking exceptions
2025-07-28 10:21:18,317:INFO:Preloading libraries
2025-07-28 10:21:18,318:INFO:Set up data.
2025-07-28 10:21:18,340:INFO:Set up index.
2025-07-28 10:25:20,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:25:20,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:25:20,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:25:20,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-28 10:26:05,150:INFO:Initializing load_model()
2025-07-28 10:26:05,151:INFO:load_model(model_name=S:\Procurement\FUP\IRF - Índice de Risco de Fornecedores\Modelo de Machine Learning\Modelos\modelo_treinado_lightgbm, platform=None, authentication=None, verbose=True)
2025-07-28 10:26:06,127:INFO:Initializing predict_model()
2025-07-28 10:26:06,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000221D5562550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['NetOrderValue',
                                             'Dias Para Entrega',
                                             'carga_fornecedor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['MATKL', 'Vendor'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['MAT...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=109)))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=2,
                                feature_fraction=0.8, learning_rate=0.2,
                                min_child_samples=56, min_split_gain=0.2,
                                n_estimators=270, n_jobs=-1, num_leaves=90,
                                random_state=109, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000221D560E840>)
2025-07-28 10:26:06,131:INFO:Checking exceptions
2025-07-28 10:26:06,131:INFO:Preloading libraries
2025-07-28 10:26:06,132:INFO:Set up data.
2025-07-28 10:26:06,171:INFO:Set up index.
